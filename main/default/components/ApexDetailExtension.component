<apex:component >
	<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" />
    
   	<apex:attribute name="formID" description="The ID to of the form the extended controls are contained in" type="String" required="false"/>
   	<apex:attribute name="onLoad" description="The javascript to execute when the component has loaded" type="String" required="false"/>
   	
    <script type="text/javascript">
		{!IF(ISNULL(formID), "", "jQuery('form[id$=" + formID + "]').find('input[id$=customButton]').css('visibility', 'hidden');")}
		
		jQuery(document).ready(function(){
			//Run once per page
			if(sfdcPage.apexDetailExtended == undefined){
				sfdcPage.apexDetailExtended = true;
				
				//Check for inline edit mode
				sfdcPage.inlinEditModeEnabled = jQuery('.inlineEditWrite').length > 0;
				if(sfdcPage.inlinEditModeEnabled){
					
					sfdcPage.oldDblClickField = sfdcPage.dblClickField;
					sfdcPage.dblClickField = function(x, y){
						sfdcPage.oldDblClickField(x, y);
						jQuery(sfdcPage).trigger('afterDblClick');
						showHideCustomButtons();
					}
					
					sfdcPage.oldRevert = sfdcPage.revert;
					sfdcPage.revert = function(x){
						var sfj = jQuery(sfdcPage);
						sfj.trigger('beforeRevert');
						this.oldRevert(x);
						sfj.trigger('afterRevert');
						showHideCustomButtons();
					}
					
					sfdcPage.oldSave = sfdcPage.save;
					sfdcPage.save = function(x){
						var sfj = jQuery(sfdcPage);
						sfj.trigger('beforeSave');
						this.oldSave(x);
						sfj.trigger('afterSave');
					}
				}
			}
			
			if('{!formID}' != ''){
				jQuery('form[id$={!formID}]').find('input[id$=customButton]').each(function() {
					moveCustomButtonInline(jQuery(this), false);
				});
			}
			
			{!onLoad}
		});
		
		function showHideCustomButtons(){
			jQuery('input[name="inlineEditCancel"]').each(function() {
				if (jQuery(this).css('display').indexOf('none') !== -1)
					jQuery(this).parent().find('input[id$=customButton]').show();
				else
					jQuery(this).parent().find('input[id$=customButton]').hide();
			});
		}
		
		function moveCustomButtonInline(btn, before){
			var parent = btn.parentsUntil('div.bPageBlock');
			
			if(parent.length > 0){
				var topRow = parent.find('td[id^=topButtonRow]');
				var bottomRow = parent.find('td[id^=bottomButtonRow]');
				
				var btn2 = (bottomRow.length > 0) ? btn.clone() : null;
				
				if(topRow.length > 0){
					if(before)
						btn.prependTo(topRow);
					else
						btn.appendTo(topRow);
					btn.css('visibility', 'visible');
				}
				
				if(btn2 != null){
					if(before)
						btn2.prependTo(bottomRow);
					else
						btn2.appendTo(bottomRow);
					
					btn2.css('visibility', 'visible');
				}
			}
		}
		
		function collapsePBS(pbs){
			pbs.find('img.hideListButton').each(function(){
				twistSection(jQuery(this)[0]);
			});
		}
		
		function createPageSection(id, headerText, pbBody, headerElement){
			if(headerElement != null && (headerElement == undefined || headerElement.length == 0))
				headerElement = null;
			
			var ps = jQuery('<div class="pbSubsection customSection"></div>');
			ps.attr('id', id);

			var psh = pbBody.find('div.pbSubheader[id=' + id + 'Header]');
			if(psh.length == 0){
				var pbsh;
                pbsh = pbBody.find('.pbSubheader').children('img.hideListButton').last().parent();
				if (pbsh.length == 0)
                    pbsh = pbBody.find('.pbSubheader').children('h3').last().parent();

				if(pbsh.length > 0){
					psh = pbsh.clone();
					
					if(psh.length > 0){
						psh.attr('id', id + 'Header');
						psh.attr('name', id + 'Header');
						psh.children('h3').text(headerText);
					}
					
					if(headerElement != null){
						psh.append('<span class="headerElement"></span>');
						psh.children('span.headerElement').append(headerElement);
					}
					
					psh.insertBefore(pbsh);
				}
			}
			
			if(psh.length > 0)
				ps.insertAfter(psh);
			else if(headerElement != null)
				headerElement.css('display', 'none');
		}
		
		function createListHoverLink(elemName, linkText, pbBody){
			var elem = pbBody.find('[name=' + elemName + ']');
			var customLinkList = pbBody.closest('td[id=bodyCell]').find('.customHoverLinks');
			if(customLinkList.length == 0){
				var linkList = pbBody.closest('td[id=bodyCell]').find('.listHoverLinks');
				jQuery('<div class="customHoverLinks"></div>').insertAfter(linkList);
				customLinkList = pbBody.closest('td[id=bodyCell]').find('.customHoverLinks');
			}
			if(elem.length > 0 && customLinkList.length > 0){
				customLinkList.append('<a class="linklet" href="#' + elemName + '"><span class="listTitle">' + linkText + '</span></a>');
			}
		}
		
		function appendElement(elem, appendTo){
			if(elem == undefined || elem == null || elem.length == 0 || appendTo == undefined || appendTo == null || appendTo.length == 0)
				return;
			
			elem.detach();
			appendTo.append(elem);
		}
    </script>
	<style type="text/css">
		.customHoverLinks{
			display: block;
		    font-size: 90%;
		    line-height: 1.5em;
		    text-align: center;
		    padding: 3px 6px 6px 3px;
		}
		
		.customHoverLinks a.linklet{
		    padding: 3px 6px 6px 3px;
		}
	</style>
</apex:component>