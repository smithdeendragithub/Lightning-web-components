<apex:page controller="HoursController" tabstyle="User">
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" />
	<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.13/jquery-ui.min.js" />
	
	<apex:outputPanel id="out">
		<apex:pageMessages />
	</apex:outputPanel>
	<apex:form rendered="{!hasPageAccess}">
		<apex:pageBlock id="config">
			<apex:pageBlockSection columns="1">
				<apex:pageBlockSection columns="2">
					<apex:inputText label="Year"  style="width:60px" value="{!year}" onchange="getWeeks(); return false;"/>
					<apex:selectList label="View hours for" value="{!selectedProjectOption}" multiselect="false" size="1" onchange="reloadData(); return false;">
						<apex:selectOptions value="{!projectViewOptions}"/>
					</apex:selectList>
					<apex:selectList label="Week starting" id="sl_weeks" value="{!currentWeekStr}" multiselect="false" size="1" onchange="reloadData(); return false;">
						<apex:selectOptions value="{!weekSelections}"/>
					</apex:selectList>
				</apex:pageBlockSection>
			</apex:pageBlockSection>
		</apex:pageBlock>
		<apex:pageBlock id="pbs_users">
			<apex:pageBlockButtons location="both">
				<apex:commandButton value="Save hours for week starting {!currentWeekStr}" onclick="save(); return false;" rendered="{!NOT(readOnlyMode)}"/>
			</apex:pageBlockButtons>
			<apex:pageBlockSection columns="1">
				<apex:repeat value="{!users}" var="u">
					<apex:variable var="canManageUser" value="{!isTeamManager && (u.Id == $User.Id || u.ManagerId == $User.Id || u.Managers_Manager__c == $User.Id)}"/>
					<apex:variable var="canManageWeek" value="{!canManageUser || u.Id == $User.Id}"/>
					<apex:pageBlockSection columns="1" title="Hours for {!u.Name}">
						<apex:dataTable value="{!resourcesByUserID[u.Id]}" var="pr" cellspacing="0" cellpadding="0" border="0" styleClass="list" headerClass="headerRow">
							<apex:column >
								<apex:facet name="header">Project</apex:facet>
								<apex:outputLink value="../{!pr.Project__c}">{!projects[pr.Project__c].Name}</apex:outputLink>
							</apex:column>
							<apex:column >
								<apex:facet name="header">Role</apex:facet>
								<apex:outputLink value="../{!pr.Id}" rendered="{!canManageUser}">{!pr.Resource_Role__c}</apex:outputLink>
								<apex:outputText rendered="{!NOT(canManageUser)}">{!pr.Resource_Role__c}</apex:outputText>
							</apex:column>
							
							<apex:column width="70px">
								<apex:facet name="header">Actual Hours</apex:facet>
								<apex:inputText id="actualHours" value="{!projectResourceHours[pr.Id].Actual_Hours__c}" style="width:70px"
									onchange="hoursUpdated(this, 'actualHours', 'actualHoursTotal'); return false;" rendered="{!NOT(readOnlyMode) && canManageWeek}"/>
								<apex:outputText value="{!projectResourceHours[pr.Id].Actual_Hours__c}" rendered="{!readOnlyMode || NOT(canManageWeek)}" style="width:70px"/>
								<apex:facet name="footer">
									<apex:outputText style="width:70px" rendered="{!NOT(ISNULL(actualHours))}">
										Total: <apex:outputText id="actualHoursTotal" value="{!actualHours[u.Id]}" styleClass="{!IF(actualHours[u.Id] < 40, "errored", "")}"/>
									</apex:outputText>
								</apex:facet>
							</apex:column>
							<apex:column >
								<apex:facet name="header">Notes</apex:facet>
								<apex:inputTextArea value="{!projectResourceHours[pr.Id].Notes__c}" rows="1" style="width:90%"
																		onfocus="jQuery(this).attr('rows', 8)" onblur="jQuery(this).attr('rows', 1)"
																		onkeydown="limitText(this, 255);" onkeyup="limitText(this, 255);" onchange="limitText(this, 255);"
																		 rendered="{!NOT(readOnlyMode) && canManageWeek}"/>
								<apex:outputText value="{!projectResourceHours[pr.Id].Notes__c}" rendered="{!readOnlyMode || NOT(canManageWeek)}" style="width:70px"/>
							</apex:column>
							<apex:column width="150px" rendered="false">
								<apex:facet name="header">Actions</apex:facet>
								<apex:variable var="canManageUserProject" value="{!canManageUser || CONTAINS(projectLeads[pr.Project__c], $User.Id)}"/>
								<apex:outputPanel rendered="{!NOT(ISNULL(projectResourceHours[pr.Id].Id)) && canManageUserProject}">
									<apex:outputLink value="../{!projectResourceHours[pr.Id].Id}">View hours</apex:outputLink>
								</apex:outputPanel>
							</apex:column>
						 </apex:dataTable>
					</apex:pageBlockSection>
				</apex:repeat>
			</apex:pageBlockSection>
		</apex:pageBlock>
		<apex:actionFunction name="doGetWeeks" action="{!getWeeks}" rerender="pbs_users, sl_weeks" oncomplete="closeModalWaitDialog();"/>
		<apex:actionFunction name="doSave" action="{!saveChanges}" rerender="pbs_users" oncomplete="closeModalWaitDialog();"/>
		<apex:actionFunction name="getUserResources" action="{!getUserResources}" rerender="pbs_users, config" oncomplete="closeModalWaitDialog();"/>
	</apex:form>
	<c:ModalWaitDialog />
	<script type="text/javascript">
		
		function bindDialogBackToParent(x, p){
			jQuery(p).append(x.parent());		//Bind back to where it got pulled from so inputFields still work
		}
		
		function getWeeks(){
			openModalWaitDialog("Refreshing...");
			doGetWeeks();
		}
		
		function save(){
			openModalWaitDialog("Saving...");
			doSave();
		}
		
		function reloadData(){
			openModalWaitDialog("Refreshing resources...");
			getUserResources();
		}
		
		function hoursUpdated(source, valID, total){
			var userTable = jQuery(source).closest('table');
			
			var sum = 0;
		    userTable.find('[id$=' + valID + ']').each(function() {
		        sum += Number(jQuery(this).val());
		    });
		    var t = userTable.find('[id$=' + total + ']');
		    t.html(sum);
		    if(valID == 'actualHours'){
		    	if(sum < 40)
		    		t.addClass('errored');
		    	else
		    		t.removeClass('errored');
		    }
		    else{
		    	if(sum > 40)
		    		t.addClass('errored');
		    	else
		    		t.removeClass('errored');
		    }
		}
					
		function limitText(field, limit){
			if (field.value.length > limit)
				field.value = field.value.substring(0, limit);
		}
	</script>
	<style>
		.datePicker{
			z-index:9000;
		}
		
		.errored{
			color:red;
		}
	</style>
</apex:page>