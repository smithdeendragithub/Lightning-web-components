<apex:page controller="ConfigureNewSolution" showheader="true" sidebar="false" standardstylesheets="false" applybodytag="false" applyhtmltag="true" lightningStylesheets="true">

    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
       
        <script src="/soap/ajax/38.0/connection.js" type="text/javascript"></script>
        <script type="text/javascript">
            __sfdcSessionId='{!GETSESSIONID()}';
        </script>
        <script src="/soap/ajax/33.0/apex.js" type="text/javascript"></script>
        <style type="text/css">
            .scrollable-menu {
                height: auto;
                max-height: 15em;
                overflow-x: hidden;
            }

            ul li, ol li {
                margin-left: 0;
                padding: 0;
            }

            .sticky {
                position: fixed !important;
                top: 5px;
            }
            
        </style>
        <link rel="stylesheet" href="{!URLFOR($Resource.bootstrap3, 'css/bootstrap.min.css')}" />
        <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous" />-->
        <!-- Optional theme -->
        <link rel="stylesheet" href="{!URLFOR($Resource.bootstrap3, 'css/bootstrap-theme.min.css')}" />
        <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous" />-->
        <apex:stylesheet value=" {!urlfor($Resource.jquery_ui_1_10_3_custom, 'css/redmond/jquery-ui-1.10.3.custom.min.css' )}" />
        <apex:stylesheet value="https://cdn.datatables.net/1.10.0/css/jquery.dataTables.css" />
        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
            <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
            <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
        <![endif]-->
        <title>Solution Configuration</title>
    </head>
    <body>
        <!-------------------- body included scripts -------------------->
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.13/jquery-ui.min.js"></script>
        <script type="text/javascript" src="{!URLFOR($Resource.bootstrap3, 'js/bootstrap.min.js')}"></script>
        <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>-->
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
        <script type="text/javascript" src="https://cdn.datatables.net/1.10.0/js/jquery.dataTables.js"></script>
        <!---------------------- Address Parser -------------------------->
        <c:AddressParser addressgeocodedfunction="secLocGeocoded" />
        <!---------------------- bootstrap wait modal -------------------->
        <!-- Modal -->
        <div class="scopedBootstrap">
            <div class="modal fade" id="modalWaitDialog" tabindex="-1" role="dialog" aria-labelledby="Please Wait" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">CPQ</h4>
                        </div>
                        <div class="modal-body">
                            <div id="waitModalBodyContent"></div>
                            <apex:image styleclass="img-responsive center-block" id="spinnerImage" value="{!$Resource.Spinner}" width="36" height="36" /><br />
                            <span>Please Wait...</span>
                        </div>
                    </div>
                </div>
            </div>
            <!---------------------- page content ----------------------->
            <div id="fucHelper" style="display:none;">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-xs-100">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h3 class="panel-title"><span role="button" class="toggle glyphicon glyphicon-chevron-up"></span>&nbsp;Information<span class="hidden-xs"> - </span><br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span>Service Location: {!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Name}&nbsp;&nbsp;<br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span>Solution Name: {!opportunityLocationConfiguration.Name}&nbsp;&nbsp;<br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span>ICC Subscriber ID: {!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.ICC_Subscriber_ID__c}&nbsp;&nbsp;<br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span>Billable: {!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Billable__c}</h3>
                                </div>
                                <div class="panel-body" style="display:none;">
                                    <div class="row">
                                        <div class="col-md-20">Account: <a href="/{!opp.AccountId}">{!opp.Account.Name}</a></div>
                                        <div class="col-md-20">Opportunity: <a href="/{!opp.Id}">{!opp.Name}</a></div>
                                        <div class="col-md-20">Term: {!opportunityLocationConfiguration.Term__c}</div>
                                        <div class="col-md-20">Order No: <a href="/{!opportunityLocationConfiguration.Opportunity_Location__r.Order__r.Id}">{!opportunityLocationConfiguration.Opportunity_Location__r.Order__r.Name}</a></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-100">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h3 class="panel-title"><span role="button" class="toggle glyphicon glyphicon-chevron-up"></span>&nbsp;Access Technology<span class="hidden-xs"> - </span><br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span><a href="/{!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__c}">{!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Name}</a>&nbsp;&nbsp;<br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span>Status: {!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Status__c}&nbsp;&nbsp;<br class="visible-xs-block" /><span class="visible-xs-inline" style="margin-left:1em;">&nbsp;</span>Net-Class: {!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Net_Classification__c}</h3>
                                </div>
                                <div class="panel-body" style="display:none;">
                                    <table id="accessTechTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>
                                                <th>Access Technology Name</th>
                                                <th>Maximum Bandwidth (Mbps)</th>
                                                <th>Minimum Required Revenue</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <apex:repeat value="{!baas}" var="b">
                                                <tr>
                                                    <td>{!b.Access_Technology__r.Name}</td>
                                                    <td>{!b.Maximum_Bandwidth__c}</td>
                                                    <td>{!b.Minimum_Required_Revenue__c}</td>
                                                    <td>{!b.Status__c}</td>
                                                </tr>
                                            </apex:repeat>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-100">
                            <div id="crumbHolder"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-100">
                            <div id="validationMessageHolder"></div>
                            <div id="validationMessageSuccessHolder" style="display:none;">
                                <div class="alert label-success" role="alert" style="font-weight:bold;">Requirements Met</div>
                            </div>
                        </div>
                    </div>
                    <nav class="navbar navbar-default">
                        <div class="container-fluid">
                            <div class="navbar-header">
                                <button class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false">
                                    <span class="sr-only">Toggle</span>
                                    <span class="icon-bar"></span>
                                    <span class="icon-bar"></span>
                                    <span class="icon-bar"></span>
                                </button>
                                <span class="navbar-brand" id="CurrentCrumb">Home</span>
                            </div>
                            <div class="collapse navbar-collapse" id="navbar">
                                <ul class="nav navbar-nav">
                                    <li><a role="button" href="" id="btnToggleMenu"><span class="glyphicon glyphicon-menu-hamburger"></span>&nbsp;Toggle Menu</a></li>
                                    <li><a role="button" href="" id="btnValidate"><span class="glyphicon glyphicon-ok"></span>&nbsp;Validate</a></li>
                                    <li><a role="button" href="" id="btnSave"><span class="glyphicon glyphicon-save"></span>&nbsp;Save</a></li>
                                    <li><a role="button" href="" id="btnSaveAndExit"><span class="glyphicon glyphicon-save"></span>&nbsp;Save and Exit</a></li>
                                    <li class="dropdown active">
                                        <a href="" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" id="accessTechFilter">&nbsp;<span id="selectedAccessTech">Access Technology</span><span class="caret"></span></a>
                                        <ul class="dropdown-menu scrollable-menu" id="accessTechs"></ul>
                                    </li>
                                    <li class="dropdown active">
                                        <a href="" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" id="bandwidthFilter">&nbsp;<span id="selectedBandwidth">Bandwidth</span><span class="caret"></span></a>
                                        <ul class="dropdown-menu scrollable-menu" id="bandwidths"></ul>
                                    </li>
                                    <li class="dropdown active">
                                        <a href="" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" id="currentProductGroup">Configured Product Group&nbsp;<span class="caret"></span></a>
                                        <ul class="dropdown-menu scrollable-menu" id="parentProducts"></ul>
                                    </li>
                                    <li><a role="button" href="" id="btnToggleList"><span class="glyphicon glyphicon-transfer"></span>&nbsp;<span id="btnToggleListText">Show List Prices</span></a></li>
                                    <li><a role="button" href="" id="btnApprove"><span class="glyphicon glyphicon-thumbs-up"></span>&nbsp;Approve</a></li>
                                    <li style="float:right;"><a role="button" href="/069C0000000VyRP" target="_blank" id="btnCpqHelp">&nbsp;CPQ Help</a></li>
                                </ul>
                            </div>
                        </div>
                    </nav>
                    <div class="row selectionPanel">
                        <div class="" id="buttonContainer">
                            <div id="prodCompBtnContainer" style="display:none; z-index:3; opacity:1;">
                                <div class="panel panel-default" id="compContainer">
                                    <div class="panel-heading">
                                        <h3 class="panel-title">Select Components</h3>
                                    </div>
                                    <div class="panel-body">
                                        <div class="btn-group btn-group-vertical btn-group-justified">
                                            <div id="compBtnContainer" class="btn-group-vertical btn-group-sm" style="width:100%;"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default" id="prodContainer">
                                    <div class="panel-heading">
                                        <h3 class="panel-title"><span id="prodButtonContainerTitle">Products</span></h3>
                                    </div>
                                    <div class="panel-body">
                                        <div class="btn-group btn-group-vertical btn-group-justified">
                                            <div id="prodBtnContainer" class="btn-group-vertical btn-group-sm" style="width:100%;"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-100" id="configSummaryContainer">
                            <div class="panel panel-primary">
                                <div class="panel-heading">
                                    <h3 class="panel-title"><span id="curProd"></span><span class="pull-right" id="totals"></span><span class="visible-xs-block clearfix"></span></h3>
                                </div>
                                <div class="panel-body" id="configuredComponents">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="display:none;" id="configurePanel">
                        <div class="col-xs-100">
                            <div class="panel panel-primary">
                                <div class="panel-heading">
                                    <h3 class="panel-title">Configure: <span id="configLabel"></span></h3>
                                </div>
                                <div class="panel-body">
                                    <div id="configBodyContent" class="container-fluid"></div>
                                </div>
                                <div class="panel-footer">
                                    <button id="btnConfigClose" type="button" class="btn btn-danger closeBtn">Close</button>
                                    <button id="btnConfigSave" type="button" class="btn btn-primary">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- viewport helpers -->
            <div class="device-xs visible-xs-block"></div>
            <div class="device-sm visible-sm-block"></div>
            <div class="device-md visible-md-block"></div>
            <div class="device-lg visible-lg-block"></div>
            <div class="device-xl visible-xl-block"></div>
        </div>
        <!--------------------- Handlebars Templates ---------------->
        <script id="panel-template" type="text/x-handlebars-template">
            <div class="panel panel-default">
                <div class="panel-body">
                    {{componentName}}
                </div>
            </div>
        </script>
        <script id="dropdown-template" type="text/x-handlebars-template">
            <div class="dropdown">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu{{Type}}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    {{DefaultValue}}
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenu{{Type}}">
                    {{#each Items}}
                    <li><a href="#">Item</a></li>
                    {{/each}}
                </ul>
            </div>
        </script>
        <script id="initial-product-grouping-template" type="text/x-handlebars-template">
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">{{Name}} <span class="caret"></span></button>
                <ul class="dropdown-menu scrollable-menu">
                    {{#each Items}}
                    <li><a href="#" data-id="{{Id}}" data-zloctype="{{ZLocType}}" data-prodid="{{ProductId}}" data-prodname="{{Label}}" class="parent {{Type}}Btn">{{Label}}</a></li>
                    {{/each}}
                </ul>
            </div>
        </script>
        <script id="product-button-template" type="text/x-handlebars-template">
            {{#each Items}}
            <button type="button" title="{{Title}}" data-id="{{Id}}" data-zloctype="{{ZLocType}}" data-prodid="{{ProductId}}" data-prodname="{{Label}}" class="{{Type}}Btn btn btn-{{Category}}">{{Label}}</button>
            {{/each}}
        </script>
        <script id="component-button-template" type="text/x-handlebars-template">
            {{#each Items}}
            <button type="button" title="{{Title}}" data-id="{{Id}}" data-prodname="{{Label}}" class="{{Type}}Btn btn btn-{{Category}}">{{Label}} <span class="badge"></span></button>
            {{/each}}
        </script>
        <script id="config-pickOne-template" type="text/x-handlebars-template">
            <input type="hidden" id="inpUpdate_{{childNumb}}" value="{{update}}" />
            <input type="hidden" id="inpRelKey_{{childNumb}}" value="{{relKey}}" />
            <input type="hidden" id="ParentRelId_{{childNumb}}" />
            <input type="hidden" id="SPCProductID_{{childNumb}}" />
            <input type="hidden" id="SPCComponentID_{{childNumb}}" />
            <input type="hidden" id="DisplayName_{{childNumb}}" />
            <input type="hidden" id="MRR_{{childNumb}}" />
            <input type="hidden" id="MRRList_{{childNumb}}" />
            <input type="hidden" id="MRRFloor_{{childNumb}}" />
            <input type="hidden" id="NRR_{{childNumb}}" />
            <input type="hidden" id="NRRList_{{childNumb}}" />
            <input type="hidden" id="NRRFloor_{{childNumb}}" />
            <input type="hidden" id="Qty_{{childNumb}}" class="hdnQty" />
            <input type="hidden" id="PriceID_{{childNumb}}" />
            <input type="hidden" id="autoInclude_{{childNumb}}" class="autoInclude" value="{{AutoInclude}}" />
            <input type="hidden" id="configParentDisplayName_{{childNumb}}" value="{{ConfigParentDisplayName}}" />
            <input type="hidden" id="pickOne_{{childNumb}}" value="{{pickOne}}" />
            {{#if IsAccess}}
            <div class="row">
                <div class="col-xs-100 col-md-50">
                    <label for="dropdownMenuAccessTech_{{childNumb}}">Access Technology</label>
                    <div class="dropdown">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    &nbsp;<span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenuAccessTech">
                                    {{#each selections}}
                                    <li><a href="#" class="accessTechSelection">{{AccessTechName}}</a></li>
                                    {{/each}}
                                </ul>
                            </span>
                            <input placeholder="Choose Tech" disabled="disabled" style="cursor:inherit;" tabindex="{{childNumb}}1" class="form-control dropdown-label" type="text" id="dropdownMenuAccessTech_{{childNumb}}" data-childnumb="{{childNumb}}" />
                        </div>
                    </div>
                </div>
                <div class="col-xs-100 col-md-50">
                    <label for="dropdownMenuBandwidth_{{childNumb}}">Bandwidth (Mbps)</label>
                    <div class="dropdown">
                        <div class="input-group">
                            <span class="input-group-btn hidden-md hidden-lg hidden-xl">
                                <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled="disabled">
                                    &nbsp;<span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu scrollable-menu bandwidthDDL_{{childNumb}}" id="bandwidthDDL_{{childNumb}}1" aria-labelledby="dropdownMenuBandwidth"></ul>
                            </span>
                            <input placeholder="Select Bandwidth" disabled="disabled" style="cursor:inherit;" tabindex="{{childNumb}}2" class="form-control dropdown-label" type="text" id="dropdownMenuBandwidth_{{childNumb}}" data-childnumb="{{childNumb}}" />
                            <span class="input-group-btn hidden-xs hidden-sm">
                                <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled="disabled">
                                    &nbsp;<span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu scrollable-menu dropdown-menu-right bandwidthDDL_{{childNumb}}" id="bandwidthDDL_{{childNumb}}2" aria-labelledby="dropdownMenuBandwidth"></ul>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:3px;">
                <div class="col-xs-100 col-md-34">
                    <div class="input-group">
                        <span class="input-group-addon">Qty</span>
                        <input tabindex="{{childNumb}}3" type="text" class="form-control inputQty minmax" id="inputQty_{{childNumb}}" data-childnumb="{{childNumb}}" data-min="{{Min}}" data-max="{{Max}}" value="1" {{#if AutoInclude}}disabled="disabled" {{/if}} />
                    </div>
                </div>
                <div class="col-xs-100 col-md-33">
                    <div class="input-group">
                        <span class="input-group-addon">MRR $</span>
                        <input tabindex="{{childNumb}}4" type="text" class="form-control MRRAmount" id="MRRAmount_{{childNumb}}" data-childnumb="{{childNumb}}" data-nondiscount="{{NonDiscountable}}" aria-label="MRR" />
                        <span class="input-group-addon">List: <span id="MRRListAmount_{{childNumb}}">$0.00</span></span>
                    </div>
                </div>
                <div class="col-xs-100 col-md-33">
                    <div class="input-group">
                        <span class="input-group-addon">NRR $</span>
                        <input tabindex="{{childNumb}}5" type="text" class="form-control NRRAmount" id="NRRAmount_{{childNumb}}" data-childnumb="{{childNumb}}" data-nondiscount="{{NonDiscountable}}" aria-label="NRR" />
                        <span class="input-group-addon">List: <span id="NRRListAmount_{{childNumb}}">$0.00</span></span>
                    </div>
                </div>
            </div>
            {{else}}
            <div class="row">
                <div class="col-xs-100">
                    <label for="dropdownMenuPricing_{{childNumb}}">Component</label>
                    <div class="dropdown">
                        <div class="input-group componentNameSelection">
                            {{log "pickone = " pickOne}}
                            <span class="input-group-btn{{#unless pickOne}} multiselect{{/unless}}">
                                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    &nbsp;<span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenuPricing">
                                    {{#each selections}}
                                    <li>
                                        {{#if ../pickOne}}
                                        <a href="#" class="componentSelection" data-priceid="{{priceID}}" data-bandwidth="{{Bandwidth}}">{{PricingName}}</a>
                                        {{else}}
                                        <span class="input-group checkboxSelect">
                                            <span class="input-group-addon">
                                                <input type="checkbox" class="multiselect" />
                                            </span>
                                            <input type="text" class="form-control autosize" style="cursor:inherit;" disabled="disabled" value="{{PricingName}}" />
                                        </span>
                                        <a href="#" class="componentSelection hide" data-priceid="{{priceID}}" data-bandwidth="{{Bandwidth}}">{{PricingName}}</a>
                                        {{/if}}
                                    </li>
                                    {{/each}}
                                </ul>
                            </span>
                            <input tabindex="{{childNumb}}1" class="form-control dropdown-label" style="cursor:inherit;" placeholder="{{relationDisplayName}}" disabled="disabled" type="text" id="dropdownMenuPricing_{{childNumb}}" data-childnumb="{{childNumb}}" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:3px;">
                <div class="col-xs-100 col-md-34">
                    <div class="input-group">
                        <span class="input-group-addon">Qty</span>
                        <input tabindex="{{childNumb}}2" type="text" class="form-control inputQty minmax" id="inputQty_{{childNumb}}" data-childnumb="{{childNumb}}" data-min="{{Min}}" data-max="{{Max}}" value="1" {{#if AutoInclude}}disabled="disabled" {{/if}} />
                    </div>
                </div>
                <div class="col-xs-100 col-md-33">
                    <div class="input-group">
                        <span class="input-group-addon">MRR $</span>
                        <input tabindex="{{childNumb}}3" type="text" class="form-control MRRAmount" id="MRRAmount_{{childNumb}}" data-childnumb="{{childNumb}}" data-nondiscount="{{NonDiscountable}}" aria-label="MRR" />
                        <span class="input-group-addon">List: <span id="MRRListAmount_{{childNumb}}">$0.00</span></span>
                    </div>
                </div>
                <div class="col-xs-100 col-md-33">
                    <div class="input-group">
                        <span class="input-group-addon">NRR $</span>
                        <input tabindex="{{childNumb}}4" type="text" class="form-control NRRAmount" id="NRRAmount_{{childNumb}}" data-childnumb="{{childNumb}}" data-nondiscount="{{NonDiscountable}}" aria-label="NRR" />
                        <span class="input-group-addon">List: <span id="NRRListAmount_{{childNumb}}">$0.00</span></span>
                    </div>
                </div>
            </div>
            {{/if}}
            <div id="zLocSelection_{{childNumb}}" class="row" style="margin-top:3px; display:none;">
                <div class="col-xs-100 col-md-34">
                    <label for="dropdownMenuCurrentLocation_{{childNumb}}">Secondary Location</label>
                    <div class="dropdown">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    &nbsp;<span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenuCurrentLocation">
                                    <li><a href="#" class="newZLocation">New Secondary Location</a></li>
                                </ul>
                            </span>
                            <input placeholder="Choose Location" type="text" disabled="disabled" style="cursor:inherit;" tabindex="{{childNumb}}{{#if IsAccess}}6{{else}}5{{/if}}" class="form-control" id="dropdownMenuCurrentLocation_{{childNumb}}" data-childnumb="{{childNumb}}" />
                        </div>
                    </div>
                </div>
                <div class="col-xs-100 col-md-33 newZLoc" style="display:none;">
                    <label>&nbsp;</label>
                    <div class="input-group">
                        <span class="input-group-addon">Address</span>
                        <input tabindex="{{childNumb}}{{#if IsAccess}}7{{else}}6{{/if}}" type="text" class="form-control addressSelection" id="address_{{childNumb}}" data-childnumb="{{childNumb}}" aria-label="Address" />
                    </div>
                </div>
                <div class="col-xs-100 col-md-20 newZLoc" style="display:none;">
                    <label>&nbsp;</label>
                    <div class="input-group">
                        <span class="input-group-addon">Room/Suite</span>
                        <input tabindex="{{childNumb}}{{#if IsAccess}}8{{else}}7{{/if}}" type="text" class="form-control roomSuite" id="roomSuite_{{childNumb}}" data-childnumb="{{childNumb}}" aria-label="Room/Suite" />
                    </div>
                </div>
                <div class="col-xs-100 col-md-13 newZLoc" style="display:none;">
                    <label>&nbsp;</label>
                    <div class="">
                        <div class="btn-group pull-right">
                            <button class="btn btn-primary btnZLocSearch" type="button" id="btnSearchZLoc_{{childNumb}}" data-childnumb="{{childNumb}}">Search <span class="glyphicon glyphicon-search"></span></button>
                            <button class="btn btn-default btnZLocSet" type="button" id="btnSaveZLoc_{{childNumb}}" data-childnumb="{{childNumb}}" disabled="disabled">Set <span class="glyphicon glyphicon-transfer"></span></button>
                        </div>
                    </div>
                </div>
            </div>
        </script>
        <script id="config-multiSelected-template" type="text/x-handlebars-template">
        </script>
        <script id="crumbs-template" type="text/x-handlebars-template">
            <ol class="breadcrumb">
                {{#each Items}}
                <li><a href="#" class="crumb" data-crumbnum="{{Number}}">{{Name}}</a></li>
                {{/each}}
            </ol>
        </script>
        <script id="validationMessages-template" type="text/x-handlebars-template">
            <div class="panel panel-danger">
                <div class="panel-heading">
                    <h3 class="panel-title">Requirements Not Met</h3>
                </div>
                <div class="panel-body">
                    {{#if RequireUCSpecialist}}
                     <b>You must provide both an UC Specialist and Vendor Registration in Opportunity before adding UC Components!</b><br />
                    {{/if}}
                    {{#each AdditionalProdsNeeded}}
                    {{#if @first}}Additional Layer-on Products Required:{{/if}}
                    <div style="padding-left:5px;">
                        - <a href="#" class="productGroup ProductBtn" data-prodid="{{prodId}}" data-groupname="{{groupName}}" data-parentprodname="{{parentProdName}}" data-prodname="{{prodName}}" data-zloctype="{{zLocType}}">{{@key}}</a>
                    </div><br />
                    {{/each}}
                    {{#each InvalidProds}}
                    {{#if @first}}Invalid Products:{{/if}}
                    <div style="padding-left:5px;">
                        - The <a href="#" class="productGroup ProductBtn" data-prodid="{{prodId}}" data-groupname="{{groupName}}" data-parentprodname="{{parentProdName}}" data-prodname="{{prodName}}" data-zloctype="{{zLocType}}">{{@key}}</a> product is not configurable with {{this.vals}} component(s).  Remove the non-configurable components before adding this product or continue with the current configuration.
                    </div><br />
                    {{/each}}
                    {{#each InvalidPricing}}
                    {{#if @first}}Invalid Pricing:{{/if}}
                    <div style="padding-left:5px;">
                        - When adding {{this.vals.productName}} product, the <a href="#" class="productGroup ProductBtn" data-prodid="{{prodId}}" data-groupname="{{groupName}}" data-parentprodname="{{parentProdName}}" data-prodname="{{prodName}}" data-zloctype="{{zLocType}}">{{@key}}</a>:{{this.vals.invalidPricing}} component pricing must be updated.
                    </div><br />
                    {{/each}}
                    {{#each ProdProdItems}}
                    {{#if @first}}Products Required:{{/if}}
                    <div style="padding-left:5px;">
                        - <a href="#" class="productGroup ProductBtn" data-prodid="{{prodId}}" data-groupname="{{groupName}}" data-parentprodname="{{parentProdName}}" data-prodname="{{prodName}}" data-zloctype="{{zLocType}}">{{@key}}</a>
                    </div><br />
                    {{/each}}
                    {{#each Items}}
                    <a href="#" class="productGroup ProductBtn" data-prodid="{{prodId}}" data-groupname="{{groupName}}" data-parentprodname="{{parentProdName}}" data-prodname="{{prodName}}" data-zloctype="{{zLocType}}">{{@key}}</a><br />
                    <div style="padding-left:5px;">
                        {{#each this.vals}}
                        - {{displayName}}<br />
                        {{/each}}
                    </div>
                    {{/each}}
                </div>
            </div>
        </script>
        <script id="configured-component-template" type="text/x-handlebars-template">
            {{#unless prods}}{{#unless isChild}}
            <span style="color:red;">Nothing configured for this product.</span>
            {{/unless}}{{/unless}}
            {{#each prods}}
            {{#if @first}}{{#unless ../isChild}}
            <div class="visible-lg-block" style="font-size:smaller; font-weight:bold; margin-top:-16px;">
                <div class="row">
                    <div class="col-lg-8" style="padding-left:10px;">Qty</div>
                    {{#ifHasZloc ../prods}}
                    <div class="col-lg-18" style="padding-left:10px;">Component</div>
                    <div class="col-lg-15" style="padding-left:10px;">Sec Loc</div>
                    {{else}}
                    <div class="col-lg-33" style="padding-left:10px;">Component</div>
                    {{/ifHasZloc}}
                    <div class="col-lg-10" style="padding-left:10px;">MRR</div>
                    <div class="col-lg-10 lineTotal" style="padding-left:10px;">MRR Total</div>
                    <div class="col-lg-10 lineList" style="padding-left:10px; display:none;">MRR List Total</div>
                    <div class="col-lg-10" style="padding-left:10px;">NRR</div>
                    <div class="col-lg-10 nrrTotal" style="padding-left:10px;">NRR Total</div>
                    <div class="col-lg-10 nrrList" style="padding-left:10px; display:none;">NRR List Total</div>
                    <div class="col-lg-6" style="padding-left:10px;">Approved</div>
                    <div class="col-lg-13" style="padding-left:5px;"><span class="pull-right">Actions</span></div>
                </div>
            </div>
            {{/unless}}{{/if}}
            {{#ifMdOrLess}}
            <div class="col-xs-100 hidden-lg hidden-xl" title="{{#if Expired}}This is an expired item.  You can keep/change quantities of this item, but if you remove it you will not be able to add it back.{{/if}}">
                <div class="panel panel-{{#if OLI.Approved__c}}success{{else}}warning{{/if}}">
                    <div class="panel-heading">
                        <h3 class="panel-title"><span role="button" class="toggle glyphicon glyphicon-chevron-down"></span>&nbsp;{{DisplayName}}&nbsp;&nbsp;<span class="glyphicon glyphicon-{{#if OLI.Approved__c}}check{{else}}warning-sign{{/if}}"></span><span class="pull-right"><span style="font-size:smaller; vertical-align:middle;">Total MRR: ${{MRRTotal}} Total NRR: ${{NRRTotal}}</span>&nbsp;&nbsp;{{#if Expired}}<span style="font-size:large; vertical-align:bottom; color:red;" role="button" class="glyphicon glyphicon-exclamation-sign btnExpired" title="This price row is no longer valid"></span>{{else}}<span style="font-size:large; vertical-align:bottom" role="button" class="reconfigure glyphicon glyphicon-cog {{#ifHiddenProdId ProdId}}hide{{/ifHiddenProdId}} {{#if ../isChild}}hide{{/if}}" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-prodid="{{ProdId}}" data-zloctype="{{ZLocType}}" data-relkey="{{ParentRelId}}" data-priceid="{{PriceId}}" data-compname="{{DisplayName}}" data-productname="{{ProdName}}" data-spcproductid="{{SPCProductID}}" data-uuid="{{UUID}}" data-zloctype="{{../zLocMode}}"></span>{{/if}}<span style="font-size:large; vertical-align:bottom; {{#if AutoIncludeTrue}}display:none;{{/if}}" role="button" class="remove glyphicon glyphicon-remove {{#if ../isChild}}hide{{/if}}" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-compname="{{DisplayName}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}"></span></span><span class="clearfix"></span></h3>
                    </div>
                    <div class="panel-body">
                        <div class="input-group input-group-sm" style="width:100%;">
                            <span class="addonautosize input-group-addon {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Qty</span>
                            <input type="text" class="form-control number minmax" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-min="{{Min}}" data-max="{{Max}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-member="Qty" value="{{Qty}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}" {{#if AutoIncludeTrue}}disabled="disabled" {{/if}} />
                        </div>
                        {{#if ZLocId}}
                        <div class="input-group input-group-sm" style="width:100%;">
                            <span class="addonautosize input-group-addon {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Sec Loc</span>
                            <input type="text" class="form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" disabled="disabled" value="{{ZLocName}}" />
                        </div>
                        {{/if}}
                        <div class="input-group input-group-sm" style="width:100%;">
                            <span class="addonautosize input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">MRR: $</span>
                            <input type="text" class="form-control currency configured" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-member="MRR" value="{{MRR}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}" data-nondiscount="{{NonDiscountable}}" placeholder="{{#if OLI.SPC_MRC_Is_Quote__c}}Quote{{/if}}" />
                            <span class="addonautosize lineTotal input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Total: ${{MRRTotal}}</span>
                            <span class="addonautosize lineList input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" style="display:none;">List Total: ${{MRRListTotal}}</span>
                        </div>
                        <div class="input-group input-group-sm" style="width:100%;">
                            <span class="addonautosize input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">NRR: $</span>
                            <input type="text" class="form-control currency configured" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-member="NRR" value="{{NRR}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}" data-nondiscount="{{NonDiscountable}}" placeholder="{{#if OLI.SPC_MRC_Is_Quote__c}}Quote{{/if}}"/>
                            <span class="addonautosize nrrTotal input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Total: ${{NRRTotal}}</span>
                            <span class="addonautosize nrrList input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" style="display:none;">List Total: ${{NRRListTotal}}</span>
                        </div>
                        {{#if Children}}<br />{{/if}}
                        {{> configured-component-template prods=Children isChild=true}}
                    </div>
                </div>
            </div>
            {{else}}
            <div class="row hidden-xs hidden-sm hidden-md" title="{{#if Expired}}This is an expired item.  You can keep/change quantities of this item, but if you remove it you will not be able to add it back.{{/if}}">
                <div class="{{#if ../isChild}}col-lg-offset-1 col-lg-7{{else}}col-lg-8{{/if}}">
                    <div class="input-group input-group-sm">
                        <span class="input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Qty</span>
                        <input type="text" class="form-control number configured minmax" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-min="{{Min}}" data-max="{{Max}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-member="Qty" value="{{Qty}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}" {{#if AutoIncludeTrue}}disabled="disabled" {{/if}}/>
                    </div>
                </div>
                <div class="{{#if ZLocId}}col-lg-18 col-md-45{{else}}col-lg-33 col-md-85{{/if}} col-xs-100" title="{{DisplayName}}">
                    <div class="input-group input-group-sm" style="width:100%;">
                        <input type="text" class="form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" disabled="disabled" value="{{DisplayName}}" />
                    </div>
                </div>
                {{#if ZLocId}}
                <div class="col-xs-100 col-md-40 col-lg-15" title="{{ZLocName}}">
                    <div class="input-group input-group-sm" style="width:100%;">
                        <input type="text" class="form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" disabled="disabled" value="{{ZLocName}}" />
                    </div>
                </div>
                {{/if}}
                <div class="col-xs-100 col-md-50 col-lg-10 col-xl-20">
                    <div class="input-group input-group-sm">
                        <span class="input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">MRR: $</span>
                        <input type="text" class="form-control currency configured" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-member="MRR" value="{{MRR}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}" data-nondiscount="{{NonDiscountable}}" placeholder="{{#if OLI.SPC_MRC_Is_Quote__c}}Quote{{/if}}" />
                        <span class="addonautosize lineTotal input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Total: ${{MRRTotal}}</span>
                        <span class="addonautosize lineList input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" style="display:none;">List Total: ${{MRRListTotal}}</span>
                    </div>
                </div>
                <div class="col-lg-10 visible-lg-block">
                    <div class="input-group input-group-sm">
                        <input type="text" class="lineTotal form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" disabled="disabled" value="${{MRRTotal}}" />
                        <input type="text" class="lineList form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" style="display:none;" disabled="disabled" value="${{MRRListTotal}}" />
                    </div>
                </div>
                <div class="col-xs-100 col-md-50 col-lg-10 col-xl-20">
                    <div class="input-group input-group-sm">
                        <span class="input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">NRR: $</span>
                        <input type="text" class="form-control currency configured" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-member="NRR" value="{{NRR}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}" data-nondiscount="{{NonDiscountable}}" placeholder="{{#if OLI.SPC_MRC_Is_Quote__c}}Quote{{/if}}"  data-nrrfloor="{{NRRFloor}}"  data-displayName="{{DisplayName}}" />
                        <span class="addonautosize nrrTotal input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Total: ${{NRRTotal}}</span>
                        <span class="addonautosize nrrList input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" style="display:none;">List Total: ${{NRRListTotal}}</span>
                    </div>
                </div>
                <div class="col-lg-10 visible-lg-block">
                    <div class="input-group input-group-sm">
                        <input type="text" class="nrrTotal form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" disabled="disabled" value="${{NRRTotal}}" />
                        <input type="text" class="nrrList form-control {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}" style="display:none;" disabled="disabled" value="${{NRRListTotal}}" />
                    </div>
                </div>
                <div class="col-xs-50 col-lg-6">
                    <div class="input-group-sm">
                        <!--<span class="input-group-addon hidden-lg {{#if OLI.SPC_MRC_Is_Quote__c}}alert alert-warning{{/if}}">Approved: </span>-->
                        <span class="input-group-addon" style="background-color:inherit; border:0;"><span class="glyphicon glyphicon-{{#if OLI.Approved__c}}check alert-success{{else}}warning-sign alert-warning{{/if}}" style="font-size:13pt;"></span></span>
                    </div>
                </div>
                <div class="col-xs-50 col-lg-13 {{#if Children}}visible-xl-block visible-lg-block{{/if}}">
                    <div class="btn-group pull-right" role="group">
                        {{#if ZLocId}}
                        <!--<button type="button" class="btn btn-default duplicate" style="{{#if AutoIncludeTrue}}display:none;{{/if}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-compname="{{DisplayName}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}"><span class="glyphicon glyphicon-duplicate"></span></button>-->
                        {{/if}}
                        {{#if Expired}}
                        <button type="button" class="btn btn-danger btnExpired" title="This price row is no longer valid"><span class="glyphicon glyphicon-exclamation-sign"></span></button>
                        {{else}}
                        <button type="button" class="btn btn-default reconfigure {{#ifHiddenProdId ProdId}}hide{{/ifHiddenProdId}} {{#if ../isChild}}hide{{/if}}" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-prodid="{{ProdId}}" data-zloctype="{{ZLocType}}" data-relkey="{{ParentRelId}}" data-priceid="{{PriceId}}" data-compname="{{DisplayName}}" data-productname="{{ProdName}}" data-spcproductid="{{SPCProductID}}" data-uuid="{{UUID}}" data-zloctype="{{../zLocMode}}"><span class="glyphicon glyphicon-cog"></span></button>
                        {{/if}}
                        <button type="button" class="btn btn-default remove {{#if ../isChild}}hide{{/if}}" style="{{#if AutoIncludeTrue}}display:none;{{/if}}" data-parentprodname="{{ParentProdName}}" data-groupname="{{GroupName}}" data-spccomponentid="{{SPCComponentID}}" data-spcproductid="{{SPCProductID}}" data-compname="{{DisplayName}}" data-productname="{{ProdName}}" data-uuid="{{UUID}}"><span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </div>
            </div>
            {{#if Children}}
            {{> configured-component-template prods=Children isChild=true}}
            {{/if}}
            {{/ifMdOrLess}}
            <br class="hidden-lg hidden-xl" />
            {{/each}}
        </script>
        <script id="configured-solution-component-template" type="text/x-handlebars-template">
            {{#each Groups}}
            {{#each this}}
            {{> configured-group-component-template group=this}}
            {{/each}}
            {{/each}}
        </script>
        <script id="configured-group-component-template" type="text/x-handlebars-template">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title"><span role="button" class="toggle glyphicon glyphicon-chevron-down"></span>&nbsp;{{Name}}<span class="pull-right"><span style="font-size:smaller; vertical-align:middle;">{{groupTotal Configured}}</span>&nbsp;&nbsp;<span style="font-size:large; vertical-align:bottom;" role="button" class="removeGroup glyphicon glyphicon-remove" data-groupname="{{Name}}" data-parentprodname="{{ParentProdName}}"></span></span><span class="visible-xs-block clearfix"></span></h3>
                </div>
                <div class="panel-body">
                    {{#each Configured}}
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title"><span role="button" class="toggle glyphicon glyphicon-chevron-down"></span>&nbsp;<a data-prodid="{{../ProdId}}" data-groupname="{{../Name}}" data-parentprodname="{{../ParentProdName}}" data-prodname="{{name}}" data-zloctype="{{zLocMode}}" href="#" class="{{#ifHiddenProdId ../ProdId}}{{else}}productGroup ProductBtn{{/ifHiddenProdId}}" style="text-decoration:underline;">{{name}}</a><span class="pull-right"><span style="font-size:smaller; vertical-align:middle;">{{productTotal prods}}</span>&nbsp;&nbsp;<span style="font-size:large; vertical-align:bottom;" role="button" class="removeAllProds glyphicon glyphicon-remove" data-groupname="{{../Name}}" data-parentprodname="{{../ParentProdName}}" data-prodname="{{name}}"></span></span><span class="visible-xs-block clearfix"></span></h3>
                        </div>
                        <div class="panel-body">
                            {{> configured-component-template prods=prods}}
                        </div>
                    </div>
                    {{/each}}
                </div>
            </div>
        </script>
        <script id="configured-group-template" type="text/x-handlebars-template">
            {{#each Configured}}
            <div class="panel panel-{{#ifCurrentProd name}}primary{{else}}default{{/ifCurrentProd}}">
                <div class="panel-heading">
                    <h3 class="panel-title"><span role="button" class="toggle glyphicon glyphicon-chevron-down"></span>&nbsp;<a data-prodid="{{../ProdId}}" data-groupname="{{../Name}}" data-parentprodname="{{../ParentProdName}}" data-prodname="{{name}}" data-zloctype="{{zLocMode}}" href="#" class="productGroup ProductBtn" style="text-decoration:underline;">{{name}}</a><span class="pull-right"><span style="font-size:smaller; vertical-align:middle;">{{productTotal prods}}</span>&nbsp;&nbsp;<span style="font-size:large; vertical-align:bottom;" role="button" class="removeAllProds glyphicon glyphicon-remove" data-groupname="{{../Name}}" data-parentprodname="{{../ParentProdName}}" data-prodname="{{name}}"></span></span><span class="visible-xs-block clearfix"></span></h3>
                </div>
                <div class="panel-body">
                    {{> configured-component-template prods=prods}}
                </div>
            </div>
            {{/each}}
        </script>
        <script id="zloc-select-item-template" type="text/x-handlebars-template">
            <li><a data-recid="{{Id}}" href="#" class="existingZLocation">{{Name}}</a></li>
        </script>
        <script id="product-group-select-item-template" type="text/x-handlebars-template">
            <li><a href="#" data-zloctype="{{ZLocType}}" data-prodid="{{ProductId}}" data-groupname="{{Label}}" data-prodname="{{ProdName}}" class="productGroup ProductBtn">{{Label}}</a></li>
        </script>
        <script id="access-tech-filter-item-template" type="text/x-handlebars-template">
            <li><a href="#" id="accessTechBtn{{Label}}" class="accessTechBtn">{{Label}}</a></li>
        </script>
        <script id="bandwidth-filter-item-template" type="text/x-handlebars-template">
            <li><a href="#" id="bandwidthBtn{{Label}}" class="bandwidthBtn">{{Label}}</a></li>
        </script>
        <!---------------------- page code -------------------------->
        <!---------------------- static scripts --------------------->
        <script type="text/javascript">
            function isBreakpoint(alias){
                return jQuery('.device-'+alias).is(':visible');
            }
            var masterObj = null;
            //silly thing to make addressParser work.
            var sfdcPage = {};
            var isComponentChanged = false;
            
            //support for sticky div
            //var elTop = '';
            (function($){
                $(document).ready(function(){
                    //scrolly button div

                    /*$(window).scroll(function(){
                        if(isBreakpoint('md')||isBreakpoint('lg')||isBreakpoint('xl')){
                            var $stickyEl = $('#buttonContainer');
                            $stickyEl.toggleClass('sticky', $(window).scrollTop() > elTop);
                            $('#configSummaryContainer').toggleClass('col-md-offset-30 col-xl-offset-20', $(window).scrollTop() > elTop);
                        }
                    });*/
                    $('ul[class="nav navbar-nav"]').css({'float':'none'});

                    //create the masterObject
                    masterObj = masterObject.create($, eval({!jsonIniProds}), eval({!jsonTerms}), '{!market}', '{!configId}', eval({!jsonSLocSelections}), eval({!jsonLocSelections}), eval({!jsonSPCSortConfigMap}), {!disableValidations},'{!opp.UC_Specialist__r.Name}','{!opp.Vendor_Registration__c}');
                    //clear the session storaget
                    masterObj.clearSessionStorage();
                    //hide validation button if disabled
                    if(masterObj.disableValidations) $('#btnValidate').parent().hide();


                    //add events to elements
                    $(document).on('click','.ProductBtn', masterObj.productButtonClick);
                    $(document).on('click','.ComponentBtn', masterObj.componentButtonClick);
                    $(document).on('click','.OptionalComponentBtn',masterObj.optionalComponentButtonClick);
                    $(document).on('click','.reconfigure',masterObj.reconfigureButtonClick);
                    $(document).on('click','.crumb',masterObj.crumbClick);
                    $(document).on('click','.remove',masterObj.removeButtonClick);
                    $(document).on('click','.closeBtn',masterObj.closeButtonClick);
                    $(document).on('change','.configured',masterObj.configuredInputChange);
                    $('#btnConfigSave').on('click',masterObj.configSaveButtonClick);
                    $('#btnValidate').on('click',masterObj.validate);
                    $('#btnSave').on('click',masterObj.saveOlis);
                    $('#btnSaveAndExit').on('click',masterObj.saveOlis);
                    $('#btnApprove').on('click',masterObj.approveOlis);
                    $(document).on('click','.btnZLocSearch', masterObj.ZLocSearchButtonClick);
                    $(document).on('click','.btnZLocSet', masterObj.ZLocSetButtonClick);
                    $(document).on('click','.duplicate',masterObj.duplicateButtonClick);
                    $('#btnToggleMenu').on('click',masterObj.toggleMenuClick);
                    $('#btnToggleList').on('click',masterObj.toggleListClick);
                    $(document).on('click','.removeGroup', masterObj.removeGroupButtonClick.bind(masterObj));
                    $(document).on('click','.removeAllProds',masterObj.removeAllProdsButtonClick.bind(masterObj));
                    $(document).on('click','.accessTechBtn', masterObj.accessTechButtonClick);
                    $(document).on('click','.bandwidthBtn', masterObj.bandwidthButtonClick);
                    $(document).on('click','.componentNameSelection', masterObj.componentNameClick);
                    $(document).on('click','.btnExpired',function(){window.alert('This is an expired item.\nYou can keep/change quantities of this item, but if you remove it you will not be able to add it back.');});

                    $(window).resize(function(){
                        clearTimeout(window.resizeFinished);
                        window.resizeFinished = setTimeout(function(){masterObj.update.call(masterObj);},100);
                    });

                    $(document).on('click','div.dropdown',function(e){
                        if($(e.target).is('input:text')){
                            $(e.target).siblings().children('button:visible').trigger('click');
                            return false;
                        }
                    });

                    $(document).on('click','span.checkboxSelect',function(e){
                        if(!$(e.target).is('input:checkbox')){
                            var cb = $(e.target).closest('span.checkboxSelect').find('input:checkbox');
                            if(cb.is(':checked')) cb.removeProp('checked');
                            else cb.prop('checked','checked');
                            e.preventDefault();
                            return false;
                        }
                    });

                    $(document).on('change','.minmax',function(e){
                        var min = Number($(this).attr('data-min'));
                        var max = Number($(this).attr('data-max'));
                        var cur = Number($(this).val());
                        var uuid = $(this).attr('data-uuid');

                        if(min != NaN && min > 0 && cur < min){
                            alert('Current quantity of ' + cur + ' is less than minimum quantity of ' + min);
                            if(uuid == undefined) $(this).val(min); else $('.minmax[data-uuid="' + uuid +'"]').val(min);
                        }
                        if(max != NaN && max > 0 && cur > max){
                            alert('Current quantity of ' + cur + ' is greater than maximum quantity of ' + max);
                            if(uuid == undefined) $(this).val(max); else $('.minmax[data-uuid="' + uuid +'"]').val(max);
                        }
                        if(uuid != undefined)
                            masterObj.configuredInputChange.call( $('.minmax[data-uuid="' + uuid +'"]')[0]);
                    });

                    $(document).on('click','.toggle',function(){
                        var pBody = $(this).parent().parent().siblings('.panel-body');
                        var icon = $(this);
                        if($(pBody).is(':visible')){
                            $(pBody).hide('slide');
                            $(icon).removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                        }
                        else{
                            $(pBody).show('slide');
                            $(icon).removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                        }
                    });
                    $(document).on('click','.accessTechSelection',function(){
                        var selections = null;
                        var childNumb = $(this).parent().parent().parent().siblings('input').attr('data-childnumb');
                        for(var i = 0; i < masterObj.curConfig.selections.length; ++i){
                            if(masterObj.curConfig.selections[i].AccessTechName == $(this).html()){
                                selections = masterObj.curConfig.selections[i].Selections;
                                break;
                            }
                        }
                        var bandwidthDDL = $('.bandwidthDDL_'+childNumb);
                        $(bandwidthDDL).empty();
                        for(var i = 0; i < selections.length; ++i){
                            var curSel = selections[i];
                            var pricing = masterObj.pricingViewObjs[curSel.priceID];

                            var pricingName = pricing.pricingName != undefined ? ' - ' + pricing.pricingName : '';
                            $(bandwidthDDL).append('<li><a href="#" class="bandwidthSelection" data-bandwidth="'+curSel.Bandwidth+'" data-priceID="'+curSel.priceID +'">'+pricing.bandwidth+ pricingName + '</a></li>');
                        }
                        $('#dropdownMenuAccessTech_'+childNumb).val($(this).text());
                        $('#dropdownMenuAccessTech_'+childNumb).siblings().children('button').removeClass('btn-primary').addClass('btn-default');
                        $('#dropdownMenuBandwidth_'+childNumb).val('');
                        $('#dropdownMenuBandwidth_'+childNumb).siblings().children('button').removeClass('btn-default').addClass('btn-primary').removeProp('disabled');
                        
                        // always remove the MRR and NRR values
                         $('#MRRAmount_'+childNumb).val('');
                         $('#NRRAmount_'+childNumb).val('');
                    });

                    $(document).on('click','.bandwidthSelection',function(){
                        var pricing = masterObj.pricingViewObjs[$(this).attr('data-priceId')];
                        var childNumb = Number($(this).parent().parent().parent().siblings('input').attr('data-childnumb'));

                        $('#MRRAmount_'+childNumb).val(pricing.isQuotePrice ? undefined : Number(pricing.mrr).toFixed(2)).change();
                        if(pricing.isQuotePrice)
                            $('#MRRAmount_'+childNumb).attr('placeholder','Quote');
                        $('#MRRListAmount_'+childNumb).html('$'+Number(pricing.mrr).toFixed(2));
                        $('#MRRFloor_'+childNumb).val(Number(pricing.mrrFloor).toFixed(2));
                        $('#NRRAmount_'+childNumb).val(pricing.isQuotePrice ? undefined : Number(pricing.nrr).toFixed(2)).change();
                        if(pricing.isQuotePrice)
                            $('#NRRAmount_'+childNumb).attr('placeholder','Quote');
                        $('#NRRFloor_'+childNumb).val(Number(pricing.nrrFloor).toFixed(2));
                        $('#NRRListAmount_'+childNumb).html('$'+Number(pricing.nrr).toFixed(2));
                        $('#dropdownMenuBandwidth_'+childNumb).val($(this).text());
                        $('#dropdownMenuBandwidth_'+childNumb).siblings().children('button').removeClass('btn-primary').addClass('btn-default');
                        $('#SPCProductID_'+childNumb).val(pricing.spcProductID);
                        $('#SPCComponentID_'+childNumb).val(pricing.spcComponentID);
                        $('#DisplayName_'+childNumb).val(pricing.componentPricingName);
                        $('#Qty_'+childNumb).val($('#inputQty_'+childNumb).val());
                        $('#PriceID_'+childNumb).val(pricing.priceID);
                        $('#inputQty_'+childNumb).attr('data-min',pricing.minQty).attr('data-max',pricing.maxQty);
                        $('#MRRAmount_'+childNumb).attr('data-nondiscount',pricing.isNonDiscountable);
                        $('#NRRAmount_'+childNumb).attr('data-nondiscount',pricing.isNonDiscountable);
                        $('#QuotePrice_'+childNumb).val(pricing.isQuotePrice);
                        var appended = false;
                        var zLocRequired = (pricing.hasOwnProperty('zLocRequired') && pricing.zLocRequired);
                        $('.childComponents_'+(childNumb+1)).remove();

                        var curData = masterObj.getDataObjByName(pricing.salesProductName);
                        var condProdCompRels = curData.conditionalProductComponentRelationships[pricing.spcComponentID];

                        for(var i = 0; i < masterObj.curConfig.selections.length; ++i){
                            var atSel = masterObj.curConfig.selections[i];
                            if(atSel.AccessTechName == $(this).closest('.componentSelectionContainer').find('input[id^="dropdownMenuAccessTech"]').val()){
                                for(var k = 0; k < atSel.Selections.length; ++k){
                                    var sel = atSel.Selections[k];
                                    if(sel.priceID == pricing.priceID){
                                        var childConfigs = masterObj.createChildConfigs(condProdCompRels, curData.conditionalProductComponentRequirements, pricing.salesProductName, childNumb);
                                        sel.childConfigs = childConfigs;
                                        for(var j = 0; j < sel.childConfigs.length; ++j){
                                            sel.childConfigs[j].ConfigParentDisplayName = sel.PricingName;//$(this).text();
                                            var childContent = masterObj.templates.configPickOne(sel.childConfigs[j]);
                                            var configPickOne = sel.childConfigs[j].pickOne != undefined && sel.childConfigs[j].pickOne;
                                            /*$('#configBodyContent')*/$(this).closest('.componentSelectionContainer').append('<div style="padding-left:10px;" class="'+(!configPickOne? 'multiselectparent ':'')+'childComponents_'+(childNumb+1)+'">'+childContent+'</div>');
                                            if(sel.childConfigs[j].rels[sel.childConfigs[j].relKey].required)
                                                appended = true;
                                               // alert('EJ_in 3');
                                            masterObj.loadDefaultComponents(sel.childConfigs[j]);
                                            masterObj.removeSelectedComponents(sel.childConfigs[j]);
                                        }
                                    }
                                }
                            }
                        }
                        if(!appended && !zLocRequired)
                            masterObj.enableConfigSave();
                        if(zLocRequired){
                            masterObj.loadZLocs();
                            $('#zLocSelection').show();
                        }
                        masterObj.autoSizeInputs.call(masterObj);
                        $('#dropdownMenuBandwidth_'+childNumb).focus();
                    });
                    $(document).on('click','.componentSelection',function(){
                        isComponentChanged = true;
                        var pricing = masterObj.pricingViewObjs[$(this).attr('data-priceId')];
                        var childNumb = Number($(this).parent().parent().parent().siblings('input').attr('data-childnumb'));
                        var pickOne = $('#pickOne_'+childNumb).val() == 'true';//Remove?
                        $('#MRRAmount_'+childNumb).val(pricing.isQuotePrice ? undefined : Number(pricing.mrr).toFixed(2)).change();
                        if(pricing.isQuotePrice)
                            $('#MRRAmount_'+childNumb).attr('placeholder','Quote');
                        $('#MRRListAmount_'+childNumb).html('$'+Number(pricing.mrr).toFixed(2));
                        $('#MRRFloor_'+childNumb).val(Number(pricing.mrrFloor).toFixed(2));
                        $('#NRRAmount_'+childNumb).val(pricing.isQuotePrice ? undefined : Number(pricing.nrr).toFixed(2)).change();
                        if(pricing.isQuotePrice)
                            $('#NRRAmount_'+childNumb).attr('placeholder','Quote');
                        $('#NRRFloor_'+childNumb).val(Number(pricing.nrrFloor).toFixed(2));
                        $('#NRRListAmount_'+childNumb).html('$'+Number(pricing.nrr).toFixed(2));
                        $('#dropdownMenuPricing_'+childNumb).val($(this).text());
                        $('#dropdownMenuPricing_'+childNumb).siblings().children('button').removeClass('btn-primary').addClass('btn-default');
                        $('#SPCProductID_'+childNumb).val(pricing.spcProductID);
                        $('#SPCComponentID_'+childNumb).val(pricing.spcComponentID);
                        $('#DisplayName_'+childNumb).val(pricing.componentPricingName);
                        $('#Qty_'+childNumb).val($('#inputQty_'+childNumb).val());
                        $('#PriceID_'+childNumb).val(pricing.priceID);
                        $('#inputQty_'+childNumb).attr('data-min',pricing.minQty).attr('data-max',pricing.maxQty);
                        $('#MRRAmount_'+childNumb).attr('data-nondiscount',pricing.isNonDiscountable);
                        $('#NRRAmount_'+childNumb).attr('data-nondiscount',pricing.isNonDiscountable);
                        $('#QuotePrice_'+childNumb).val(pricing.isQuotePrice);
                        var appended = false;
                        var appendedOptional = false;
                        var zLocRequired = (pricing.hasOwnProperty('zLocRequired') && pricing.zLocRequired);
                        $('div[class*="childComponents_"]').each(function(idx,ele){
                            var cName = $(ele).attr('class').substring($(ele).attr('class').indexOf('childComponents_'));
                            if(Number(cName.replace(/[^0-9]*/g,''))>childNumb)
                                $(ele).remove();
                        });
                        //$('.childComponents_'+((childNumb+1).replace(/^0+/, '') +1)).remove();
                        var childAutoIncludesAdded = false;

                        //create child config objects for the selected component
                        var curData = masterObj.getDataObjByName(pricing.salesProductName);
                        var condProdCompRels = curData.conditionalProductComponentRelationships[pricing.spcComponentID];

                        for(var i = 0; i < masterObj.curConfig.selections.length; ++i){
                            var sel = masterObj.curConfig.selections[i];
                            if(sel.priceID == pricing.priceID){
                                var childConfigs = masterObj.createChildConfigs(condProdCompRels, curData.conditionalProductComponentRequirements, pricing.salesProductName, childNumb);
                                sel.childConfigs = childConfigs;
                                for(var j = 0; j < sel.childConfigs.length; ++j){
                                    sel.childConfigs[j].ConfigParentDisplayName = $(this).text();
                                    var childContent = masterObj.templates.configPickOne(sel.childConfigs[j]);
                                    var configPickOne = sel.childConfigs[j].pickOne != undefined && sel.childConfigs[j].pickOne;
                                    /*$('#configBodyContent')*/$(this).closest('.componentSelectionContainer').append('<div style="padding-left:10px;" class="'+(!configPickOne?'multiselectparent ': '')+'childComponents_'+(childNumb+1)+'">'+childContent+'</div>');
                                    if(sel.childConfigs[j].rels[sel.childConfigs[j].relKey].required)
                                        appended = true;
                                       // alert('EJ_in 4 -'+' ,sel.priceID :'+sel.priceID+' ,pricing.priceID :'+pricing.priceID +', '+childContent );
                                    masterObj.loadDefaultComponents(sel.childConfigs[j]);
                                    masterObj.removeSelectedComponents(sel.childConfigs[j]);
                                }
                            }

                            if(!childAutoIncludesAdded && sel.childConfigs != undefined){
                                for(var j = 0; j < sel.childConfigs.length; ++j){
                                    if(sel.childConfigs[j].selections != undefined){
                                        for(var ci = 0; ci < sel.childConfigs[j].selections.length; ++ ci){
                                            var cSel = sel.childConfigs[j].selections[ci];

                                            if(cSel.priceID == pricing.priceID){
                                                var ccondProdCompRels = curData.conditionalProductComponentRelationships[pricing.spcComponentID];
                                                var cchildConfigs = masterObj.createChildConfigs(ccondProdCompRels, curData.conditionalProductComponentRequirements, pricing.salesProductName, childNumb);
                                                cSel.childConfigs = cchildConfigs;
                                                for(var jc = 0; jc < cSel.childConfigs.length; ++jc){
                                                    cSel.childConfigs[jc].ConfigParentDisplayName = $(this).text();
                                                    var childContent = masterObj.templates.configPickOne(cSel.childConfigs[jc]);
                                                    var configPickOne = cSel.childConfigs[jc].pickOne != undefined && cSel.childConfigs[jc].pickOne;
                                                    /*$('#configBodyContent')*/$(this).closest('.componentSelectionContainer').append('<div class="'+(!configPickOne? 'multiselectparent ': '')+'childComponents_'+(childNumb+1)+'">'+childContent+'</div>');
                                                    if(cSel.childConfigs[jc].rels[cSel.childConfigs[jc].relKey].required)
                                                        appended = true;
                                                        //alert('EJ_in 5');
                                                    masterObj.loadDefaultComponents(cSel.childConfigs[jc]);
                                                    masterObj.removeSelectedComponents(cSel.childConfigs[jc]);
                                                    childAutoIncludesAdded = true;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        if((!appended || appended && appendedOptional) && !zLocRequired)
                            masterObj.enableConfigSave();
                        if(zLocRequired){
                            masterObj.loadZLocs(childNumb);
                            $('#zLocSelection_'+childNumb).show();
                        }
                        masterObj.autoSizeInputs.call(masterObj);
                        $('#dropdownMenuPricing_'+childNumb).focus();
                    });
                    $(document).on('hidden.bs.dropdown','.multiselect',function(e){
                        //get all selected items and create 'configs' for them with only a remove option.
                        var ul = $(e.target).find('ul');
                        ul.find('.multiselect:checked').each(function(idx,ele){
                            var configParentDisplayName = $(ele).closest('.multiselectparent').find('input[id^="configParentDisplayName_"]').val();
                            var configParent = $(ele).closest('.multiselectparent');
                            $(ele).removeProp('checked');
                            //get a new larger childnumb
                            var childNumbs = [];
                            $('input[id^=dropdownMenuPricing_').each(function(indx,elem){ childNumbs.push(Number($(elem).attr('data-childnumb')));});
                            childNumbs.sort(function(a,b){ if(a<b) return -1; if(a>b) return 1; return 0; });
                            var childNumb = childNumbs.pop() + 1;
                            var $li = $(ele).closest('li').clone().addClass('hide');
                            var selLink = $(ele).parent().parent().siblings('a').clone();
                            $(ele).closest('li').remove();

                            var newLi = $('<li><a href="#" class="removeSelection">Remove Selection</a></li>').append($li);
                            //var selected = {};
                            //var removes = masterObj.getSelectedComponents(masterObj.curConfig);
                            //$('input[id^="dropdownMenuPricing_"]').each(function(idx,ele){ selected[$(ele).val()] = true;});
                            //for(var i = 0; i < removes.length; ++i) selected[removes[i].DisplayName] = true;

                            var newConfig = $.extend(true, {}, masterObj.recurseSearchForConfigFromPricingName.call(masterObj, selLink.text(), configParentDisplayName, masterObj.curConfig));
                            newConfig.childNumb = childNumb;
                            newConfig.pickOne = true;
                            for(var i = newConfig.selections.length-1; i >= 0; --i) if(newConfig.selections[i].PricingName != selLink.text()) newConfig.selections.splice(i,1);
                            if(newConfig.selections.length > 0){
                                var optionalContent = masterObj.templates.configPickOne(newConfig);
                                /*$('#configBodyContent')*/configParent.append('<div style="padding-left:10px;" class="componentSelectionContainer componentSelectionContainer_'+(newConfig.childNumb)+' childComponents_'+(newConfig.childNumb)+'">'+optionalContent+'</div>');
                                var $clickyMe = $('.componentSelectionContainer_'+newConfig.childNumb).find('a[data-priceid="'+selLink.attr('data-priceid')+'"]').trigger('click');
                                var $ul = $clickyMe.closest('ul');
                                $ul.empty();
                                $ul.append(newLi);
                            }
                        });
                        if(ul.children().length == 0 && ul.parent().parent().find('input').val() == ''){
                            ul.closest('div.multiselectparent').children('.row').not('[id^="zLoc"]').hide();
                            ul.closest('div.multiselectparent').children('.componentSelectionContainer').css('padding-left',0);
                        }
                    });
                    $(document).on('click','.removeSelection',function(e){
                        var configLabel = $("#configLabel").text();
                        var multiSelectParent = $(this).closest('.componentSelectionContainer').parent('.multiselectparent');
                        multiSelectParent.children('.row').not('[id^="zLoc"]').show();
                        multiSelectParent.children('.componentSelectionContainer').css('padding-left','10px');
                        var saveInput = $(this).siblings('li').removeClass('hide');
                        $(e.target).closest('div.componentSelectionContainer').remove();
                        var available = [saveInput[0]];
                        var ddl = multiSelectParent.find('ul.dropdown-menu').first();
                        var clickyMe = null;
                        ddl.children('li').each(function(idx,ele){
                            available.push(ele);
                        });
                        available.sort(function(a,b){
                            if($(a).children('a').text() < $(b).children('a').text()) return -1;
                            if($(a).children('a').text() > $(b).children('a').text()) return 1;
                            return 0;
                        });
                        ddl.empty().append(available);
                        
                        // if it's access, allow saving even when there's only one container
                        if (!configLabel.trim().includes("Access")){
                            if($('.componentSelectionContainer').length == 1) masterObj.disableConfigSave();
                        }
                        
                    });
                    $(document).on('click','.existingZLocation',function(){
                        var childNumb = $(this).parent().parent().parent().siblings('input').attr('data-childnumb');
                        $('#dropdownMenuCurrentLocation_'+childNumb).val($(this).text()).attr('data-recid',$(this).attr('data-recid'));
                        $('#dropdownMenuCurrentLocation_'+childNumb).siblings('button').removeClass('btn-primary').addClass('btn-default');
                        $('.newZLoc').hide();
                        var allSecLocInputs = $('input[id^="dropdownMenuCurrentLocation_"]:visible');
                        var allSecLocInputsSet = true;
                        for(var i = 0; i < allSecLocInputs.length; ++i){
                            if($(allSecLocInputs[i]).val() == '') {
                                allSecLocInputsSet = false;
                                break;
                            }
                        }
                        if(allSecLocInputsSet)
                            masterObj.enableConfigSave();
                    });
                    $(document).on('click','.newZLocation',function(){
                        var childNumb = $(this).parent().parent().parent().siblings('input').attr('data-childnumb');
                        $('#dropdownMenuCurrentLocation_'+childNumb).val($(this).text());
                        $('#dropdownMenuCurrentLocation_'+childNumb).siblings('button').removeClass('btn-primary').addClass('btn-default');
                        if(!geoCoder.googleBound){
                            asynch_bindGoogleAddressSearchBox($('#address_'+childNumb));
                            geoCoder.googleBound = true;
                        }
                        else{
                            var options = { componentRestrictions: { country: 'us'} };
                            try{
                                var autocomplete = new google.maps.places.Autocomplete(document.getElementById('address_'+childNumb), options);
                                autocomplete.setTypes(['geocode']);
                            }
                            catch(e){ }
                        }

                        $('.newZLoc').show();
                        $('dropdownMenuCurrentLocation_'+childNumb).focus();
                    });
                    $(document).on('change','.inputQty',function(){
                        if($(this).val() == 0){
                            $(this).val($(this)[0].defaultValue);
                            alert('You can\'t save this item with a 0 quantity.  To remove use the removal button');
                        }

                        var childNumb = Number($(this).attr('data-childnumb'));
                        $('#Qty_'+childNumb).val($(this).val());

                        $('.childComponents_'+(childNumb+1)).find('.autoInclude').each(function(idx,ele){
                            if($(this).val() == 'true'){
                                $('.childComponents_'+(childNumb + 1)).find('.inputQty').val( $('#Qty_'+childNumb).val());
                                $('.childComponents_'+(childNumb + 1)).find('.hdnQty').val( $('#Qty_'+childNumb).val());
                            }
                        });
                    });
                    $(document).on('change','.MRRAmount',function(){
                        var childNumb = $(this).attr('data-childnumb');

                        if(masterObj.$(this).attr('data-nondiscount') == 'true' && parseFloat($(this).val()) < parseFloat($('#MRRFloor_'+childNumb).val()) && !isComponentChanged){
                            alert('You can\'t discount this item further');
                            $(this).val($('#MRRFloor_'+childNumb).val());
                        }
                        else{    
                            $('#MRR_'+childNumb).val($(this).val()); 
                        }
                        isComponentChanged = false;                            
                    });
                    $(document).on('change','.NRRAmount',function(){
                        var childNumb = $(this).attr('data-childnumb');

                        if(masterObj.$(this).attr('data-nondiscount') == 'true' && parseFloat($(this).val()) < parseFloat($('#NRRFloor_'+childNumb).val()) && !isComponentChanged){
                            alert('1 You can\'t discount this item further');
                            $(this).val($('#NRRFloor_'+childNumb).val());
                        }
                        else{    
                            $('#NRR_'+childNumb).val($(this).val()); 
                        }
                        isComponentChanged = false;                            
                    });                    
                    //warn them that they might lose data
                    $(window).on('beforeunload', function(){
                        if(!masterObj.saved) return 'Your unsaved changes will be lost. Are you sure you want to leave?';
                    });

                    //elements that need to be created manually
                    $('#accessTechTable').dataTable({
                        "order": [1, 'asc'],
                        "columns": [
                            null,
                            null,
                            null,
                            null
                        ],
                        "language":{
                            "zeroRecords": "No access records found for the building.",
                            "emptyTable": "No access records found for the building."
                        },
                        "searching":false,
                        "paging":false
                    });


                    masterObj.createConfigProdsFromExistingOLIs();
                    if(masterObj.discAuthortityApprovalLevel == false){
                        $('#btnApprove').hide();
                        $('#btnToggleList').hide();
                    }
                    //Draw everything else
                    masterObj.update();

                    masterObj.loadAcessTechFilterSelections();
                    //Default Access Techs
                    masterObj.defaultAccessBandwidthFilters();

                    //show at end to preven Flash of Unstyled Content!
                    $('#fucHelper').show();

                    //start with the menu open
                    $('#btnToggleMenu').click();

                    //elTop = $('#buttonContainer').offset().top;
                });
            })(jQuery);
            /********************** Address stuffs *************************/
            var geoCoder = {
                address: '',
                roomSuite: '',
                locationDropDown: null,
                locMode: null,
                setBtn: null,
                res: null,
                googleBound:false,

                create: function(addr, rSuite, lDD, mode, setBtn){
                    var gc = Object.create(this);
                    gc.address = addr;
                    gc.roomSuite = rSuite;
                    gc.locationDropDown = lDD;
                    gc.locMode = mode;
                    gc.setBtn = setBtn;
                    return gc;
                },
                createAddressToGeoCode: function(){
                    masterObj.openModalWaitDialog('Searching...');
                    geocodeAddress(this.address, this.geoCodeComplete.bind(this));
                },
                geoCodeComplete: function(result){
                    if(!hasMinimumLocationRequirements(result)){
                        result.success = false;
                        result.error = 'Missing one or more minimum requirements to create a valid location.';
                    }
                    else{
                        result.roomSuite = this.roomSuite;
                        this.res = result;
                        this.setBtn.removeAttr('disabled');
                    }
                    masterObj.closeModalWaitDialog();
                },
                invokeSecondaryLocationParsed: function(){
                    var result = this.res;
                    masterObj.openModalWaitDialog('Creating location...');
                    ConfigureNewSolution.SecondaryLocationParsed(result.streetNum, result.route, result.roomSuite, result.city, result.adminArea1, result.postalCode, result.latitude, result.longitude, false, this.secLocGeocodedCallback.bind(this));
                },
                secLocGeocodedCallback: function(result, status){
                    for(var key in result){
                        if(key == 'Error'){
                            alert('Error creating secondary location.  ' +result[key]);
                        }
                        else{
                            this.locationDropDown.prepend(masterObj.templates.zLocSelection({'Id':key,'Name':result[key]}));
                            $('a[data-recid='+key+']').click();
                        }
                    }
                    masterObj.closeModalWaitDialog();
                    masterObj.enableConfigSave();
                }
            }




            /********************** END Address stuffs ********************/
            var masterObject = {

                modalWaitDialog: null,
                containers: {},
                templates:{},
                iniProds: eval({!jsonIniProds}),
                terms: eval({!jsonTerms}),
                market: '',
                configId: '',
                opportunityLocationConfiguration: eval({!jsonSolution}),
                dataObjs: {},
                saved: true,
                configured: [],
                curConfig: null,
                configObjs: {},
                crumbNum: 1,
                crumbs: [],
                pricingViewObjs: {},
                storageEnabled: false,
                validationsNotMet: {},
                preReqValidationsNotMet: {},
                invalidProdValidations: {},
                invalidPricingValidations: {},
                additionalProductsNeededValidations: {},
                existingOLIs: {!jsonexistingOLIs},
                existingOLIsDataObjs: eval({!jsonExistingOLIsDataObjs}),
                featurePackageRels: {!jsonFeaturePackageRels},
                discAuthortityPercent: {!discountAuthorityLevel.Allowed_Level_Percentage__c},
                discAuthortityApprovalLevel: {!discountAuthorityLevel.IsApprovalLevel__c},
                discAuthortityApprovalLevelName: '{!discountAuthorityLevel.Name}',
                mldaLvl1: {name: "user", description: "Approved",approved:true},
                mldaLvl2: {name: "Sales Management", description: "Sales Management Approval Required",approved:false},
                mldaLvl2Approved: {name: "Sales Management", description: "Sales Management Approval Required",approved:true},
                mldaLvl3: {name: "Offer Management", description: "Offer Management Approval Required", approved:false},
                mldaLvl3Approved: {name: "Offer Management", description: "Offer Management Approval Required", approved:true},
                sLocSelections: null,
                locSelections: null,
                gCode: null,
                zLocMode: null,
                productGroups: {},
                currentGroup: {},
                spcSortConfigMap: {},
                availableAccessTechs: eval({!jsonAccessTechs}),
                bandwidthsByAccessTech: eval({!jsonbandwidthsByAccess}),
                accessBandwidthDefaults: eval({!jsonAccessBandwidthDefaults}),
                disableValidations: false,
                hiddenProductIds: eval({!jsonHiddenProductIds}),
                ucSpecialist: null,
                vendorRegistration: null,
                ucSpecialistValidationNotMet: false,
                $: jQuery,

                create: function(jQuery, iniProdsObj, termsObj, mkt, confId, sLocSelections, locSelections, spcSortConfigMap, disableValidations, ucSpecialist, vendorRegistration){
                    var mo = Object.create(this);
                    mo.$ = jQuery;
                    mo.iniProds = iniProdsObj;
                    mo.terms = termsObj;
                    mo.market = mkt;
                    mo.configId = confId;
                    mo.crumbNum = 1;
                    mo.crumbs.push({'Name':'Home', 'Number':1, 'ExternalID':0});
                    mo.modalWaitDialog = mo.$('#modalWaitDialog');
                    mo.storageEnabled = typeof(Storage) !== undefined;
                    mo.sLocSelections = sLocSelections;
                    mo.locSelections = locSelections;
                    mo.spcSortConfigMap = spcSortConfigMap;
                    mo.disableValidations = disableValidations;
                    mo.ucSpecialist = ucSpecialist;
                    mo.vendorRegistration = vendorRegistration;
                    //create templates
                    mo.templates.panel = Handlebars.compile(mo.$('#panel-template').html());
                    mo.templates.dropdown = Handlebars.compile(mo.$('#dropdown-template').html());
                    mo.templates.productButtons = Handlebars.compile(mo.$('#product-button-template').html());
                    mo.templates.componentButtons = Handlebars.compile(mo.$('#component-button-template').html());
                    mo.templates.configPickOne = Handlebars.compile(mo.$('#config-pickOne-template').html());
                    mo.templates.crumbs = Handlebars.compile(mo.$('#crumbs-template').html());
                    mo.templates.validationMessages = Handlebars.compile(mo.$('#validationMessages-template').html());
                    mo.templates.configuredSolutionComponents = Handlebars.compile(mo.$('#configured-solution-component-template').html());
                    mo.templates.configuredComponents = Handlebars.compile(mo.$('#configured-component-template').html());
                    mo.templates.configuredGroupComponents = Handlebars.compile(mo.$('#configured-group-component-template').html());
                    mo.templates.configuredGroup = Handlebars.compile(mo.$('#configured-group-template').html());
                    //mo.templates.configPickMulti = Handlebars.compile(mo.$('#config-pickMulti-template').html());
                    mo.templates.initialProductGroupings = Handlebars.compile(mo.$('#initial-product-grouping-template').html());
                    mo.templates.zLocSelection = Handlebars.compile(mo.$('#zloc-select-item-template').html());
                    mo.templates.productGroupSelections = Handlebars.compile(mo.$('#product-group-select-item-template').html());
                    mo.templates.accessTechFilterSelections = Handlebars.compile(mo.$('#access-tech-filter-item-template').html());
                    mo.templates.bandwidthFilterSelections = Handlebars.compile(mo.$('#bandwidth-filter-item-template').html());
                    //handlebars helpers
                    Handlebars.registerHelper('ifHiddenProdId', function(prodId, options){
                        var hidden = masterObj.hiddenProductIds.hasOwnProperty(prodId);
                        if(hidden)return options.fn(this);
                        else return options.inverse(this);
                    });
                    Handlebars.registerHelper('productTotal', function(products){
                        var totals = masterObj.getProductTotal(products);
                        return 'Total MRR: $'+totals.MRR+' Total NRR: $'+totals.NRR;
                    });
                    Handlebars.registerHelper('groupTotal', function(configured){
                        var totalMRR = 0.0;
                        var totalNRR = 0.0;
                        for(var i = 0; i < configured.length; ++i){
                            var prods = configured[i].prods;
                            var curTotals = masterObj.getProductTotal(prods);
                            totalMRR += Number(curTotals.MRR);
                            totalNRR += Number(curTotals.NRR);
                        }
                        return 'Total MRR: $'+totalMRR.toFixed(2)+' Total NRR: $'+totalNRR.toFixed(2);
                    });
                    Handlebars.registerHelper('ifHasZloc', function(products, options){
                        var hasZLoc = false;
                        for(var i = 0; i < products.length; ++i){
                            var prod = products[i];
                            if(prod.hasOwnProperty('ZLocId') && prod.ZLocId != '' && prod.ZLocId != null){
                                hasZLoc = true;
                                break;
                            }
                        }
                        if(hasZLoc) return options.fn(this);
                        else return options.inverse(this);
                    });
                    Handlebars.registerHelper('ifMdOrLess', function(options){
                        var mdOrLess = isBreakpoint('xs') || isBreakpoint('sm') || isBreakpoint('md');
                        if(mdOrLess) return options.fn(this);
                        else return options.inverse(this);
                    });
                    Handlebars.registerHelper('ifCurrentProd', function(name, options){
                        var curProd = name == masterObj.getCurrentCrumb().Name;
                        if(curProd) return options.fn(this);
                        else return options.inverse(this);
                    });
                    //add partials
                    Handlebars.registerPartial('configured-component-template', mo.templates.configuredComponents);
                    Handlebars.registerPartial('configured-group-component-template', mo.templates.configuredGroupComponents);
                    //create containers
                    mo.containers.prodBtnContainer = mo.$('#prodBtnContainer');
                    mo.containers.compBtnContainer = mo.$('#compBtnContainer');
                    mo.containers.configuredComponents = mo.$('#configuredComponents');
                    mo.containers.modalWaitBodyContent = mo.$('#waitModalBodyContent');
                    mo.containers.crumbHolder = mo.$('#crumbHolder');
                    mo.containers.validationMessageHolder = mo.$('#validationMessageHolder');
                    mo.containers.totals = mo.$('#totals');
                    mo.containers.prodContainer = mo.$('#prodContainer');
                    mo.containers.compContainer = mo.$('#compContainer');

                    return mo;
                },

                getSPCSortKeys: function(groupName,subGroup){
                    var sortMap = this.getSPCSortMap(groupName,subGroup);
                    var keys = []; for(var key in sortMap) keys.push(key);
                    return keys.sort(function(a,b){ return sortMap[a]-sortMap[b]; });
                },
                getSPCSortMap: function(groupName,subGroup){
                    var sortMap = {}
                    if(groupName == undefined || groupName == null || groupName == 'Home')
                        sortMap = this.spcSortConfigMap['None']['None'];
                    else
                        sortMap = this.spcSortConfigMap[groupName][subGroup];
                    return sortMap;
                },

                generateUUID: function(){
                    var d = new Date().getTime();
                    if(window.performance && typeof window.performance.now === "function"){
                        d += performance.now(); //use high-precision timer if available
                    }
                    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                        var r = (d + Math.random()*16)%16 | 0;
                        d = Math.floor(d/16);
                        return (c=='x' ? r : (r&0x3|0x8)).toString(16);
                    });
                    return uuid;
                },

                groupInitialProds: function(iniProdsObj){
                    var groupings = {};
                    for(var key in iniProdsObj){
                        var iniProd = iniProdsObj[key];
                        if(this.hiddenProductIds.hasOwnProperty(iniProd.salesProductID))continue;
                        var infoObj = this.createProdCompBtn('Product','primary',iniProd.name,iniProd.id,iniProd.salesProductID,'',iniProd.zLocType);
                        if(groupings.hasOwnProperty(iniProd.salesProductGroup))
                            groupings[iniProd.salesProductGroup].push(infoObj);
                        else
                            groupings[iniProd.salesProductGroup] = [infoObj];
                    }
                    for(var key in groupings){
                        var sortMap = this.getSPCSortMap('Product Group',key);
                        if(sortMap != undefined){
                            groupings[key].sort(function(a,b){
                                if(!sortMap.hasOwnProperty(a.Label)) return 1;
                                if(!sortMap.hasOwnProperty(b.Label)) return -1;
                                return sortMap[a.Label]-sortMap[b.Label];
                            });
                        }
                    }
                    return groupings;
                },

                getProductTotal: function(products){
                    var totalMRR = 0.0;
                    var totalNRR = 0.0;
                    for(var i = 0; i < products.length; ++i){
                        var pTotal = this.getTotalFromProduct(products[i]);
                        totalMRR += Number(pTotal.MRR);
                        totalNRR += Number(pTotal.NRR);
                    }
                    return {'MRR':totalMRR.toFixed(2), 'NRR':totalNRR.toFixed(2)};
                },

                getTotalFromProduct: function(product){
                    var totalMRR = 0.0;
                    var totalNRR = 0.0;
                    for(var i = 0; i < product.Children.length; ++i){
                        var totals = this.getTotalFromProduct(product.Children[i]);
                        totalMRR += Number(totals.MRR);
                        totalNRR += Number(totals.NRR);
                    }
                    totalMRR += Number(product.MRR == undefined ? 0 : product.MRR) * Number(product.Qty);
                    totalNRR += Number(product.NRR == undefined ? 0 : product.NRR) * Number(product.Qty);
                    return {'MRR':totalMRR.toFixed(2), 'NRR':totalNRR.toFixed(2)};
                },

                getSolutionTotal: function(){
                    var totalMRR = 0.0;
                    var totalNRR = 0.0;
                    for(var key in this.productGroups){
                        var groups = this.productGroups[key];
                        for(j = 0; j < groups.length; ++j){
                            var group = groups[j];
                            for(var i = 0; i < group.Configured.length; ++i){
                                var prods = group.Configured[i].prods;
                                var curTotals = this.getProductTotal(prods);
                                totalMRR += Number(curTotals.MRR);
                                totalNRR += Number(curTotals.NRR);
                            }
                        }
                    }
                    return {'MRR':totalMRR.toFixed(2), 'NRR':totalNRR.toFixed(2)};
                },

                getGroupTotal: function(group){
                    var totalMRR = 0.0;
                    var totalNRR = 0.0;
                    for(var i = 0; i < group.Configured.length; ++i){
                        var prods = group.Configured[i].prods;
                        var curTotals = masterObj.getProductTotal(prods);
                        totalMRR += Number(curTotals.MRR);
                        totalNRR += Number(curTotals.NRR);
                    }
                    return {'MRR':totalMRR.toFixed(2), 'NRR':totalNRR.toFixed(2)};
                },
                clearConfigWindowInputs: function(){
                    this.$('#ParentRelId').val('');
                    this.$('#SPCProductID').val('');
                    this.$('#SPCComponentID').val('');
                    this.$('#DisplayName').val('');
                    this.$('#MRR').val('');
                    this.$('#MRRFloor').val('');
                    this.$('#NRR').val('');
                    this.$('#NRRFloor').val('');
                    this.$('#Qty').val('');
                    this.$('#PriceID').val('');
                },
                clearSessionStorage: function(){
                    if(this.storageEnabled){
                        for(var key in sessionStorage){
                            delete sessionStorage[key];
                        }
                    }
                },
                saveToStorage: function(key, obj){
                    sessionStorage[key] = JSON.stringify(obj);
                },

                getFromStorage: function(key){
                    var jsonStr = sessionStorage[key];
                    var so = null;
                    if(jsonStr != null && jsonStr != '' && jsonStr != undefined){
                          try { 
                              so = JSON.parse(jsonStr); 
                          } 
                          catch(e) {}
                    }
                    //so = JSON.parse(jsonStr);
                    return so;
                },

                getCurDataObj: function(){
                    if(this.storageEnabled){
                        return this.getFromStorage(this.getCurrentCrumb().Name);
                    }
                    else{
                        return this.dataObjs[this.getCurrentCrumb().Name];
                    }
                },

                getDataObjByName: function(name){
                    if(this.storageEnabled){
                        return this.getFromStorage(name);
                    }
                    else{
                        return this.dataObjs[name];
                    }
                },

                getAllDataObjs: function(){
                    var objs = {};
                    if(this.storageEnabled){
                        for(var key in sessionStorage){
                           objs[key] = this.getFromStorage(key);
                        }
                    }
                    else{
                        objs = this.dataObjs;
                    }
                    return objs;
                },

                saveCurDataObj: function(obj,prodName){
                    if(this.storageEnabled){
                        this.saveToStorage(prodName,obj);
                    }
                    else{
                        this.dataObjs[prodName] = obj;
                    }
                },

                setCrumbTitle: function(title){
                    this.$('#CurrentCrumb').text(title);
                },

                update: function(){
                    this.clearUI();
                    if(this.getCurDataObj() == null){
                        this.removeEmptyGroups();
                        this.createInitialProdSelections();
                        this.$('#currentProductGroup').html('Configured Product Group&nbsp;<span class="caret"></span>').attr('data-toggle','dropdown');
                        this.$('#prodButtonContainerTitle').html('Products');
                        this.loadProductGroupSelections();
                        this.$('#curProd').html('Solution');
                        this.containers.compContainer.hide();
                        this.currentGroup = {}; //reset current group on the home tab
                    }
                    else{
                        this.$('#currentProductGroup').html(this.currentGroup.Name).removeAttr('data-toggle');
                        this.$('#prodButtonContainerTitle').html('Related Products');
                        this.$(this.$('#parentProducts').parent()).show();
                        this.createCompBtnSelections();
                        this.createRelatedProductSelections();
                        this.$('#curProd').html(this.currentGroup.Name);
                        this.setBadgeCounts();
                        this.containers.compContainer.show();
                    }
                    this.hideEmptyContainers();
                    this.enableDisalbeConditionalProds();
                    this.disableInvalidProds();
                    this.createCrumbs();
                    this.loadConfiguredElements();
                    this.setCrumbTitle(this.getCurrentCrumb().Name);

                },

                loadProductGroupSelections: function(){
                    this.$('#parentProducts').empty();
                    for(var key in this.productGroups){
                        for(var i = 0; i < this.productGroups[key].length; ++i){
                            var group = this.productGroups[key][i];
                            this.$('#parentProducts').append(this.templates.productGroupSelections({'Label':group.Name, 'ProdName':key, 'ProductId':group.ProdId, 'ZLocType':group.ZLocMode}));
                        }
                    }
                    if(this.$('#parentProducts').children().length == 0) this.$(this.$('#parentProducts').parent()).hide();
                    else this.$(this.$('#parentProducts').parent()).show();
                },
                loadAcessTechFilterSelections: function(){
                    masterObj.$('#accessTechs').empty();
                    for(var i = 0; i < masterObj.availableAccessTechs.length; ++i){
                        this.$('#accessTechs').append(masterObj.templates.accessTechFilterSelections({'Label':masterObj.availableAccessTechs[i]}));
                    }
                },
                defaultAccessBandwidthFilters: function(){
                    //click the default access type
                    for(var abKey in masterObj.accessBandwidthDefaults)
                        masterObj.$('#accessTechBtn' + abKey).click();
                },
                hideEmptyContainers: function(){
                    this.$('#prodContainer').show();
                    this.$('#compContainer').show();
                    if(this.$('#prodBtnContainer').children().length == 0) this.$('#prodContainer').hide();
                    if(this.$('#compBtnContainer').children().length == 0) this.$('#compContainer').hide();
                },

                recurseGetProdTreeCount: function(prod){
                    var count = 1;
                    for(var i = 0; i < prod.Children.length; ++i){
                        count += this.recurseGetProdTreeCount(prod.Children[i]);
                    }
                    return count;
                },

                setBadgeCounts: function(){
                    var prods = [];
                    var crumbName = masterObj.getCurrentCrumb().Name;
                    for(var i = 0; i < this.currentGroup.Configured.length; ++i){
                        if(this.currentGroup.Configured[i].name == crumbName){
                            prods = this.currentGroup.Configured[i].prods;
                            break;
                        }
                    }
                    var badgeCounts = {};
                    for(var i = 0; i < prods.length; ++i){
                        var prod = prods[i];
                        var id = (prod.ParentRelId == undefined || prod.ParentRelId == 'optionalComponent')? prod.RelTitle : prod.ParentRelId;
                        if(badgeCounts.hasOwnProperty(id)) badgeCounts[id] = badgeCounts[id] + this.recurseGetProdTreeCount(prod);
                        else badgeCounts[id] = this.recurseGetProdTreeCount(prod);
                    }
                    for(var key in badgeCounts){
                        var btn = this.$('button[data-id="'+key+'"]');
                        if(btn.length == 0) btn = this.$('button[data-prodname="'+key+'"]');
                        this.$(btn).children('.badge').text(badgeCounts[key]);
                    }
                },

                clearUI: function(){
                    this.clearProdBtnContainer();
                    this.clearCompBtnContainer();
                    this.clearConfiguredComponents();
                    this.clearTotals();
                },
                clearProdBtnContainer: function(){
                    this.$('#prodBtnContainer').empty();
                },
                clearCompBtnContainer: function(){
                    this.$('#compBtnContainer').empty();
                },
                clearConfiguredComponents: function(){
                    this.$('#configuredComponents').empty();
                },
                clearTotals: function(){
                    this.containers.totals.empty();
                },
                getConfiguredCurrentProds: function(){
                    var curGroup = this.currentGroup;
                    if(!this.$.isEmptyObject(curGroup)){
                        var name = this.getCurrentCrumb().Name;
                        for(var i = 0; i < curGroup.Configured.length; ++i){
                            if(curGroup.Configured[i].name == name){
                                return curGroup.Configured[i].prods;
                            }
                        }
                    }
                    return [];
                },

                setInvalidProds: function(spcCompId, prodId, priceId, prodName, group, compDisplayName){
                    if(this.disableValidations) return;
                    var dataObj = this.getDataObjByName(prodName);
                    var invalidRels = dataObj.ConditionalInvalidProdProdRels[spcCompId];
                    var initialInvalidRel = dataObj.InitialInvalidProdReqs
                    for(var key in invalidRels){
                        var invalids = dataObj.ConditionalInvalidProdProdReqs[key];
                        for(var i = 0; i < invalids.length; ++i){
                            var invalid = invalids[i];
                            if(invalid != null)
                                group.InvalidProds.push({'priceId':priceId,'salesProductID':invalid.salesProductID,'prodID':invalid.id, 'prodName':invalid.name, 'compDisplayName': compDisplayName});
                        }
                    }
                    if(dataObj.IniInvalidProdProdReqs != undefined){
                        var alreadySet = false;
                        for(var i = 0; i < group.InvalidProds.length; ++i){
                            if(group.InvalidProds[i].hasOwnProperty('configuredProdId') && group.InvalidProds[i].configuredProdId == prodId){
                                alreadySet = true;
                                break;
                            }
                        }
                        if(!alreadySet){
                            for(var relKey in dataObj.IniInvalidProdProdReqs){
                                var req = dataObj.IniInvalidProdProdReqs[relKey];
                                group.InvalidProds.push({'configuredProdId':prodId, 'salesProductID':req.salesProductID,'prodID':req.id, 'prodName':req.name, 'compDisplayName': compDisplayName});
                            }
                        }
                    }
                },
                getPriceAndProdIds: function(prod){
                    var ret = [];
                    ret.push({PriceId:prod.PriceId,ProdId:prod.ProdId});
                    if(prod.Children != undefined && prod.Children.length > 0){
                        for(var i = 0; i < prod.Children.length; ++i){
                            ret = ret.concat(this.getPriceAndProdIds(prod.Children[i]));
                        }
                    }
                    return ret;
                },
                unsetInvalidProds: function(){
                    if(this.disableValidations) return;
                    var configedProdIds = {};
                    if(!this.$.isEmptyObject(this.currentGroup)){
                        for(var i = 0; i < this.currentGroup.Configured.length; ++i){
                            var prods = this.currentGroup.Configured[i].prods;
                            for(var j = 0; j < prods.length; ++j){
                                var pNpIds = this.getPriceAndProdIds(prods[j]);
                                for(var k = 0; k < pNpIds.length; ++k){
                                    configedProdIds[pNpIds[k].PriceId] = true;
                                    configedProdIds[pNpIds[k].ProdId] = true;
                                }
                            }
                        }

                        for(var i = this.currentGroup.InvalidProds.length -1; i >= 0; --i){
                            if((this.currentGroup.InvalidProds[i].hasOwnProperty('priceId') && !configedProdIds.hasOwnProperty(this.currentGroup.InvalidProds[i].priceId))
                            || (this.currentGroup.InvalidProds[i].hasOwnProperty('configuredProdId') && !configedProdIds.hasOwnProperty(this.currentGroup.InvalidProds[i].configuredProdId)))
                                this.currentGroup.InvalidProds.splice(i,1);
                        }
                    }
                },

                isInConditionalPricing: function(comp, conditionalPricing){
                    for(var key in conditionalPricing){
                        for(var i = 0; i < conditionalPricing[key].length; ++i){
                            if(comp.id == conditionalPricing[key][i]) return true;
                        }
                    }
                    return false;
                },

                conditionalPricingRequirementMet: function(configedProdIds, comp, conditionalPricing, valid){
                    for(var key in conditionalPricing){
                        if(configedProdIds.hasOwnProperty(key)){
                            for(var i = 0; i < conditionalPricing[key].length; ++i){
                                if(comp.id == conditionalPricing[key][i]) return valid;
                            }
                        }
                    }
                    return !valid;
                },

                isValidPricing: function(comp, prodName, dataObj){
                    if(this.$.isEmptyObject(dataObj.conditionalInvalidProductPricing) && this.$.isEmptyObject(dataObj.conditionalValidProductPricing)) return true;
                    var configedProdIds = {};
                    for(var i = 0; i < this.currentGroup.Configured.length; ++i){
                        var prods = this.currentGroup.Configured[i].prods;
                        for(var j = 0; j < prods.length; ++j){
                            configedProdIds[prods[j].SPCProductID] = true;
                        }
                    }
                    if(this.isInConditionalPricing(comp, dataObj.conditionalInvalidProductPricing))
                        return this.conditionalPricingRequirementMet(configedProdIds, comp, dataObj.conditionalInvalidProductPricing, false);
                    if(this.isInConditionalPricing(comp, dataObj.ConditionalValidProductPricing))
                        return this.conditionalPricingRequirementMet(configedProdIds, comp, dataObj.ConditionalValidProductPricing, true);
                    return true;
                },

                disableInvalidProds: function(){
                    if(this.disableValidations) return;
                    if(!this.$.isEmptyObject(this.currentGroup)){
                        this.unsetInvalidProds();
                        var prodBtns = this.$('.ProductBtn:not(.Conditional)').removeProp('disabled');
                        for(var i = 0; i < this.currentGroup.InvalidProds.length; ++i){
                            this.$('button[data-prodid='+this.currentGroup.InvalidProds[i].salesProductID+']').prop('disabled','disabled');
                        }
                    }
                },

                enableDisalbeConditionalProds: function(){
                    if(this.disableValidations) return;
                    var curData = this.getCurDataObj();
                    //get all the Conditional Product Buttons and disable them.
                    var condProdBtns = this.$('.Conditional.ProductBtn');
                    this.$(condProdBtns).prop('disabled','disabled');

                    //loop through the list of configured components for the active product and collect the spc component id;
                    var currentConfigedProds = this.getConfiguredCurrentProds();
                    for(var i = 0; i < currentConfigedProds.length; ++i){
                        var configedProd = currentConfigedProds[i];
                        var spcCompId = configedProd.SPCComponentID;
                        //see if we have a conditional prod relation with that component id as key
                        if(curData.ConditionalProdRels.hasOwnProperty(spcCompId)){
                            //we do, so take the relIds and see what button to enable
                            for(var relId in curData.ConditionalProdRels[spcCompId]){
                                var prodsToEnable = curData.ConditionalProdReqs[relId];
                                for(var j = 0; j < prodsToEnable.length; ++j){
                                    var prodToEnable = prodsToEnable[j];
                                    this.$('[data-id="'+prodToEnable.id+'"]').removeProp('disabled');
                                }
                            }
                        }
                    }
                },

                loadConfiguredElements: function(){
                    if(this.$.isEmptyObject(this.productGroups))
                        this.containers.configuredComponents.html('No components configured');
                    else{
                        if(this.crumbNum == 1){
                            this.containers.configuredComponents.html(this.templates.configuredSolutionComponents({'Groups' : this.productGroups}));
                            var totals = this.getSolutionTotal();
                            this.containers.totals.html('<span>Total MRR: $'+totals.MRR+'</span>&nbsp;<span>Total NRR: $'+totals.NRR+'</span>');
                        }
                        else{
                            this.containers.configuredComponents.html(this.templates.configuredGroup(this.currentGroup));
                            if(this.currentGroup != null && this.currentGroup.Configured.length > 0){
                                this.currentGroup.Configured.sort(function(a,b){
                                    if(a.name == masterObj.getCurrentCrumb().Name) return -1;
                                    return 1;
                                });
                                this.containers.configuredComponents.html(this.templates.configuredGroup(this.currentGroup));
                                var totals = this.getGroupTotal(this.currentGroup);
                                this.containers.totals.html('<span>Total MRR: $'+totals.MRR+'</span>&nbsp;<span>Total NRR: $'+totals.NRR+'</span>');
                            }
                            else
                                this.containers.configuredComponents.html('No components configured for the current product');
                        }
                    }
                    this.autoSizeAddons();
                },

                createProdCompBtn: function(btnType, btnCategory, btnLabel, id, prodId, title, zLocType){
                    return { 'Type':btnType, 'Category':btnCategory, 'Label':btnLabel, 'Id':id, 'ProductId':prodId, 'Title':title, 'ZLocType':zLocType };
                },

                createInitialProdSelections: function(){
                    var groups = this.groupInitialProds(this.iniProds);
                    var sortKeys = this.getSPCSortKeys();
                    var html = '';
                    for(var i = 0; i < sortKeys.length; ++i){
                        if(groups.hasOwnProperty(sortKeys[i])){
                            html += this.templates.initialProductGroupings({ 'Name':sortKeys[i], 'Items':groups[sortKeys[i]] });
                            delete groups[sortKeys[i]];
                        }
                    }
                    for(var key in groups){
                        html += this.templates.initialProductGroupings({ 'Name':key, 'Items':groups[key]});
                    }
                    this.containers.prodBtnContainer.html(html);
                },

                createCompBtnSelections(){
                    var currentDataObj = this.getCurDataObj();
                    var ProdCompRels = currentDataObj.IniProdCompRels;
                    var ProdCompReqs = currentDataObj.IniProdCompReqs;
                    var OptProdComps = currentDataObj.OptionalPricing;
                    var allBtns = this.createProdCompReqSelections(ProdCompRels,ProdCompReqs);
                    allBtns = allBtns.concat(this.createProdCompOptSelections(OptProdComps));
                    allReqBtns = [];
                    allOptBtns = [];
                    for(var i = 0; i < allBtns.length; ++i){
                        var btn = allBtns[i];
                        if(btn.Category == 'success') allReqBtns.push(btn);
                        else allOptBtns.push(btn);
                    }

                    //sort

                    var sortMap = this.getSPCSortMap('SPC_Product__c',this.getCurrentCrumb().Name);
                    if(sortMap != undefined){
                        allReqBtns.sort(function(a,b){
                            if(!sortMap.hasOwnProperty(a.groupName)) return 1;
                            if(!sortMap.hasOwnProperty(b.groupName)) return -1;
                            return sortMap[a.groupName] - sortMap[b.groupName];
                        });
                        allOptBtns.sort(function(a,b){
                            if(!sortMap.hasOwnProperty(a.groupName)) return 1;
                            if(!sortMap.hasOwnProperty(b.groupName)) return -1;
                            return sortMap[a.groupName] - sortMap[b.groupName];
                        });
                    }
                    allBtns = allReqBtns.concat(allOptBtns);
                    this.containers.compBtnContainer.html(this.templates.componentButtons({ 'Items':allBtns}));
                },

                createProdCompReqSelections: function(ProdCompRels, ProdCompReqs){
                    var prodCompBtnObjs = [];
                    for(var relKey in ProdCompRels){
                        var groupName = ProdCompReqs[relKey][0].componentGroup;
                        var rel = ProdCompRels[relKey];
                        var title = 'Selections from this list are '+(rel.required? 'required':'optional');
                        var prodCompBtn = this.createProdCompBtn('Component',(rel.required?'success':'warning'),rel.displayName,relKey,'',title);
                        prodCompBtn.groupName = groupName;
                        prodCompBtnObjs.push(prodCompBtn);
                    }
                    return prodCompBtnObjs;
                },

                createProdCompOptSelections: function(OptProdComps){
                    var optCompBtnObjs = [];
                    for(var displayName in OptProdComps){
                        for(var relKey in OptProdComps[displayName]){
                            var optCompBtn = this.createProdCompBtn('OptionalComponent','warning',displayName,relKey,'', 'Selections from this list are optional');
                            optCompBtn.groupName = displayName;
                            optCompBtnObjs.push(optCompBtn);
                        }
                    }
                    return optCompBtnObjs;
                },

                createRelatedProductSelections: function(){
                    var currentDataObj = this.getCurDataObj();
                    var allBtns = this.createProdProdReqSelections(currentDataObj.IniProdProdRels,currentDataObj.IniProdProdReqs);
                    allBtns = allBtns.concat(this.createProdProdConditionalSelections(currentDataObj.ConditionalProdRels, currentDataObj.ConditionalProdReqs));
                    allBtns.sort(function(a,b){
                        if(a.Label > b.Label) return 1;
                        if(a.Label < b.Label) return -1;
                        return 0;
                    });
                    this.containers.prodBtnContainer.html(this.templates.productButtons({'Items':allBtns}));
                },

                createProdProdReqSelections: function(ProdProdRels, ProdProdReqs){
                    var prodProdBtnObjs = [];
                    var addedProds = {};
                    for(var reqKey in ProdProdReqs){
                        var req = ProdProdReqs[reqKey];
                        var prodProdBtn = this.createProdCompBtn('Product','primary',req.name,req.id,req.salesProductID,'Related product', req.zLocType);
                        if(!addedProds.hasOwnProperty(prodProdBtn.Id)){
                            prodProdBtnObjs.push(prodProdBtn);
                            addedProds[prodProdBtn.Id] = true;
                        }
                    }
                    return prodProdBtnObjs;
                },

                createProdProdConditionalSelections: function(ProdProdRels, ProdProdReqs){
                    var condProdBtnObjs = [];
                    var addedProds = {};
                    for(var reqKey in ProdProdReqs){
                        var reqs = ProdProdReqs[reqKey];
                        for(var i = 0; i < reqs.length; ++i){
                            var req = reqs[i];
                            var condProdBtn = this.createProdCompBtn('Conditional Product','primary',req.name,req.id,req.salesProductID,'Related product (may require specifc component selection)', req.zLocType);
                            if(!addedProds.hasOwnProperty(condProdBtn.Id)){
                                condProdBtnObjs.push(condProdBtn);
                                addedProds[condProdBtn.Id] = true;
                            }
                        }
                    }
                    return condProdBtnObjs;
                },

                createRequiredConfigWindow: function(relKey){
                    this.clearConfigWindowInputs();
                    var currentDataObj = this.getCurDataObj();
                    var rel = currentDataObj.IniProdCompRels[relKey];
                    var reqs = currentDataObj.IniProdCompReqs[relKey];
                    this.curConfig = this.createConfigObject(reqs, currentDataObj.IniProdCompRels, relKey, this.getCurrentCrumb().Name, (rel.pickOne != undefined && rel.pickOne), (rel.autoInclude != undefined && rel.autoInclude));
                    return this.templates.configPickOne(this.curConfig);
                },

                createOptionalConfigWindow: function(relKey, prodName){
                    this.clearConfigWindowInputs();
                    var currentDataObj = this.getCurDataObj();
                    var rel = currentDataObj.OptionalPricingRels[relKey];
                    var opts = currentDataObj.OptionalPricing[prodName][relKey];
                    this.curConfig = this.createConfigObject(opts, currentDataObj.OptionalPricingRels, relKey, this.getCurrentCrumb().Name, (rel.pickOne != undefined && rel.pickOne), (rel.autoInclude != undefined && rel.autoInclude));
                    return this.templates.configPickOne(this.curConfig);
                },

                getSelectedComponents: function(config){
                    var group = this.currentGroup;
                    var selected = [];
                    for(var i = 0; i < group.Configured.length; ++i){
                        if(config.crumbName == group.Configured[i].name){
                            for(var j = 0; j < group.Configured[i].prods.length; ++j){
                                var prod = group.Configured[i].prods[j];
                                for(var k = 0; k < config.comps.length; ++k){
                                    if(prod.PriceId == config.comps[k].priceID){ //|| (prod.ParentRelId == undefined && prod.RelTitle == title)){
                                        selected.push(prod);
                                    }
                                }
                            }
                            break;
                        }
                    }
                    return selected;
                },

                removeSelectedComponents: function(config){
                    var rel = config.rels[config.relKey];
                    if(!rel.pickOne){
                        var removes = this.getSelectedComponents(config);
                        for(var i = 0; i < removes.length; ++i){
                            $("a[data-priceid='" + removes[i].PriceId + "']").parent().remove();
                            /*$("a[data-priceid='" + removes[i].PriceId + "']").each(function(idx,ele){
                                var par = $(ele).closest('ul');
                                $(ele).parent().remove();
                                if(par.is(':empty')){
                                    par.closest('div.optionalComponent').remove();
                                }
                            });*/
                        }
                    }
                },

                loadDefaultComponents: function(config){
                    //get configured prod(s)
                    var childNumb = config.childNumb;
                    //alert('EJ_childNumb: '+childNumb);
                    var relList = config.rels;
                    var reqList = config.comps;
                    var rel = relList[config.relKey];
                    if(rel.hasOwnProperty('autoInclude') && rel.autoInclude){
                        for(var j = 0; j < reqList.length; ++j){
                            if(reqList[j].spcComponentID == rel.secondarySalesProductComponentID){
                                var req = reqList[j];
                                var pricing = masterObj.pricingViewObjs[req.priceID];
                                if(pricing.hasOwnProperty('accessTechName')){
                                    masterObj.$('#dropdownMenuAccessTech_'+childNumb).siblings().children('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                        if($(ele).text() == pricing.accessTechName) $(ele).trigger('click');
                                    });
                                    masterObj.$('#dropdownMenuBandwidth_'+childNumb).siblings().children('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                        if($(ele).text() == pricing.bandwidth) $(ele).trigger('click');
                                    });
                                }
                                else{
                                    masterObj.$('#dropdownMenuPricing_'+childNumb).siblings().children('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                        var compName = pricing.componentPricingName;
                                        if($(ele).text() == compName) $(ele).trigger('click');
                                    });
                                }

                                masterObj.$('#inputQty_'+childNumb).val(masterObj.$('#inputQty_'+(childNumb-1)).val());
                                return;
                            }
                        }
                    }
                    for(var i = 0; i < rel.childRelationships.length; ++i){
                        var childRel = rel.childRelationships[i];
                        if(childRel.hasOwnProperty('defaultQuantity')){
                            for(var j = 0; j < reqList.length; ++j){
                                if(reqList[j].spcComponentID == childRel.primarySalesProductComponentID){
                                    var req = reqList[j];
                                    var pricing = masterObj.pricingViewObjs[req.priceID];
                                    if(pricing.hasOwnProperty('accessTechName')){
                                        masterObj.$('#dropdownMenuAccessTech_'+childNumb).siblings().children('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                            if($(ele).text() == pricing.accessTechName) $(ele).trigger('click');
                                        });
                                        masterObj.$('#dropdownMenuBandwidth_'+childNumb).siblings().children('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                            if($(ele).text() == pricing.bandwidth) $(ele).trigger('click');
                                        });
                                    }
                                    else{
                                        masterObj.$('#dropdownMenuPricing_'+childNumb).siblings().children('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                            var compName = pricing.componentPricingName;
                                            if($(ele).text() == compName) $(ele).trigger('click');
                                        });
                                    }
                                    masterObj.$('#inputQty_'+childNumb).val(childRel.defaultQuantity);
                                    return;
                                }
                            }
                        }
                    }
                },

                loadAndCreateReconfigureWindow: function(key, priceId, prodId, prodName, parentProdName, groupName){
                    this.curConfig = this.configObjs[key];
                    if(this.curConfig == null || this.curConfig == undefined){
                        var dataObj = this.getDataObjByName(prodName); // if this isn't here, we need to get it
                        if(dataObj == null)
                            this.invokeGetPricingForProductReconfigure(key, priceId, prodId, prodName, parentProdName, groupName);
                        else
                            this.createReconfigureWindow(key, priceId, prodId, prodName, parentProdName, groupName);
                    }
                    else
                        this.createReconfigureWindow(key, priceId, prodId, prodName, parentProdName, groupName);
                },

                searchForProductByPriceIdFromReqRelLists(priceId, reqList, relList, prodName){
                    for(var relKey in reqList){
                        var reqs = reqList[relKey];
                        var rel = relList[relKey];
                        for(var i = 0; i < reqs.length; ++i){
                            if(reqs[i].priceID == priceId){
                                this.curConfig = this.createConfigObject(reqs, relList, relKey, prodName, (rel.pickOne != undefined && rel.pickOne), (rel.autoInclude != undefined && rel.autoInclude));
                                return;
                            }
                        }
                    }
                },

                createReconfigureWindow: function(key, priceId, prodId, prodName, parentProdName, groupName){
                    this.clearConfigWindowInputs();
                    this.curConfig = this.configObjs[key];
                    if(this.curConfig == null || this.curConfig == undefined){
                        //loop through the lists of products, depending on where we find it, call the method to load it.
                        var dataObj = this.getDataObjByName(prodName);
                        this.searchForProductByPriceIdFromReqRelLists(priceId, dataObj.IniProdCompReqs, dataObj.IniProdCompRels, prodName);
                        if(this.curConfig == null || this.curConfig == undefined){
                            for(var key in dataObj.OptionalPricing){
                                this.searchForProductByPriceIdFromReqRelLists(priceId, dataObj.OptionalPricing[key], dataObj.OptionalPricingRels, prodName);
                                if(this.curConfig != null && this.curConfig != undefined) break;
                            }
                        }
                        if(this.curConfig == null || this.curConfig == undefined){
                            var relList = {};
                            for(var compKey in dataObj.conditionalProductComponentRelationships){
                                for(var relKey in dataObj.conditionalProductComponentRelationships[compKey]){
                                    relList[relKey] = dataObj.conditionalProductComponentRelationships[compKey][relKey];
                                }
                            }
                            this.searchForProductByPriceIdFromReqRelLists(priceId, dataObj.conditionalProductComponentRequirements, relList, prodName);
                        }
                    }
                    this.curConfig.update = true;
                    var configContent = this.templates.configPickOne(this.curConfig);
                    masterObj.openConfigWindow(prodName,configContent);
                    masterObj.loadConfigureWindowFromPricing(priceId,parentProdName,groupName);
                    masterObj.removeSelectedComponents(this.curConfig);
                },

                loadConfigureWindowFromPricing: function(priceId,parentProdName,groupName){
                    //get configured prod(s)
                    var prod = null;
                    var groups = masterObj.productGroups[parentProdName];
                    for(var i = 0; i < groups.length; ++i){
                        if(groups[i].Name != groupName) continue;
                        var configured = groups[i].Configured;
                        for(var j = 0; j < configured.length; ++j){
                            if(configured[j].name == masterObj.curConfig.crumbName){
                                var configed = configured[j];
                                for(var k = 0; k < configed.prods.length; ++k){
                                    if(configed.prods[k].PriceId == priceId){
                                        prod = configed.prods[k];
                                        break;
                                    }
                                }
                            }
                            if(prod != null) break;
                        }
                        if(prod != null) break;
                    }
                    var pricing = masterObj.pricingViewObjs[priceId];
                    var childNumb = masterObj.curConfig.childNumb;
                    var workingProd = prod;
                    var hasChild = false;
                    var boxNumb = childNumb+1;
                    var voiceNumb = 0;
                    var isAccess = false;
                    if(workingProd == null) return false;
                    masterObj.reconfigureProd = prod;
                    while(workingProd != null){
                        //alert(pricing.componentPricingName);
                        if(pricing.hasOwnProperty('accessTechName')){
                            isAccess = true;
                            masterObj.$('#dropdownMenuAccessTech_'+childNumb).siblings().find('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                if($(ele).text() == pricing.accessTechName) $(ele).trigger('click');
                            });
                            masterObj.$('#dropdownMenuBandwidth_'+childNumb).siblings().find('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                var pricingName = pricing.pricingName != undefined ? ' - ' + pricing.pricingName : '';
                                if($(ele).text() == (pricing.bandwidth + pricingName)) $(ele).trigger('click');
                            });
                        }
                        else{
                            hasChild = false;
                            masterObj.$('#dropdownMenuPricing_'+childNumb).siblings().find('ul.dropdown-menu').children().find('a').each(function(idx,ele){
                                var compName = pricing.componentPricingName;
                                if($(ele).text() == compName){
                                    if($(ele).hasClass('hide')){
                                        var span = $(ele).siblings('span').trigger('click');
                                        span.closest('ul').parent().trigger('hidden.bs.dropdown');
                                    }
                                    else
                                        $(ele).trigger('click');
                                        hasChild = true;
                                }
                            });
                        }
                        
                       
                        if (isAccess) {
                            var accessNumb = childNumb;
                            if (accessNumb > 0) {
                                accessNumb += 1;    
                            }
                            
                            masterObj.$('#inputQty_'+accessNumb).val(workingProd.Qty).change();
                            masterObj.$('#MRRAmount_'+accessNumb).val(workingProd.MRR).change();
                            masterObj.$('#NRRAmount_'+accessNumb).val(workingProd.NRR).change();
                        }
                        //else if (parentProdName.includes("Basic Voice")){
                            //alert(voiceNumb);
                        //  masterObj.$('#inputQty_'+voiceNumb).val(workingProd.Qty).change();
                        //  masterObj.$('#MRRAmount_'+voiceNumb).val(workingProd.MRR).change();
                        //  masterObj.$('#NRRAmount_'+voiceNumb).val(workingProd.NRR).change();     
                        //}
                        else {
                            masterObj.$('#inputQty_'+boxNumb).val(workingProd.Qty).change();
                            masterObj.$('#MRRAmount_'+boxNumb).val(workingProd.MRR).change();
                            masterObj.$('#NRRAmount_'+boxNumb).val(workingProd.NRR).change();
                        } 
                        
                        
                        //Select configured z location
                        if(prod.ZLocId != undefined){
                            if($('a[data-recid='+prod.ZLocId+']').length == 0)
                                masterObj.$('#dropdownMenuCurrentLocation_'+childNumb).siblings().children('ul.dropdown-menu').prepend(masterObj.templates.zLocSelection({'Id':prod.ZLocId,'Name':prod.ZLocName}));
                            $('a[data-recid='+prod.ZLocId+']').click();
                        }

                        //move to next prod, childNumber, pricing.
                        if(prod.Children != null && prod.Children != undefined && prod.Children.length > childNumb){
                            workingProd = prod.Children[childNumb++];
                            pricing = masterObj.pricingViewObjs[workingProd.PriceId];
                            
                            boxNumb += 1;
                            voiceNumb += 1;
                            if (hasChild) {
                                childNumb += 1;
                            }
                        }
                        else workingProd = null;
                    }
                    return true;
                },

                recurseSearchForConfigFromPricingName: function(pricingName, parentDisplayName, config){
                    var retConfig = null;
                    for(var i = 0; i < config.selections.length; ++i){
                        if(config.IsAccess){
                            for(var j = 0; j < config.selections[i].Selections.length; ++j){
                                if(config.selections[i].Selections[j].PricingName == pricingName && (config.ConfigParentDisplayName == undefined || config.ConfigParentDisplayName == parentDisplayName)) return config;
                                if(config.selections[i].Selections[j].childConfigs != undefined){
                                    for(var k = 0; k < config.selections[i].Selections[j].childConfigs.length && retConfig == null; ++k){
                                        retConfig = this.recurseSearchForConfigFromPricingName(pricingName, parentDisplayName, config.selections[i].Selections[j].childConfigs[k]);
                                    }
                                }
                            }
                        }else{
                            if(config.selections[i].PricingName == pricingName && (config.ConfigParentDisplayName == undefined || config.ConfigParentDisplayName == parentDisplayName)) return config;
                            if(config.selections[i].childConfigs != undefined){
                                for(var j = 0; j < config.selections[i].childConfigs.length && retConfig == null; ++j){
                                    retConfig = this.recurseSearchForConfigFromPricingName(pricingName, parentDisplayName, config.selections[i].childConfigs[j]);
                                }
                            }
                        }
                    }
                    return retConfig;
                },

                createConfigObject: function(comps, rels, relKey, prodName, updateIfPossible, autoInclude, childNumb){
                    var updateCurrent = (updateIfPossible != undefined && updateIfPossible);
                    var compConfigObjs = [];
                    var isAccess = false;
                    childNumb = childNumb == undefined? 0 : childNumb;
                    var curData = this.getDataObjByName(prodName);
                    for(var i = 0; i < comps.length; ++i){
                        var comp = comps[i];


                        var pricing = this.pricingViewObjs[comp.priceID];
                        if(!this.isValidPricing(comp, prodName, curData)) continue;
                        if(comp.hasOwnProperty('accessTechName')){
                            isAccess = true;
                            var existingObj = false;
                            var option = {
                                'PricingName':comp.componentPricingName,
                                //'Bandwidth':(comp.hasOwnProperty('bandwidth')?comp.bandwidth : 0),
                                //'mrr':Number(comp.mrr).toFixed(2),
                                //'mrrFloor':Number(comp.mrrFloor).toFixed(2),
                                //'nrr':Number(comp.nrr).toFixed(2),
                                //'nrrFloor':Number(comp.nrrFloor).toFixed(2),
                                //'spcProductId':comp.spcProductID,
                                //'spcComponentId':comp.spcComponentID,
                                'RequireZLoc': (pricing.hasOwnProperty('zLocRequired')?pricing.zLocRequired : ''),
                                'Min': (pricing.hasOwnProperty('minQty')? pricing.minQty : ''),
                                'Max': (pricing.hasOwnProperty('maxQty')? pricing.maxQty : ''),
                                'NonDiscountable': (pricing.hasOwnProperty('isNonDiscountable')? pricing.isNonDiscountable : ''),
                                'priceID': comp.priceID,
                                'Bandwidth': (pricing.hasOwnProperty('bandwidth')? pricing.bandwidth : '')
                                //'childConfigs': childConfigs
                            };
                            for(var cIdx = 0; cIdx < compConfigObjs.length; ++cIdx){
                                var cObj = compConfigObjs[cIdx];
                                if(cObj.AccessTechName == comp.accessTechName){
                                    existingObj = true;
                                    if(cObj.hasOwnProperty('Selections')){
                                        cObj.Selections.push(option);
                                    }
                                    else cObj.Selections = [option];
                                    break;
                                }
                            }
                            if(!existingObj){
                                var cObj = {
                                    'AccessTechName' : comp.accessTechName,
                                    'Selections' : [option]
                                };
                                compConfigObjs.push(cObj);
                            }
                        }
                        else{
                            isAccess = false;
                            var cObj = {
                                'PricingName' : comp.componentPricingName,
                                //'mrr':Number(comp.mrr).toFixed(2),
                                //'mrrFloor':Number(comp.mrrFloor).toFixed(2),
                                //'nrr':Number(comp.nrr).toFixed(2),
                                //'nrrFloor':Number(comp.nrrFloor).toFixed(2),
                                //'spcProductId':comp.spcProductID,
                                //'spcComponentId':comp.spcComponentID,
                                'RequireZLoc': (pricing.hasOwnProperty('zLocRequired')?pricing.zLocRequired : ''),
                                'Min': (pricing.hasOwnProperty('minQty')? pricing.minQty : ''),
                                'Max': (pricing.hasOwnProperty('maxQty')? pricing.maxQty : ''),
                                'NonDiscountable': (pricing.hasOwnProperty('isNonDiscountable')? pricing.isNonDiscountable : ''),
                                'priceID':comp.priceID,
                                'Bandwidth': (pricing.hasOwnProperty('bandwidth')? pricing.bandwidth : '')
                                //'childConfigs': childConfigs
                            };
                            compConfigObjs.push(cObj);
                        }
                    }
                    compConfigObjs.sort(function(a,b){
                        if(isAccess){
                            if(a.AccessTechName > b.AccessTechName) return 1;
                            if(a.AccessTechName < b.AccessTechName) return -1;
                            return 0;
                        }
                        else{
                            if(a.PricingName > b.PricingName) return 1;
                            if(a.PricingName < b.PricingName) return -1;
                            return 0;
                        }
                    });
                    if(isAccess){
                        for(var i = 0; i < compConfigObjs.length; ++i){
                            var cfg = compConfigObjs[i];
                            cfg.Selections.sort(function(a,b){
                                var aVal = Number(a.PricingName.replace(/[^0-9]*/g,''));
                                var bVal = Number(b.PricingName.replace(/[^0-9]*/g,''));
                                if(aVal > bVal) return 1;
                                if(aVal < bVal) return -1;
                                return 0;
                            });
                        }
                    }
                    return {'IsAccess':isAccess, 'AutoInclude':autoInclude, 'comps':comps, 'rels':rels, 'relKey':relKey, 'pickOne':updateCurrent, 'update':updateCurrent, 'UUID':masterObj.generateUUID(), 'configKey':cObj.PricingName, 'childNumb':childNumb, 'crumbName':prodName, 'selections':compConfigObjs, 'relationDisplayName':rels[relKey].displayName == undefined ? 'Choose Service' : (rels[relKey].required == true ? 'Required' : 'Optional') + ' - ' + rels[relKey].displayName};
                },

                createChildConfigs: function(rels, allComps, prodName, childNumb){
                    var childConfigs = [];
                    for(var relKey in rels){
                        var rel = rels[relKey];
                        var comps = allComps[relKey];
                        childConfigs.push(this.createConfigObject(comps, rels, relKey, prodName, (rel.pickOne != undefined && rel.pickOne), (rel.autoInclude != undefined && rel.autoInclude), ++childNumb));
                    }
                    return childConfigs;
                },

                createCrumbs: function(){
                    this.containers.crumbHolder.html(this.templates.crumbs({'Items':this.crumbs}));
                },

                getCurrentCrumb: function(){
                    return this.crumbs[this.crumbNum-1];
                },

                getExternalProdIdFromCrumbName: function(cName){
                    for(var i = 0; i < this.crumbs.length; ++i){
                        if(this.crumbs[i].Name == cName)
                            return this.crumbs[i].ExternalID;
                    }
                },

                setCrumb: function(prodName, prodID, zLocMode){
                    this.crumbs.push({'Name':prodName, 'Number':++this.crumbNum, 'ExternalID':prodID, 'ZLocMode':zLocMode});
                },

                invokeGetPricingForProduct: function(prodId, prodName){
                    this.openModalWaitDialog('Getting data for product: ' + prodName);
                    ConfigureNewSolution.getPricingForProduct(prodId, this.market, this.terms, masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.EoF_Competitive_Building__c, this.disableValidations, function(result,status){
                            masterObj.invokeGetPricingForProductCallback(result,status,prodName,true);
                            masterObj.closeModalWaitDialog()
                        },
                        {'escape':false}
                    );
                },

                invokeGetPricingForProductReconfigure: function(key, priceId, prodId, prodName, parentProdName, groupName){
                    this.openModalWaitDialog('Getting data for product: ' + prodName);
                    ConfigureNewSolution.getPricingForProduct(prodId, this.market, this.terms, masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.EoF_Competitive_Building__c, this.disableValidations, function(result,status){
                            masterObj.invokeGetPricingForProductCallback(result,status,prodName,false);
                            masterObj.createReconfigureWindow(key, priceId, prodId, prodName, parentProdName, groupName);
                            masterObj.closeModalWaitDialog()
                        },
                        {'escape':false}
                    );
                },

                getPricingViews: function(priceObj){
                    for(key in priceObj){
                        for(key2 in priceObj[key]){
                            this.pricingViewObjs[priceObj[key][key2].priceID] = priceObj[key][key2];
                        }
                    }
                },
                getExpiredPricingViews: function(pricing){
                    for(var i = 0; i < pricing.length; ++i){
                        this.pricingViewObjs[pricing[i].priceID] = pricing[i];
                    }
                },

                loadZLocs: function(childNumb){
                    var mode = masterObj.zLocMode;
                    var dd = masterObj.$('#dropdownMenuCurrentLocation_'+childNumb).siblings().children('ul.dropdown-menu');
                    dd.empty();
                    if(mode == 'Location'){
                        for(var key in masterObj.locSelections){
                            dd.append(masterObj.templates.zLocSelection({'Id':key,'Name':masterObj.locSelections[key]}));
                        }
                        dd.append('<li><a href="#" class="newZLocation">New Secondary Location</a></li>');
                    }
                    else{
                        for(var key in masterObj.sLocSelections){
                            dd.append(masterObj.templates.zLocSelection({'Id':key,'Name':masterObj.sLocSelections[key]}));
                        }
                    }
                },

                invokeGetPricingForProductCallback: function(result,status,prodName,update){
                    var dataObj = JSON.parse(result);
                    this.saveCurDataObj(dataObj,prodName);

                    //get all pricing from dataObj and assign to pricingview on masterobj
                    for(componentGroup in dataObj.OptionalPricing){
                        for(key in dataObj.OptionalPricing[componentGroup]){
                            for(var i =0; i < dataObj.OptionalPricing[componentGroup][key].length; i++){
                                this.pricingViewObjs[dataObj.OptionalPricing[componentGroup][key][i].priceID] = dataObj.OptionalPricing[componentGroup][key][i];
                            }
                        }
                    }
                    this.getPricingViews(dataObj.IniProdCompReqs);
                    this.getPricingViews(dataObj.conditionalProductComponentRequirements);
                    if(update)
                        this.update();
                },

                openModalWaitDialog: function(message){
                    this.containers.modalWaitBodyContent.html(message);
                    this.modalWaitDialog.modal('show');
                },

                closeModalWaitDialog: function(){
                    this.modalWaitDialog.modal('hide');
                },

                disableCrumbsAndToolbarButtons: function(){
                    var disabledMessage = 'Disabled during config';
                    $(document).off('click','.crumb',masterObj.crumbClick);
                    $('.crumb').css('cursor','not-allowed').attr('title',disabledMessage);
                    $('#btnValidate').off('click',masterObj.validate).css('cursor','not-allowed').attr('title',disabledMessage);
                    $('#btnSave').off('click',masterObj.saveOlis).css('cursor','not-allowed').attr('title',disabledMessage);
                    $('#btnSaveAndExit').off('click',masterObj.saveOlis).css('cursor','not-allowed').attr('title',disabledMessage);
                    $('#btnApprove').off('click',masterObj.approveOlis).css('cursor','not-allowed').attr('title',disabledMessage);
                    $('#btnToggleList').off('click',masterObj.toggleListClick).css('cursor','not-allowed').attr('title',disabledMessage);
                    $('#btnToggleMenu').off('click',masterObj.toggleMenuClick).css('cursor','not-allowed').attr('title',disabledMessage);
                },

                enableCrumbsAndToolbarButtons: function(){
                    $(document).on('click','.crumb',masterObj.crumbClick);
                    $('.crumb').css('cursor','').removeAttr('title');
                    $('#btnValidate').on('click',masterObj.validate).css('cursor','').removeAttr('title');
                    $('#btnSave').on('click',masterObj.saveOlis).css('cursor','').removeAttr('title');
                    $('#btnSaveAndExit').on('click',masterObj.saveOlis).css('cursor','').removeAttr('title');
                    $('#btnApprove').on('click',masterObj.approveOlis).css('cursor','').removeAttr('title');
                    $('#btnToggleList').on('click',masterObj.toggleListClick).css('cursor','').removeAttr('title');
                    $('#btnToggleMenu').on('click',masterObj.toggleMenuClick).css('cursor','').removeAttr('title');
                },

                openConfigWindow: function(label,content){
                    this.$('#configLabel').html(label);
                    this.$('#configBodyContent').html('<div class="'+(this.curConfig.pickOne == undefined || !this.curConfig.pickOne? 'multiselectparent ':'')+'componentSelectionContainer componentSelectionContainer_0">'+content+'</div>');
                    this.disableCrumbsAndToolbarButtons();
                    this.disableConfigSave();
                    this.$('.selectionPanel').hide();
                    this.$('#configurePanel').show('fade');
                },

                closeConfigWindow: function(){
                    this.enableCrumbsAndToolbarButtons();
                    this.$('#configurePanel').hide();
                    this.$('.selectionPanel').show('fade');
                },

                enableConfigSave: function(){
                    this.$('#btnConfigSave').removeProp('disabled');
                },

                disableConfigSave: function(){
                    this.$('#btnConfigSave').prop('disabled',true);
                },

                recurseLoadOLIAndChildren: function(oli){
                    var pricing = masterObj.pricingViewObjs[oli.oli.Price_Id__c];
                    var defaultZeroPrice = 0;
                    var prod = {
                            'Qty':oli.oli.Qty__c,
                            'MRR':oli.oli.MRC__c != undefined ? (oli.oli.SPC_MRC_Is_Quote__c && oli.oli.MRC__c == 0 ? undefined : oli.oli.MRC__c.toFixed(2)) :  oli.oli.SPC_MRC_Is_Quote__c ? undefined : defaultZeroPrice.toFixed(2),
                            'MRRList': Number(oli.oli.MRCList__c).toFixed(2),
                            'MRRTotal': Number(oli.oli.MRC_Total__c).toFixed(2),
                            'MRRListTotal': Number(Number(oli.oli.MRCList__c) * Number(oli.oli.Qty__c)).toFixed(2),
                            'NRR':oli.oli.NRC__c != undefined ? (oli.oli.SPC_MRC_Is_Quote__c && oli.oli.NRC__c == 0 ? undefined : oli.oli.NRC__c.toFixed(2)) : oli.oli.SPC_MRC_Is_Quote__c ? undefined : defaultZeroPrice.toFixed(2),
                            'NRRList':Number(oli.oli.NRCList__c).toFixed(2),
                            'NRRTotal':Number(oli.oli.NRC_Total__c).toFixed(2),
                            'NRRFloor':Number(oli.oli.NRC_Floor__c).toFixed(2),
                            'NRRListTotal': Number(Number(oli.oli.NRCList__c) * Number(oli.oli.Qty__c)).toFixed(2),
                            'SPCComponentID':oli.oli.SPC_Component__c,
                            'SPCProductID':oli.oli.SPC_Sales_Product__c,
                            'DisplayName':oli.oli.PP_Product_Pricing_Name__c,
                            'ProdName':oli.productName,
                            'ParentRelId':oli.oli.Parent_Relationship__c,
                            'RelTitle':oli.oli.SPC_Feature_Group__c,
                            'PriceId':oli.oli.Price_Id__c,
                            'ProdId':oli.productExternalID,
                            'Hidden':(masterObj.hiddenProductIds.hasOwnProperty(oli.productExternalID)?'true':''),
                            'UUID':masterObj.generateUUID(),
                            'AutoInclude':oli.oli.Parent_Relationship__r != undefined ? oli.oli.Parent_Relationship__r.Auto_Include__c : '',
                            'AutoIncludeTrue':oli.oli.Parent_Relationship__r != undefined ? (oli.oli.Parent_Relationship__r.Auto_Include__c?'true':'') : '',
                            'ZLocId':(oli.oli.Secondary_Location__r != undefined? oli.oli.Secondary_Location__r.Id : (oli.oli.Secondary_Service_Location__r != undefined? oli.oli.Secondary_Service_Location__r.Id : '')),
                            'ZLocName':(oli.oli.Secondary_Location__r != undefined? oli.oli.Secondary_Location__r.Name : (oli.oli.Secondary_Service_Location__r != undefined? oli.oli.Secondary_Service_Location__r.Name : '')),
                            'ZLocType':(oli.oli.Secondary_Location__r != undefined? 'Location' : (oli.oli.Secondary_Service_Location__r != undefined? 'Service Location' : '')),
                            'NonDiscountable': (pricing != undefined && pricing.hasOwnProperty('isNonDiscountable')? pricing.isNonDiscountable : ''),
                            'ParentProdName': oli.oli.Group_Name__c != undefined ? oli.oli.Group_Name__c.replace(/[_0-9]+$/,''): '',
                            'GroupName': oli.oli.Group_Name__c,
                            'Expired': ((pricing != undefined && pricing.hasOwnProperty('isExpired') && pricing.isExpired)?'true':''),
                            'Children':[],
                            //TODO: figure out how to actually set type instead of newing up another oli
                            'OLI':masterObj.createOLIFromObject(oli.oli)
                        };

                    if(oli.configChildren != null && oli.configChildren != undefined){
                        for(var i = 0; i < oli.configChildren.length; ++i){
                            var cprod = this.recurseLoadOLIAndChildren(oli.configChildren[i]);
                            cprod.ConfigParentDisplayName = prod.DisplayName;
                            prod.Children.push(cprod);
                        }
                    }
                    
                    return prod;
                },

                recursesetInvalidProds: function(prod,group){
                    this.setInvalidProds.call(masterObj,prod.SPCComponentID,prod.ProdId,prod.PriceId,prod.ProdName,group,prod.DisplayName);
                    for(var i = 0; i < prod.Children.length; ++i){
                        this.recursesetInvalidProds(prod.Children[i],group);
                    }
                },

                createConfigProdsFromExistingOLIs: function(){
                    var dataObjs = masterObj.existingOLIsDataObjs;
                    for(var prodKey in dataObjs){
                        this.saveCurDataObj(dataObjs[prodKey],prodKey);
                        //get all pricing from dataObj and assign to pricingview on masterobj
                        for(var componentGroup in dataObjs[prodKey].OptionalPricing){
                            for(var key in dataObjs[prodKey].OptionalPricing[componentGroup]){
                                for(var i =0; i < dataObjs[prodKey].OptionalPricing[componentGroup][key].length; i++){
                                    this.pricingViewObjs[dataObjs[prodKey].OptionalPricing[componentGroup][key][i].priceID] = dataObjs[prodKey].OptionalPricing[componentGroup][key][i];
                                }
                            }
                        }
                        this.getPricingViews(dataObjs[prodKey].IniProdCompReqs);
                        this.getPricingViews(dataObjs[prodKey].conditionalProductComponentRequirements);
                        this.getExpiredPricingViews(dataObjs[prodKey].ExpiredPricing);
                    }
                    var allProds = {};
                    var allGroups = {};
                    for(var oliId in masterObj.existingOLIs){
                        var oli = masterObj.existingOLIs[oliId];
                        var parentProdName = oli.oli.Group_Name__c != undefined ? oli.oli.Group_Name__c.replace(/[_0-9]+$/,'') : '';
                        if(!allGroups.hasOwnProperty(parentProdName)) allGroups[parentProdName]=false;
                        if(oli.productName == parentProdName || parentProdName == 'Default'){
                            var zLocType = oli.oli.SPC_Sales_Product__r.Z_Location_Type__c;
                            var group = masterObj.getProductGroupFromName.call(masterObj,parentProdName,oli.oli.Group_Name__c);
                            while(group == null || group == undefined || group.Name != oli.oli.Group_Name__c) group = masterObj.createProductGroup.call(masterObj,parentProdName,oli.productExternalID,zLocType);
                            allGroups[parentProdName] = true;
                        }
                    }
                    //create groups for parents we didn't find.  probably only on existing customers.
                    var pNames = '';
                    for(var pName in allGroups){
                        if(!allGroups[pName]){
                            pNames += pNames == ''? "'"+pName+"'" : ",'"+pName+"'";
                        }
                    }
                    if(pNames != ''){
                        var queryResult = sforce.connection.query("select Id, Name, Z_Location_Type__c, SalesProductExternalID__c from SPC_Product__c where Name in ("+pNames+")");
                        var records = queryResult.getArray("records");
                        for(var i = 0; i < records.length; ++i){
                            var rec = records[i];
                            masterObj.createProductGroup.call(masterObj, rec.Name, Number(rec.SalesProductExternalID__c).toFixed(0), rec.Z_Location_Type__c);
                        }
                    }
                    for(var oliId in masterObj.existingOLIs){
                        var oli = masterObj.existingOLIs[oliId];
                        if(oli.oli.hasOwnProperty('Config_Parent__c') && oli.oli.Config_Parent__c != '' && oli.oli.Config_Parent__c != null) continue; // skip if it's a child.
                        var prods = {};
                        var prod = masterObj.recurseLoadOLIAndChildren.call(masterObj,oli);
                        var group = masterObj.getProductGroupFromName.call(masterObj,prod.ParentProdName,prod.GroupName);
                        masterObj.recursesetInvalidProds.call(masterObj,prod, group);

                        if(!allProds.hasOwnProperty(oli.oli.Id))allProds[oli.oli.Id] = prod;
                        if(!prods.hasOwnProperty(oli.oli.Id))prods[oli.oli.Id] = prod;
                        var prodsToAdd = [];
                        for(var key in prods) prodsToAdd.push(prods[key]);
                        var foundIt = false;
                        if(group != undefined){
                            for(var i = 0; i < group.Configured.length; ++i){
                                if(group.Configured[i].name == oli.productName){
                                    foundIt = true;
                                    group.Configured[i].prods = group.Configured[i].prods.concat(prodsToAdd);
                                    break;
                                }
                            }
                            if(!foundIt){
                                group.Configured.push({'name':oli.productName,'prodId':oli.productExternalID, 'prods':prodsToAdd, 'spcProdId': oli.oli.SPC_Sales_Product__c, 'zLocMode':oli.oli.SPC_Sales_Product__r.Z_Location_Type__c});
                            }
                        }
                    }

                },
                createOLIFromObject: function(oliObj){
                    var oli = new sforce.SObject("OLI__C");
                    delete oli.type;
                    oli.Id = oliObj.Id;
                    oli.Approval_Status__c = oliObj.Approval_Status__c;
                    oli.Approved__c = oliObj.Approved__c;
                    oli.Qty__c = oliObj.Qty__c;
                    oli.MRC__c = oliObj.MRC__c;
                    oli.NRC__c = oliObj.NRC__c;
                    oli.SPC_Component__c = oliObj.SPC_Component__c;
                    oli.SPC_Sales_Product__c = oliObj.SPC_Sales_Product__c;
                    oli.MRC_Floor__c = oliObj.MRC_Floor__c;
                    oli.NRC_Floor__c = oliObj.NRC_Floor__c;
                    oli.PP_Product_Pricing_Name__c = oliObj.PP_Product_Pricing_Name__c;
                    oli.PP_Sales_Rate_Plan_Description__c =  oliObj.PP_Product_Pricing_Name__c;
                    oli.OpportunityLocationConfiguration__c = oliObj.OpportunityLocationConfiguration__c;
                    oli.Price_Id__c = oliObj.Price_Id__c;
                    oli.AccessTechName__c = oliObj.AccessTechName__c;
                    oli.Bandwidth__c = oliObj.Bandwidth__c;
                    oli.MRCList__c = oliObj.MRCList__c;
                    oli.NRCList__c = oliObj.NRCList__c;
                    if(oliObj.hasOwnProperty('Secondary_Location__c')) oli.Secondary_Location__c = oliObj.Secondary_Location__c;
                    if(oliObj.hasOwnProperty('Secondary_Service_Location__c')) oli.Secondary_Service_Location__c = oliObj.Secondary_Service_Location__c;
                    //TODO: Figure out how to determine package flag
                    //oli.pp_Package__c = this.pricingViewObjs[oli.Price_Id__c].
                    oli.PP_Package_Feature__c = oliObj.PP_Package_Feature__c;
                    oli.SPC_Feature_Group__c = oliObj.SPC_Feature_Group__c;
                    oli.SPC_MaxQty__c = oliObj.SPC_MaxQty__c;
                    oli.SPC_MinQty__c = oliObj.SPC_MinQty__c;
                    oli.SPC_MRC_Is_Quote__c = oliObj.SPC_MRC_Is_Quote__c;
                    oli.SPC_Sales_Product_Component_Id__c = oliObj.SPC_Sales_Product_Component_Id__c;
                    oli.Group_Name__c = oliObj.Group_Name__c;
                    oli.PP_Sales_Product__c = oliObj.PP_Sales_Product__c;
                    oli.PP_SalesProductExternalID__c = oliObj.PP_SalesProductExternalID__c;
                    oli.DQ__c = oliObj.DQ__c;
                    oli.SPC_Component_Id__c = oliObj.SPC_Component_Id__c;
                    oli.PP_Voice_Line__c = oliObj.PP_Voice_Line__c;
                    oli.PP_DID_Virtual_TN__c = oliObj.PP_DID_Virtual_TN__c;
                    oli.PP_LD_Interstate__c = oliObj.PP_LD_Interstate__c;
                    oli.PP_LD_Intrastate__c = oliObj.PP_LD_Intrastate__c;
                    oli.PP_Toll_Free__c = oliObj.PP_Toll_Free__c;
                    oli.PP_Voice_Line_Option__c = oliObj.PP_Voice_Line_Option__c;
                    oli.PP_Package__c = oliObj.PP_Package__c;
                    oli.PP_Package_Feature__c = oliObj.PP_Package_Feature__c;
                    oli.PP_Per_Account__c = oliObj.PP_Per_Account__c;
                    oli.Product_Family_Product__c = oliObj.Product_Family_Product__c;
                    oli.Product_Family_Id__c = oliObj.Product_Family_Id__c;
                    return oli;
                },
                createOLIFromInputs: function(childNumb, relKey, pricing, groupName){
                    var oli = new sforce.SObject("OLI__C");
                    delete oli.type;
                    oli.Qty__c = this.$('#Qty_'+childNumb).val();
                    oli.MRC__c = pricing.isQuotePrice && this.$('#MRR_'+childNumb).val() == '' ? undefined : this.$('#MRR_'+childNumb).val();
                    oli.NRC__c = pricing.isQuotePrice && this.$('#NRR_'+childNumb).val() == '' ? undefined : Number(this.$('#NRR_'+childNumb).val()).toFixed(2);
                    oli.SPC_Component__c = this.$('#SPCComponentID_'+childNumb).val();
                    oli.SPC_Sales_Product__c = this.$('#SPCProductID_'+childNumb).val();
                    oli.MRC_Floor__c = this.$('#MRRFloor_'+childNumb).val();
                    oli.NRC_Floor__c = this.$('#NRRFloor_'+childNumb).val();
                    oli.PP_Product_Pricing_Name__c = this.$('#DisplayName_'+childNumb).val();
                    oli.PP_Sales_Rate_Plan_Description__c =  oli.PP_Product_Pricing_Name__c;
                    oli.OpportunityLocationConfiguration__c = this.configId;
                    oli.Price_Id__c = this.$('#PriceID_'+childNumb).val();
                    oli.Parent_Relationship__c =  relKey == 'optionalComponent' ? '' : relKey;
                    oli.Group_Name__c = groupName;
                    if(this.zLocMode != null){
                        oli[(this.zLocMode == 'Location'? 'Secondary_Location__c' : 'Secondary_Service_Location__c')] = this.$('#dropdownMenuCurrentLocation_'+childNumb).attr('data-recid');
                    }
                   if(pricing != undefined){
                        oli.AccessTechName__c =pricing.accessTechName;
                        oli.Bandwidth__c =pricing.bandwidth;
                        oli.MRCList__c = pricing.mrr;
                        oli.NRCList__c = pricing.nrr;
                        oli.SPC_Feature_Group__c = pricing.componentGroup;
                        oli.SPC_MaxQty__c = pricing.maxQty;
                        oli.SPC_MinQty__c = pricing.minQty;
                        oli.SPC_MRC_Is_Quote__c = pricing.isQuotePrice;
                        oli.SPC_Sales_Product_Component_Id__c = pricing.salesProductComponentID;

                        oli.PP_Sales_Product__c = pricing.salesProductName;
                        oli.Product_Family_Product__c = pricing.salesProductName;
                        oli.Product_Family_Id__c = pricing.salesProductGroup;
                        oli.PP_SalesProductExternalID__c = pricing.salesProductID;
                        oli.DQ__c = oli.PP_Product_Pricing_Name__c;
                        oli.SPC_Component_Id__c = pricing.componentID;
                        oli.PP_Voice_Line__c = pricing.isVoiceLine;
                        oli.PP_DID_Virtual_TN__c = pricing.isDIDVirtualTN;
                        oli.PP_LD_Interstate__c = pricing.isLDInterstate;
                        oli.PP_LD_Intrastate__c = pricing.isLDIntrastate;
                        oli.PP_Toll_Free__c = pricing.isTollFree;
                        oli.PP_Voice_Line_Option__c = pricing.isVoiceLineOption;
                        oli.PP_Package__c = masterObj.featurePackageRels.hasOwnProperty(oli.SPC_Component__c);
                        oli.PP_Package_Feature__c = pricing.componentGroup == 'Included' ? true : false;
                        oli.PP_Per_Account__c = pricing.isPerAccount;
                    }

                    return oli;
                },
                recurseCheckOLIs: function(prod){
                    var oli = prod.OLI;
                    if(oli != undefined){
                        if(oli.MRC__c == undefined) oli.MRC__c = 0;
                        if(oli.NRC__c == undefined) oli.NRC__c = 0;
                    }
                    for(var i = 0; i < prod.Children.length; ++i){
                        this.recurseCheckOLIs(prod.Children[i]);
                    }
                },
                saveOlis: function(){
                    var saveAndExit = $(this).text().trim() == 'Save and Exit';
                    // make sure there is a UC Specialist assigned in order to be able to select UC components
                    masterObj.validateUCSpecialist();
                    masterObj.validateSolution();
                    var valSize = 0;
                    var order = 0;
                    for(key in masterObj.validationsNotMet)
                        valSize++;
                    for(var key in masterObj.preReqValidationsNotMet)
                        ++valSize;
                    for(var key in masterObj.invalidProdValidations)
                        ++valSize;
                    for(var key in masterObj.invalidPricingValidations)
                        ++valSize;
                    for(var key in masterObj.additionalProductsNeededValidations)
                        ++valSize;
                    if(masterObj.ucSpecialistValidationNotMet)
                        ++valSize;
                    if(valSize == 0){
                        var olis = [];
                        var errors = [];
                        for(var groupKey in masterObj.productGroups){
                            var groups = masterObj.productGroups[groupKey];
                            for(var i = 0; i < groups.length; ++i){
                                var group = groups[i];

                                for(var j = 0; j < group.Configured.length; ++j){
                                    var prods = group.Configured[j].prods;
                                    for(var k = 0; k < prods.length; ++k){
                                        var prod = prods[k];
                                        var oli = prod.OLI;
                                        if(oli != undefined){
                                            order += 1;
                                            oli.Display_Order__c = order;
                                            masterObj.recurseCheckOLIs.call(masterObj,prod);
                                            olis.push(prod);
                                        }
                                    }
                                }
                            }
                        }


                        masterObj.openModalWaitDialog('Saving Data: ');
                        if(saveAndExit)
                             Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ConfigureNewSolution.UpsertOLIs}', JSON.stringify(olis), masterObj.opportunityLocationConfiguration.Id,masterObj.opportunityLocationConfiguration.Opportunity_Location__c/*Object.keys(masterObj.existingOLIs)*/, function(result, event){
                                masterObj.saveOlisCallbackExit(result,event);
                                },{'escape':false}
                            );
                        else
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ConfigureNewSolution.UpsertOLIs}', JSON.stringify(olis), masterObj.opportunityLocationConfiguration.Id,masterObj.opportunityLocationConfiguration.Opportunity_Location__c/*Object.keys(masterObj.existingOLIs)*/, function(result, event){
                                masterObj.saveOlisCallback(result,event);
                                },{'escape':false}
                            );
                    }
                    else
                        alert('Requirements not met, unable to save.');
                },
                saveOlisCallback: function(result,event){
                    if(event.status){
                        var savedOlis = JSON.parse(result);
                        for(var i = 0; i < savedOlis.length; ++i){
                            savedOli = savedOlis[i];
                            delete savedOli.OLI.attributes;
                            var group = masterObj.getProductGroupFromName(savedOli.OLI.Group_Name__c.replace(/[_0-9]+$/,''),savedOli.OLI.Group_Name__c);
                            for(var j = 0; j < group.Configured.length; ++j){
                                if(group.Configured[j].name == savedOli.ProdName){
                                    var prods = group.Configured[j].prods;
                                    for(var k = 0; k < prods.length; ++k){
                                        var prod = prods[k];
                                        if(prod.UUID == savedOli.UUID){
                                            prod.OLI = savedOli.OLI;
                                            if(savedOli.Children != null && savedOli.Children != undefined){
                                                for(var l = 0; l < savedOli.Children.length; ++l){
                                                    delete savedOli.Children[l].OLI.attributes;
                                                }
                                                prod.Children = savedOli.Children;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        masterObj.closeModalWaitDialog();
                        masterObj.saved = true;
                    }

                    else
                    {
                        masterObj.closeModalWaitDialog();
                        alert('Error on save: ' + event.message);
                    }

                },
                saveOlisCallbackExit: function(result,event){
                    masterObj.saved = true;
                    window.location.replace("/apex/ManageLocationProducts?opportunityId=" + masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Order__r.Opportunity__c);
                },
                approveOlis: function(){
                    masterObj.openModalWaitDialog('Approving Solution: ');

                    var olis = [];
                    for(var parentProdName in masterObj.productGroups){
                        var groups = masterObj.productGroups[parentProdName];
                        for(var i = 0; i < groups.length; ++i){
                            var group = groups[i];
                            if(group.Configured != undefined){
                                for(var j = 0; j < group.Configured.length; ++j){
                                    var prods = group.Configured[j].prods;
                                    for(var k = 0; k < prods.length; ++k){
                                        var prod = prods[k];
                                        if(prod.OLI != undefined)
                                            olis.push(prod);
                                            //olis.push(masterObj.configured[key].prods[key2].OLI);
                                    }
                                }
                            }
                        }
                    }

                    delete masterObj.opportunityLocationConfiguration.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Order__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Order__r.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Order__r.Opportunity__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Order__r.Opportunity__r.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.attributes;
                    if(masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Serving_LSO__r != undefined) delete masterObj.opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Serving_LSO__r.attributes;
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ConfigureNewSolution.GrantApproval}',  JSON.stringify(olis), masterObj.discAuthortityApprovalLevelName, masterObj.opportunityLocationConfiguration, function(result, event){
                                masterObj.approveOlisCallback(result,event);
                            },{'escape':false}
                    );
                },
                approveOlisCallback: function(result,event){
                    if(event.status){
                        var savedOlis = JSON.parse(result);
                        for(var parentProdName in masterObj.productGroups){
                            var groups = masterObj.productGroups[parentProdName];
                            for(var i = 0; i < groups.length; ++i){
                                var group = groups[i];
                                for(var k = 0; k < group.Configured.length; ++k){
                                    for(var l = 0; l < group.Configured[k].prods.length; ++l){
                                        if(group.Configured[k].prods[l].OLI != undefined){
                                            for(oliKey in savedOlis){
                                                if(savedOlis[oliKey].UUID == group.Configured[k].prods[l].UUID){
                                                    delete savedOlis[oliKey].OLI.attributes;
                                                    group.Configured[k].prods[l].OLI = savedOlis[oliKey].OLI;
                                                    if(savedOlis[oliKey].Children != null && savedOlis[oliKey].Children != undefined){
                                                        for(var j = 0; j < savedOlis[oliKey].Children.length; ++j){
                                                            delete savedOlis[oliKey].Children[j].OLI.attributes;
                                                        }
                                                        group.Configured[k].prods[l].Children = savedOlis[oliKey].Children;
                                                    }
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    //TODO: add error handling
                    masterObj.closeModalWaitDialog();

                    masterObj.update();
                },
                validate: function(){
                    //if(masterObj.getCurDataObj() != null)
                    //    masterObj.validateProduct();
                    //else
                        masterObj.validateSolution();
                },

                validateProduct: function(){
                    if(masterObj.disableValidations) return;
                    var cName = masterObj.getCurrentCrumb().Name;
                    if(masterObj.getCurDataObj() != null && masterObj.getCurDataObj() != undefined){
                        var ProdCompRels = masterObj.getCurDataObj().IniProdCompRels;

                        //loop through initial ProductComponentRelationships
                        var vals = [];
                        for(var relKey in ProdCompRels){

                            var rel = ProdCompRels[relKey];
                            if(rel.required){
                                var relationshipMet = false;
                                var curProds = masterObj.getConfiguredCurrentProds();
                                if(curProds != undefined){
                                    for(var i = 0; i < curProds.length; i++){
                                        if(curProds[i].ParentRelId == rel.id){
                                            relationshipMet = true;
                                            break;
                                        }
                                        for(var c = 0; c < curProds[i].Children.length; ++c){
                                            if(curProds[i].Children[c].ParentRelId == rel.id){
                                                relationshipMet = true;
                                                break;
                                            }
                                        }
                                        if(relationshipMet) break;
                                    }
                                }
                                if(!relationshipMet){
                                    vals.push(rel);
                                }
                            }
                        }
                        if(vals.length > 0)
                            masterObj.validationsNotMet[masterObj.currentGroup.Name + ' - ' + cName] = {'prodId': masterObj.getCurrentCrumb(), 'groupName': masterObj.currentGroup.Name,'parentProdName': masterObj.currentGroup.ParentProdName, 'prodName': masterObj.getCurrentCrumb().Name,'zLocType':masterObj.currentGroup.ZLocMode,'vals': vals};
                        else
                           delete masterObj.validationsNotMet[masterObj.currentGroup.Name + ' - ' + cName];

                        masterObj.createValidationMessages();
                    }
                },
                validateUCSpecialist: function(){
                    var queryResult = sforce.connection.query("select UC_Specialist__r.Name,Vendor_Registration__c from Opportunity Where Id='{!opp.Id}' limit 1");
                    var records = queryResult.getArray("records");
                    var ucSpecial = records[0].UC_Specialist__r;
                    var vendorRegister = records[0].Vendor_Registration__c;
                    if (ucSpecial == null) {
                        masterObj.ucSpecialist = "";
                    }
                    else {
                        masterObj.ucSpecialist = ucSpecial.Name;
                    }
                    if (vendorRegister == null) {
                        masterObj.vendorRegistration = "";
                    }
                    else {
                        masterObj.vendorRegistration = vendorRegister;
                    }
                    
                    
                    var allDataObjs = masterObj.getAllDataObjs();
                    masterObj.preReqValidationsNotMet = {};
                    masterObj.invalidProdValidations = {};
                    masterObj.invalidPricingValidations = {};
                    masterObj.additionalProductsNeededValidations = {};
                    masterObj.validationsNotMet = {};
                    masterObj.ucSpecialistValidationNotMet = false;
                    if($.isEmptyObject(masterObj.productGroups != undefined ? masterObj.productGroups : {})){
                        this.containers.validationMessageHolder.empty();
                        $('#validationMessageHolder').hide();
                        $('#validationMessageSuccessHolder').hide();
                        return;
                    }
                    for(var parentProdName in masterObj.productGroups){
                        for(var i = 0; i < masterObj.productGroups[parentProdName].length; ++i){
                            var group = masterObj.productGroups[parentProdName][i];
                            var prodsConfigured = {};
                            for(var j = 0; j < group.Configured.length; ++j){
                                prodsConfigured[group.Configured[j].name] = group.Configured[j].name;
                            }
                            if(allDataObjs != null){
                                for(var key in allDataObjs){
                                    if(prodsConfigured.hasOwnProperty(key)){
                                        if (key.includes("UC") && (masterObj.ucSpecialist == '' || masterObj.vendorRegistration == '')){
                                            masterObj.ucSpecialistValidationNotMet = true;
                                        }
                                        else{
                                            masterObj.ucSpecialistValidationNotMet = false;
                                        }
                                   
                                    }
                                }
                            }
                        }
                        masterObj.createValidationMessages();
                     }
                        
                },
                validateSolution: function(){
                    if(masterObj.disableValidations) return;
                    
                    var allDataObjs = masterObj.getAllDataObjs();
                    masterObj.preReqValidationsNotMet = {};
                    masterObj.invalidProdValidations = {};
                    masterObj.invalidPricingValidations = {};
                    masterObj.additionalProductsNeededValidations = {};
                    masterObj.validationsNotMet = {};
                    if($.isEmptyObject(masterObj.productGroups != undefined ? masterObj.productGroups : {})){
                        this.containers.validationMessageHolder.empty();
                        $('#validationMessageHolder').hide();
                        $('#validationMessageSuccessHolder').hide();
                        return;
                    }
                    for(var parentProdName in masterObj.productGroups){
                        for(var i = 0; i < masterObj.productGroups[parentProdName].length; ++i){
                            var group = masterObj.productGroups[parentProdName][i];
                            var prodsConfigured = {};
                            for(var j = 0; j < group.Configured.length; ++j){
                                prodsConfigured[group.Configured[j].name] = group.Configured[j].name;
                            }
                            if(allDataObjs != null){
                                for(var key in allDataObjs){
                                    if(prodsConfigured.hasOwnProperty(key)){
                                        var moreProdVals = [];
                                        if(key == 'Access Service'){
                                            if(group.Configured.length == 1)
                                               moreProdVals.push({'name': key,'groupName':group.Name});
                                        }

                                        var prodProdVals = [];
                                        try{
                                            for(var keyp in allDataObjs){
                                                for(var keyPs in allDataObjs[keyp].IniProdProdRels){
                                                    for(var k = 0; k < group.Configured.length; k++){
                                                        if(allDataObjs[keyp].IniProdProdRels[keyPs].secondarySalesProductExternalID == group.Configured[k].prodId){
                                                            var preReqProdFound = false;
                                                            for(var l = 0; l < group.Configured.length; l++){
                                                                if(allDataObjs[keyp].IniProdProdRels[keyPs].primarySalesProductExternalID == group.Configured[l].prodId){
                                                                   preReqProdFound = true;
                                                                   break;
                                                                }
                                                            }
    
                                                            if(!preReqProdFound)
                                                                prodProdVals.push({'name': group.Name + ' - ' + allDataObjs[keyp].IniProdProdRels[keyPs].primarySalesProductName,'prodName':allDataObjs[keyp].IniProdProdRels[keyPs].primarySalesProductName, 'prodId': allDataObjs[keyp].IniProdProdRels[keyPs].primarySalesProductExternalID});
                                                        }
                                                    }
                                                }
                                            }
                                        } catch(e) {}
                                        var ProdCompRels = allDataObjs[key].IniProdCompRels;
                                        //loop through initial ProductComponentRelationships
                                        var vals = [];
                                        var prodId;
                                        for(var relKey in ProdCompRels){
                                            var rel = ProdCompRels[relKey];

                                            if(rel.required){
                                                var relationshipMet = false;
                                                for(var k = 0; k < group.Configured.length; k++){
                                                    if(group.Configured[k].name == key){
                                                        if(prodId == null)
                                                            prodId = group.Configured[k].prodId;
                                                        for(var l = 0; l < group.Configured[k].prods.length; ++l){
                                                            if(group.Configured[k].prods[l].ParentRelId == rel.id){
                                                                relationshipMet = true;
                                                                break;
                                                            }
                                                            for(var c = 0; c < group.Configured[k].prods[l].Children.length; ++c){
                                                                if(group.Configured[k].prods[l].Children[c].ParentRelId == rel.id){
                                                                    relationshipMet = true;
                                                                    break;
                                                                }
                                                            }
                                                            if(relationshipMet) break;
                                                        }
                                                    }
                                                }
                                                if(!relationshipMet){
                                                    vals.push(rel);
                                                }
                                            }

                                        }
                                        var invalidProdVals = [];
                                        for(var iP = 0; iP < group.InvalidProds.length; ++ iP){
                                            for(var k = 0; k < group.Configured.length; k++){
                                                if(group.Configured[k].prodId == group.InvalidProds[iP].salesProductID){
                                                    invalidProdVals.push(group.InvalidProds[iP]);
                                                    break;
                                                }
                                            }
                                        }

                                        var invalidPricingVals = [];
                                        var invalidPricing = allDataObjs[key].conditionalInvalidProductPricing;
                                        for(var k = 0; k < group.Configured.length; k++){
                                            //if we have a configured product that has invalid pricing loop through invalid pricing and see if we have it on any configured product
                                            if(invalidPricing.hasOwnProperty(group.Configured[k].spcProdId)){
                                                for(var kk = 0; kk < group.Configured.length; kk++){
                                                    for(var l = 0; l < group.Configured[kk].prods.length; ++l){
                                                        for(var inp = 0; inp < invalidPricing[group.Configured[k].spcProdId].length; ++inp){
                                                            if(masterObj.pricingViewObjs.hasOwnProperty(group.Configured[kk].prods[l].PriceId) && masterObj.pricingViewObjs[group.Configured[kk].prods[l].PriceId].id == invalidPricing[group.Configured[k].spcProdId][inp])
                                                               invalidPricingVals.push({'productName': group.Configured[k].name,'invalidProductName':group.Configured[kk].name,'invalidPricing': group.Configured[kk].prods[l].DisplayName});
                                                        }
                                                    }
                                                }
                                            }
                                        }

                                        for(var iP = 0; iP < invalidProdVals.length; ++ iP){
                                            masterObj.invalidProdValidations[invalidProdVals[iP].prodName] = {'prodId': prodId, 'groupName': group.Name,'parentProdName': group.ParentProdName, 'prodName': key,'zLocType':group.ZLocMode,'vals': invalidProdVals[iP].compDisplayName};
                                        }

                                        for(var iP = 0; iP < invalidPricingVals.length; ++ iP){
                                            masterObj.invalidPricingValidations[invalidPricingVals[iP].invalidProductName] = {'prodId': prodId, 'groupName': group.Name,'parentProdName': group.ParentProdName, 'prodName': key,'zLocType':group.ZLocMode,'vals': invalidPricingVals[iP]};
                                        }

                                        for(var prodi = 0; prodi < prodProdVals.length; ++prodi){
                                           masterObj.preReqValidationsNotMet[prodProdVals[prodi].name] = {'prodId': prodProdVals[prodi].prodId, 'groupName': group.Name,'parentProdName': group.ParentProdName, 'prodName': prodProdVals[prodi].prodName,'zLocType':group.ZLocMode,'vals': prodProdVals[prodi]};
                                        }

                                        for(var iP = 0; iP < moreProdVals.length; ++ iP){
                                            masterObj.additionalProductsNeededValidations[moreProdVals[iP].name] = {'prodId': prodId, 'groupName': group.Name,'parentProdName': group.ParentProdName, 'prodName': moreProdVals[iP].name,'zLocType':group.ZLocMode,'vals': moreProdVals[iP].name};
                                        }

                                        if(vals.length > 0)
                                            masterObj.validationsNotMet[group.Name + ' - ' + key] = {'prodId': prodId, 'groupName': group.Name,'parentProdName': group.ParentProdName, 'prodName': key,'zLocType':group.ZLocMode,'vals': vals};
                                        else
                                            delete masterObj.validationsNotMet[group.Name + ' - ' + key];

                                    }
                                    else
                                         delete masterObj.validationsNotMet[group.Name + ' - ' + key];
                                }
                            }
                        }
                        masterObj.createValidationMessages();
                    }



                },
                createValidationMessages: function(){
                    var countMessages = 0;
                    for(var key in masterObj.validationsNotMet)
                        ++countMessages;

                    for(var key in masterObj.preReqValidationsNotMet)
                        ++countMessages;

                    for(var key in masterObj.invalidProdValidations)
                        ++countMessages;
                    for(var key in masterObj.invalidPricingValidations)
                        ++countMessages;
                    for(var key in masterObj.additionalProductsNeededValidations)
                        ++countMessages;
                    
                    if(masterObj.ucSpecialistValidationNotMet)
                        ++countMessages;

                    if(countMessages > 0){
                        this.containers.validationMessageHolder.html(this.templates.validationMessages({'Items':masterObj.validationsNotMet,'ProdProdItems':masterObj.preReqValidationsNotMet, 'InvalidProds': masterObj.invalidProdValidations,'InvalidPricing': masterObj.invalidPricingValidations,'AdditionalProdsNeeded':masterObj.additionalProductsNeededValidations,'RequireUCSpecialist':masterObj.ucSpecialistValidationNotMet}));
                        $('#validationMessageHolder').show();
                        $('#validationMessageSuccessHolder').hide();
                    }
                    else{
                        $('#validationMessageHolder').hide();
                        $('#validationMessageSuccessHolder').show();
                    }
                },
                hideValidationMessages: function(){
                    //$('#validationMessageHolder').hide();
                    $('#validationMessageSuccessHolder').hide();
                },
                createProductGroup: function(prodName,prodID,zLocMode){
                    var prodGroup = null;
                    if(this.productGroups.hasOwnProperty(prodName)){
                        prodGroup = {
                            'Name': (prodName+(this.productGroups[prodName].length+1).toString()),
                            'ProdId':prodID,
                            'ZLocMode':zLocMode,
                            'ParentProdName':prodName,
                            'Configured': [],
                            'InvalidProds': []
                        };
                        this.productGroups[prodName].push(prodGroup);
                    }
                    else{
                        prodGroup = {
                            'Name': prodName+'1',
                            'ProdId':prodID,
                            'ZLocMode':zLocMode,
                            'ParentProdName':prodName,
                            'Configured': [],
                            'InvalidProds': []
                        };
                        this.productGroups[prodName] = [prodGroup];
                    }
                    return prodGroup;
                },

                getProductGroupFromName: function(prodName,groupName){
                    if(this.productGroups.hasOwnProperty(prodName)){
                        for(var i = 0; i < this.productGroups[prodName].length; ++i){
                            if(this.productGroups[prodName][i].Name == groupName)
                                return this.productGroups[prodName][i];
                        }
                    }
                    return null;
                },

                removeProductGroupByName: function(parentProdName,groupName){
                    for(var i = 0; i < this.productGroups[parentProdName].length; ++i){
                        if(this.productGroups[parentProdName][i].Name == groupName){
                            this.productGroups[parentProdName].splice(i,1);
                            this.reindexProdGroups(parentProdName, i);
                            if(this.productGroups[parentProdName].length == 0){
                                delete this.productGroups[parentProdName];
                                break;
                            }
                        }
                    }
                },

                removeEmptyGroups: function(){
                    for(var key in this.productGroups){
                        var groups = this.productGroups[key];
                        for(var i = 0; i < groups.length; ++i){
                            var group = groups[i];
                            for(var j = group.Configured.length - 1; j >= 0; --j){
                                if(group.Configured[j].prods.length == 0) group.Configured.splice(j,1);
                            }
                            if(group.Configured.length == 0) this.removeProductGroupByName.call(this,group.ParentProdName,group.Name);
                        }
                    }
                },

                removeEmptyConfigs: function(){
                    for(var key in this.productGroups){
                        var group = this.productGroups
                    }
                },

                reindexProdGroups: function(parentProdName, indexStart){
                    var groups = this.productGroups[parentProdName];
                    for(var i = indexStart; i < groups.length; ++i){
                        var group = groups[i];
                        group.Name = group.ParentProdName + (i+1).toString();
                        for(var j = 0; j < group.Configured.length; ++j){
                            var prods = group.Configured[j].prods;
                            for(var k = 0; k < prods.length; ++k){
                                var prod = prods[k];
                                prod.GroupName = group.Name;
                                prod.OLI.Group_Name__c = group.Name;
                                for(var l = 0; l < prod.Children.length; ++l){
                                    var cProd = prod.Children[l];
                                    cProd.GroupName = group.Name;
                                    cProd.OLI.Group_Name__c = group.Name;
                                }
                            }
                        }
                    }
                },
                accessTechButtonClick: function(e){
                    masterObj.$('#accessTechFilter').click();
                    masterObj.$('#bandwidths').empty();
                    masterObj.$('#selectedBandwidth').text('Bandwidth');
                    masterObj.$('#selectedAccessTech').text($(this).text());
                    for(var i = 0; i < masterObj.bandwidthsByAccessTech[$(this).text()].length; ++i){
                        masterObj.$('#bandwidths').append(masterObj.templates.bandwidthFilterSelections({'Label':masterObj.bandwidthsByAccessTech[$(this).text()][i]}));
                    }
                    for(var abKey in masterObj.accessBandwidthDefaults)
                        masterObj.$('#bandwidthBtn' + masterObj.accessBandwidthDefaults[abKey]).click();
                },
                bandwidthButtonClick: function(e){
                    masterObj.$('#bandwidthFilter').click();
                    masterObj.$('#selectedBandwidth').text($(this).text() + ' Mbps');
                },

                productButtonClick: function(e){
                    masterObj.hideValidationMessages();
                    var prodName = masterObj.$(this).attr('data-prodName');
                    var parentProdName =  masterObj.$(this).attr('data-parentprodname');
                    var prodID = masterObj.$(this).attr('data-prodId');
                    var zLocMode = masterObj.$(this).attr('data-zloctype');
                    var spcId = masterObj.$(this).attr('data-id');
                    masterObj.setCrumb(prodName, prodID,zLocMode);
                    masterObj.zLocMode = zLocMode;
                    if(masterObj.$(e.target).hasClass('parent')){
                        masterObj.currentGroup = masterObj.createProductGroup.call(masterObj,prodName,prodID,zLocMode);
                    }
                    if(masterObj.$(e.target).hasClass('productGroup')){
                        var groupName = masterObj.$(e.target).attr('data-groupname');
                        masterObj.currentGroup = masterObj.getProductGroupFromName((parentProdName == undefined ? prodName : parentProdName),groupName);
                        if(masterObj.$('#currentProductGroup').attr('aria-expanded') == 'true')
                            masterObj.$('#currentProductGroup').click();
                    }
                    var isNew = true;
                    for(var i = 0; i < masterObj.currentGroup.Configured.length; ++i){
                        if(masterObj.currentGroup.Configured[i].name == prodName){
                            isNew = false;
                            break;
                        }
                    }
                    if(isNew) masterObj.currentGroup.Configured.push({'name':prodName,'prodId':prodID,'prods':[],'spcProdId':spcId,'zLocMode':zLocMode});

                    if(masterObj.getCurDataObj() == null)
                        masterObj.invokeGetPricingForProduct(prodID,prodName);
                    else
                        masterObj.update();
                },

                componentButtonClick: function(e){
                    masterObj.reconfigureProd = null;
                    masterObj.hideValidationMessages();
                    var prodName = $(this).attr('data-prodName');
                    var configContent = masterObj.createRequiredConfigWindow($(this).attr('data-Id'));
                    masterObj.openConfigWindow(prodName,configContent);
                    var currentDataObj = masterObj.getCurDataObj();
                    var rel = currentDataObj.IniProdCompRels[masterObj.curConfig.relKey];
                    var reqs = currentDataObj.IniProdCompReqs[masterObj.curConfig.relKey];
                    //alert('EJ_in componentButtonClick');
                    masterObj.loadDefaultComponents(masterObj.curConfig, currentDataObj.IniProdCompRels, reqs);
                    masterObj.removeSelectedComponents(masterObj.curConfig);

                    masterObj.$('.accessTechSelection').each(function(i, obj) {
                        if($(this).text() == masterObj.$('#selectedAccessTech').text()) $(this).click();
                    });

                    masterObj.$('.bandwidthSelection').each(function(i, obj) {
                        if($(this).attr('data-bandwidth') != '' && $(this).attr('data-bandwidth') == masterObj.$('#selectedBandwidth').text().substring(0,masterObj.$('#selectedBandwidth').text().indexOf(' '))) $(this).click();
                    });

                     masterObj.$('.componentSelection').each(function(i, obj) {
                        if($(this).attr('data-bandwidth') != '' && $(this).attr('data-bandwidth') == masterObj.$('#selectedBandwidth').text().substring(0,masterObj.$('#selectedBandwidth').text().indexOf(' '))){
                            $(this).click();
                            return false;
                        }
                    });
                    masterObj.autoSizeInputs.call(masterObj);
                },

                optionalComponentButtonClick: function(e){
                    masterObj.reconfigureProd = null;
                    masterObj.hideValidationMessages();
                    var prodName = $(this).attr('data-prodName');
                    var configContent = masterObj.createOptionalConfigWindow($(this).attr('data-Id'), prodName);
                    masterObj.openConfigWindow(prodName,configContent);
                    var currentDataObj = masterObj.getCurDataObj();
                    var rel = currentDataObj.OptionalPricingRels[masterObj.curConfig.relKey];
                    var opts = currentDataObj.OptionalPricing[prodName][masterObj.curConfig.relKey];
                    //alert('EJ_in optionalcomponentButtonClick');
                    masterObj.loadDefaultComponents(masterObj.curConfig, currentDataObj.OptionalPricingRels, opts);
                    masterObj.removeSelectedComponents(masterObj.curConfig);
                    masterObj.autoSizeInputs.call(masterObj);
                },

                reconfigureButtonClick: function(e){
                    masterObj.reconfigureProd = null
                    masterObj.hideValidationMessages();
                    var priceID = $(this).attr('data-priceid');
                    var prodID = $(this).attr('data-prodid');
                    var prodName = $(this).attr('data-productName');
                    var UUID = $(this).attr('data-uuid');
                    var zLocType = $(this).attr('data-zloctype');
                    var parentProdName = $(this).attr('data-parentprodname');
                    var groupName = $(this).attr('data-groupName');
                    masterObj.zLocMode = (zLocType == null || zLocType == undefined || zLocType == '')? null : zLocType;
                    masterObj.currentGroup = masterObj.getProductGroupFromName(parentProdName,groupName);
                    masterObj.$('#currentProductGroup').click();
                    masterObj.loadAndCreateReconfigureWindow(UUID, priceID, prodID, prodName, parentProdName, groupName);
                    masterObj.autoSizeInputs.call(masterObj);
                },

                recurseFindParentByDisplayName(prod,displayName,checkRoot){
                    var pProd = null;
                    if(prod.DisplayName == displayName) return prod;
                    for(var i = 0; i < prod.Children.length; ++i){
                        pProd = this.recurseFindParentByDisplayName(prod.Children[i],displayName,false);
                        if(pProd != null) return pProd;
                    }
                    if(pProd == null && checkRoot){
                        for(var i = 0; i < this.currentGroup.Configured.length; ++i){
                            if(this.currentGroup.Configured[i].name == prod.ProdName){
                                for(var j = 0; j < this.currentGroup.Configured[i].prods.length; ++j){
                                    pProd = this.recurseFindParentByDisplayName(this.currentGroup.Configured[i].prods[j],displayName,false);
                                    if(pProd != null) break;
                                }
                            }
                            if(pProd != null) break;
                        }
                    }
                    return pProd;
                },

                configSaveButtonClick: function(e){
                    var childNumbs = [];
                    $('input[id^="inpUpdate"]').each(function(idx,ele){ childNumbs.push(Number($(ele).attr('id').replace(/[^0-9]*/g,'')));});
                    childNumbs.sort(function(a,b){ if(a<b) return 1; if(a>b) return -1; return 0;});
                    var childNumb = childNumbs.pop();
                    var updateProduct = masterObj.$('#inpUpdate_'+childNumb).val() == 'true';
                    var relKey = masterObj.$('#inpRelKey_'+childNumb).val();
                    var autoInclude = masterObj.$('#autoInclude_'+childNumb).val();
                    var configParentDisplayName = masterObj.$('#configParentDisplayName_'+childNumb).val();
                    var name = masterObj.curConfig.crumbName;
                    var prodId = masterObj.getExternalProdIdFromCrumbName(name);
                    var parentProd = null;
                    var UUID = masterObj.generateUUID();
                    var curGroup = masterObj.currentGroup;
                    var reconfigureRemoved = false;
                    while(childNumb != null && childNumb != undefined){
                        if(relKey != undefined && masterObj.pricingViewObjs[masterObj.$('#PriceID_'+childNumb).val()] != undefined){
                            var pricing = masterObj.pricingViewObjs[masterObj.$('#PriceID_'+childNumb).val()];
                            var prod = {
                                'Qty':masterObj.$('#Qty_'+childNumb).val(),
                                'MRR':pricing.isQuotePrice && masterObj.$('#MRR_'+childNumb).val() == '' ? undefined : masterObj.$('#MRR_'+childNumb).val(),
                                'MRRList': pricing.mrr,
                                'MRRTotal':Number(Number(masterObj.$('#Qty_'+childNumb).val())*Number(masterObj.$('#MRR_'+childNumb).val())).toFixed(2),
                                'MRRListTotal': Number(Number(masterObj.$('#Qty_'+childNumb).val())*Number(pricing.mrr)).toFixed(2),
                                'NRR':pricing.isQuotePrice && masterObj.$('#NRR_'+childNumb).val() == '' ? undefined : Number(masterObj.$('#NRR_'+childNumb).val()).toFixed(2),
                                'NRRList': pricing.nrr,
                                'NRRTotal':Number(Number(masterObj.$('#Qty_'+childNumb).val())*Number(masterObj.$('#NRR_'+childNumb).val())).toFixed(2),
                                'NRRListTotal':Number(Number(masterObj.$('#Qty_'+childNumb).val())*Number(pricing.nrr)).toFixed(2),
                                'SPCComponentID':masterObj.$('#SPCComponentID_'+childNumb).val(),
                                'SPCProductID':masterObj.$('#SPCProductID_'+childNumb).val(),
                                'DisplayName':masterObj.$('#DisplayName_'+childNumb).val(),
                                'ProdName':name,
                                'ParentRelId':relKey,
                                'RelTitle':pricing.componentGroup,
                                'PriceId':masterObj.$('#PriceID_'+childNumb).val(),
                                'ProdId':prodId,
                                'OLI':masterObj.createOLIFromInputs(childNumb,relKey, pricing, curGroup.Name),
                                'UUID':UUID,
                                'AutoInclude':autoInclude,
                                'AutoIncludeTrue':(autoInclude == 'true'?'true':''),
                                'Min': pricing.minQty,
                                'Max': pricing.maxQty,
                                'NonDiscountable': (pricing.hasOwnProperty('isNonDiscountable')? pricing.isNonDiscountable : ''),
                                'ZLocId':masterObj.$('#dropdownMenuCurrentLocation_'+childNumb).attr('data-recid'),
                                'ZLocName':masterObj.$('#dropdownMenuCurrentLocation_'+childNumb).val(),
                                'ZLocType':masterObj.zLocMode,
                                'GroupName':curGroup.Name,
                                'ParentProdName':curGroup.ParentProdName,
                                'Children':[]
                            };
                            //Eval approval status
                            masterObj.evalApprovalStatusOnChange(prod,prod.OLI.MRCList__c,prod.OLI.NRCList__c);
                            var saveProdSolo = false;
                            if(parentProd == null || configParentDisplayName == undefined || configParentDisplayName == ''){
                                parentProd = prod;
                                saveProdSolo = true;
                            }
                            else{
                                var pProd = masterObj.recurseFindParentByDisplayName.call(masterObj,parentProd, configParentDisplayName,true);
                                pProd.Children.push(prod);
                            }

                            masterObj.setInvalidProds(prod.SPCComponentID, prod.ProdId, prod.PriceId, name, curGroup,prod.DisplayName);
                            var isNew = true;
                            var updatedProduct = false;
                            if(saveProdSolo){
                                for(var i = 0; i < curGroup.Configured.length; ++i){
                                    if(curGroup.Configured[i].name == name){
                                        if(updateProduct && !reconfigureRemoved){
                                            for(var j = 0; j < curGroup.Configured[i].prods.length; ++j){
                                                if((masterObj.reconfigureProd != null && curGroup.Configured[i].prods[j].PriceId == masterObj.reconfigureProd.PriceId) || (masterObj.reconfigureProd == null && (curGroup.Configured[i].prods[j].PriceId == prod.PriceId || curGroup.Configured[i].prods[j].ParentRelId == prod.ParentRelId))){
                                                    curGroup.Configured[i].prods.splice(j,1);
                                                    curGroup.Configured[i].prods.push(prod)
                                                    updatedProduct = true;
                                                    reconfigureRemoved = true;
                                                    break;
                                                }
                                            }
                                        }
                                        if(!updateProduct || !updatedProduct)
                                            curGroup.Configured[i].prods.push(prod);
                                        isNew = false;
                                        break;
                                    }
                                }
                                if(isNew)
                                    curGroup.Configured.push({'name':name,'prodId':prod.ProdId, 'prods':[prod], 'spcProdId': prod.SPCProductID, 'zLocMode':masterObj.zLocMode});
                            }
                            var curConf = masterObj.curConfig;
                            if(childNumb != 0 && curConf.selections != null && curConf.selections != undefined){
                                for(var i = 0; i < curConf.selections.length; ++i){
                                    var sel = curConf.selections[i];
                                    if(curConf.selections[i].childConfigs != undefined){
                                        for(var j = 0; j < curConf.selections[i].childConfigs.length; ++j){
                                            if(curConf.selections[i].childConfigs[j].relKey == relKey){
                                                curConf = sel.childConfigs[0];
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            curConf.update = true;
                            masterObj.configObjs[curConf.UUID] = curConf;
                        }
                        childNumb = childNumbs.pop();
                        UUID = masterObj.generateUUID();
                        updateProduct = masterObj.$('#inpUpdate_'+childNumb).val() == 'true';
                        relKey = masterObj.$('#inpRelKey_'+childNumb).val();
                        autoInclude = masterObj.$('#autoInclude_'+childNumb).val();
                        configParentDisplayName = masterObj.$('#configParentDisplayName_'+childNumb).val();
                    }

                    masterObj.closeConfigWindow();
                    masterObj.saved = false;
                    masterObj.update();
                },

                crumbClick: function(e){
                    var cNum = Number(masterObj.$(this).attr('data-crumbNum'));
                    if(cNum < masterObj.crumbNum){
                        while(cNum < masterObj.crumbNum){
                            --masterObj.crumbNum;
                            masterObj.crumbs.pop();
                        }
                        masterObj.update();
                    }
                },

                closeButtonClick: function(e){
                    masterObj.closeConfigWindow();
                },

                removeButtonClick: function(e){
                    masterObj.hideValidationMessages();
                    if(!(confirm('Remove the item from the solution?'))) return;
                    var name = masterObj.$(this).attr('data-productname');
                    var prodId = masterObj.$(this).attr('data-spcproductId');
                    var compId = masterObj.$(this).attr('data-spccomponentId');
                    var UUID = masterObj.$(this).attr('data-uuid');
                    var parentProdName = masterObj.$(this).attr('data-parentprodname');
                    var groupName = masterObj.$(this).attr('data-groupName');
                    var curGroup = masterObj.getProductGroupFromName(parentProdName,groupName);
                    var configedComps = [];
                    var confixIdx = 0;
                    for(var confixIdx = 0; confixIdx < curGroup.Configured.length; ++confixIdx){
                        if(curGroup.Configured[confixIdx].name == name){
                            configedComps = curGroup.Configured[confixIdx].prods;
                            break;
                        }
                    }
                    for(var i = 0; i < configedComps.length; ++i){
                        var c = configedComps[i];
                        if(c.UUID == UUID){
                            configedComps.splice(i,1);
                            if(configedComps.length == 0) curGroup.Configured.splice(confixIdx,1);
                            if(curGroup.Configured.length == 0 && masterObj.$.isEmptyObject(masterObj.currentGroup)) masterObj.removeProductGroupByName.call(masterObj,parentProdName,groupName);
                            break;
                        }
                    }
                    masterObj.saved = false;
                    masterObj.update();
                },

                recurseGetProdFromConfiguredByUUID: function(prods, UUID){
                    var prod = null;
                    for(var i = 0; i < prods.length; ++i){
                        if(prods[i].UUID == UUID) return prods[i];
                        prod = this.recurseGetProdFromConfiguredByUUID(prods[i].Children,UUID);
                        if(prod != null) return prod;
                    }
                    return prod;
                },

                configuredInputChange: function(e){
                    var name = masterObj.$(this).attr('data-productname');
                    var member = masterObj.$(this).attr('data-member');
                    var spcCompId = masterObj.$(this).attr('data-spccomponentid');
                    var spcProdId = masterObj.$(this).attr('data-spcproductid');
                    var UUID = masterObj.$(this).attr('data-uuid');
                    var isNonDiscountPricing = masterObj.$(this).attr('data-nondiscount');
                    var parentProdName = masterObj.$(this).attr('data-parentprodname');
                    var groupName   = masterObj.$(this).attr('data-groupName');                  
                    var oldValue = this.defaultValue;
                    var newValue = masterObj.$(this).val();
                    if(masterObj.$(this).hasClass('currency')) newValue = Number(newValue).toFixed(2);
                    if(masterObj.$(this).hasClass('number')) newValue = Number(newValue);
                    
                    if(member == 'MRR' && isNonDiscountPricing == 'true' && newValue < oldValue){
                        alert('You can\'t discount MRR of this item further.');                        
                        newValue= oldValue;
                    }
                    
                    var nrrFloor = masterObj.$(this).attr('data-nrrfloor');
                    if(member == 'NRR' && isNonDiscountPricing == 'true' && newValue < nrrFloor){
                        alert('You can\'t discount NRR of this item lower than NRRFloor - '+nrrFloor);
                        newValue= oldValue;
                    }

                    if(member == 'Qty' && newValue == 0){
                        alert('You can\'t save this item with a 0 quantity.  To remove use the removal button');
                        newValue = oldValue;
                    }



                    var group = masterObj.getProductGroupFromName(parentProdName,groupName);

                    for(var i = 0; i < group.Configured.length; ++i){
                        if(group.Configured[i].name == name){
                            prods = group.Configured[i].prods;
                            var prod = masterObj.recurseGetProdFromConfiguredByUUID.call(masterObj,prods,UUID);
                            prod[member] = newValue;
                            prod.MRRTotal = Number(Number(prod.Qty)*Number(prod.MRR == undefined ? 0 : prod.MRR)).toFixed(2);
                            prod.NRRTotal = Number(Number(prod.Qty)*Number(prod.NRR == undefined ? 0 : prod.NRR)).toFixed(2);
                            prod.MRRListTotal = Number(Number(prod.Qty)*Number(prod.MRRList)).toFixed(2);
                            prod.NRRListTotal = Number(Number(prod.Qty)*Number(prod.NRRList)).toFixed(2);
                            prod.OLI.Qty__c = Number(prod.Qty);
                            prod.OLI.MRC__c = Number(prod.MRR);
                            prod.OLI.NRC__c = Number(prod.NRR);


                            if(member == 'MRR') {
                                masterObj.evalApprovalStatusOnChange(prod,oldValue,prod.OLI.NRCList__c);
                            }else if(member == 'NRR') {
                                masterObj.evalApprovalStatusOnChange(prod,prod.OLI.MRCList__c,oldValue);
                            }
                            if(prod.Children != undefined){
                                for(var k = 0; k < prod.Children.length; k++){
                                    if(prod.Children[k].AutoInclude.toString().toLowerCase() == 'true' && member == 'Qty'){
                                        prod.Children[k][member] = newValue;
                                        prod.Children[k].MRRTotal = Number(Number(prod.Children[k].Qty)*Number(prod.Children[k].MRR == undefined ? 0 : prod.Children[k].MRR)).toFixed(2);
                                        prod.Children[k].NRRTotal = Number(Number(prod.Children[k].Qty)*Number(prod.Children[k].NRR == undefined ? 0 : prod.Children[k].NRR)).toFixed(2);
                                        prod.Children[k].MRRListTotal = Number(Number(prod.Children[k].Qty)*Number(prod.Children[k].MRRList)).toFixed(2);
                                        prod.Children[k].NRRListTotal = Number(Number(prod.Children[k].Qty)*Number(prod.Children[k].NRRList)).toFixed(2);
                                        prod.Children[k].OLI.Qty__c = Number(newValue);
                                        prod.Children[k].OLI.MRC__c = Number(prod.Children[k].MRR);
                                        prod.Children[k].OLI.NRC__c = Number(prod.Children[k].NRR);
                                    }
                                }
                            }
                        }
                    }
                    masterObj.clearConfiguredComponents();
                    masterObj.loadConfiguredElements();
                },
                evalApprovalStatusOnChange: function(changedProd, oldMRRValue, oldNRRValue){
                    var approval = masterObj.getMLDAApprovalLevelCombined(changedProd.OLI.MRC__c, changedProd.OLI.Qty__c, changedProd.OLI.MRC_Floor__c, oldMRRValue, changedProd.OLI.Approval_Status__c, 
                            changedProd.OLI.SPC_MRC_Is_Quote__c, changedProd.OLI.MRCList__c, changedProd.OLI.Approved__c, changedProd.OLI.PP_Product_Pricing_Name__c,
                            changedProd.OLI.NRC__c, changedProd.OLI.NRC_Floor__c,oldNRRValue,changedProd.OLI.NRCList__c);
                            
                    changedProd.OLI.Approval_Status__c = approval.description;
                    changedProd.OLI.Approved__c = approval.approved;

                },
                getMLDAApprovalLevelCombined: function(mrr, qty, mrrFloor, mrrPersisted, currentStatus, isQuote, mrrList, approved, priceName, nrr, nrrFloor, nrrPersisted, nrrList){
                    var mrrPersistedFloat = parseFloat(mrrPersisted);
                    var mrrFloat = parseFloat(mrr);
                    var mrrFloorFloat =  parseFloat(mrrFloor);
                    var mrrListFloat = parseFloat(mrrList);
                    var mrrTotalDiscountAmt = mrrListFloat - mrrFloorFloat;
                    var mrrDiscAmountAvailable = parseFloat(masterObj.discAuthortityPercent/100)*mrrTotalDiscountAmt;
                    var mrrDiscountAmountRemaining = mrrDiscAmountAvailable - (mrrListFloat - mrrFloat);
                    var mrrOfferDiscAmt = mrrTotalDiscountAmt - (mrrListFloat - mrrFloat);
                    
                    // NRI fields ...
                    var nrrPersistedFloat = parseFloat(nrrPersisted);
                    var nrrFloat = parseFloat(nrr);
                    var nrrFloorFloat =  parseFloat(nrrFloor);
                    var nrrListFloat = parseFloat(nrrList);
                    var nrrTotalDiscountAmt = nrrListFloat - nrrFloorFloat;
                    var nrrDiscAmountAvailable = parseFloat(masterObj.discAuthortityPercent/100)*nrrTotalDiscountAmt;
                    var nrrDiscountAmountRemaining = nrrDiscAmountAvailable - (nrrListFloat - nrrFloat);
                    var nrrOfferDiscAmt = nrrTotalDiscountAmt - (nrrListFloat - nrrFloat);
                    
                    var mldaLvl = null;
                    
                    // for MRR ...
                    if(isQuote == true && (mrrFloat < mrrPersistedFloat || !approved)){
                        //if quote item is downpriced at all set back to offer management
                        return masterObj.mldaLvl3;
                    }// for NRR ...
                    else if(isQuote == true && (nrrFloat < nrrPersistedFloat || !approved)){
                        //if quote item is downpriced at all set back to offer management
                        return masterObj.mldaLvl3;
                    }
                    
                    if(isQuote == false) {
                        if((mrrDiscountAmountRemaining < 0 && mrrOfferDiscAmt < 0 && (mrrFloat < mrrPersistedFloat || !approved || currentStatus == 'Approved')) || 
                           (nrrDiscountAmountRemaining < 0 && nrrOfferDiscAmt < 0 && (nrrFloat < nrrPersistedFloat || !approved || currentStatus == 'Approved')) ){
                            mldaLvl = masterObj.mldaLvl3;
                        }
                        else 
                        if((mrrDiscountAmountRemaining < 0 && mrrOfferDiscAmt >= 0 && (mrrFloat < mrrPersistedFloat || !approved ||  currentStatus == 'Approved')) || 
                           (nrrDiscountAmountRemaining < 0 && nrrOfferDiscAmt >= 0 && (nrrFloat < nrrPersistedFloat || !approved ||  currentStatus == 'Approved'))){
                            mldaLvl = masterObj.mldaLvl2;
                        }
                        if(mldaLvl == null){
                            if(currentStatus == masterObj.mldaLvl3.description && approved)
                                mldaLvl = masterObj.mldaLvl3Approved;
                            else if(currentStatus == masterObj.mldaLvl2.description && approved)
                                mldaLvl = masterObj.mldaLvl2Approved;
                            else
                                mldaLvl = masterObj.mldaLvl1;
                        }
                    }

                    if(priceName.indexOf('Competitive Building') > -1 && mldaLvl != masterObj.mldaLvl1 && mldaLvl != masterObj.mldaLvl3Approved && mldaLvl != masterObj.mldaLvl2Approved){
                        var mrrDiscountAmountRemaining = (parseFloat(mrrFloorFloat * {!SMDiscountPercent})) - (mrrFloorFloat - mrrFloat);
                        var nrrDiscountAmountRemaining = (parseFloat(nrrFloorFloat * {!SMDiscountPercent})) - (nrrFloorFloat - nrrFloat);
                        
                        if(mrrDiscountAmountRemaining > 0 && nrrDiscountAmountRemaining > 0)
                            mldaLvl = masterObj.mldaLvl2;
                        else{
                            mldaLvl = masterObj.mldaLvl3;
                            window.alert('The discount on the Competitive Pricing you have entered requires Offer Management Approval. If you change your discount amount to be within 35% of the floor price, the approval request will trigger for Sales Management instead of Offer Management.');
                        }
                        
                    }

                    return mldaLvl;
                    
                },
                ZLocSearchButtonClick: function(){
                    masterObj.openModalWaitDialog('Searching.');
                    var childNumb = masterObj.$(this).attr('data-childnumb');
                    var addr = masterObj.$('#address_'+childNumb).val();
                    var rSuite = masterObj.$('#roomSuite_'+childNumb).val();
                    var lDD = masterObj.$('#dropdownMenuCurrentLocation_'+childNumb).siblings().children('ul.dropdown-menu');
                    var mode = masterObj.getCurrentCrumb().ZLocMode;
                    var setBtn = masterObj.$('#btnSaveZLoc_'+childNumb);
                    masterObj.gCode = geoCoder.create(addr, rSuite, lDD, mode, setBtn);
                    masterObj.gCode.createAddressToGeoCode.call(masterObj.gCode);
                },
                ZLocSetButtonClick: function(){
                    masterObj.gCode.invokeSecondaryLocationParsed();
                },
                //button removed, functionality kept just in case.
                duplicateButtonClick: function(){
                    var name = masterObj.$(this).attr('data-productname');
                    var prodId = masterObj.$(this).attr('data-spcproductId');
                    var compId = masterObj.$(this).attr('data-spccomponentId');
                    var UUID = masterObj.$(this).attr('data-uuid');
                    var parentProdName = masterObj.$(this).attr('data-parentprodname');
                    var groupName = masterObj.$(this).attr('data-groupName');
                    var group = masterObj.getProductGroupFromName(parentProdName,groupName);
                    var configedComps = null;
                    var confixIdx = 0;
                    for(var confixIdx = 0; confixIdx < group.Configured.length; ++confixIdx){
                        if(group.Configured[confixIdx].name == name){
                            configedComps = group.Configured[confixIdx].prods;
                            break;
                        }
                    }
                    for(var i = 0; i < configedComps.length; ++i){
                        var c = configedComps[i];
                        if(c.UUID == UUID){
                            var newProd = jQuery.extend(true,{},c)
                            newProd.UUID = masterObj.generateUUID();
                            newProd.OLI.Id = null;
                            for(var j = 0; j < newProd.Children.length; ++j){
                                newProd.Children[j].UUID = masterObj.generateUUID();
                                newProd.Children[j].OLI.Id = null;
                            }
                            group.Configured[confixIdx].prods.push(newProd);
                            break;
                        }
                    }

                    masterObj.update();
                },
                toggleMenuClick: function(){
                    $('#prodCompBtnContainer').toggle();
                    if($('#prodCompBtnContainer').is(':visible'))
                        $(this).html('<span class="glyphicon glyphicon-menu-hamburger"></span>&nbsp;Hide Menu</a>');
                    else
                        $(this).html('<span class="glyphicon glyphicon-menu-hamburger"></span>&nbsp;Show Menu</a>');
                    if($('#prodCompBtnContainer').is(':visible')){
                        $('#configSummaryContainer').addClass('col-md-70 col-xl-80');
                        $('#buttonContainer').addClass('col-xs-100 col-md-30 col-xl-20');
                    }
                    else{
                        $('#configSummaryContainer').removeClass('col-md-70 col-xl-80');
                        $('#buttonContainer').removeClass('col-xs-100 col-md-30 col-xl-20');
                    }
                },
                toggleListClick:function(){
                    $('.lineTotal').toggle();
                    $('.lineList').toggle();
                    $('.nrrTotal').toggle();
                    $('.nrrList').toggle();
                    if($('.lineTotal').is(':visible')) $('#btnToggleListText').text('Show List Prices');
                    else $('#btnToggleListText').text('Show Line Totals');
                },
                removeGroupButtonClick: function(e){
                    masterObj.hideValidationMessages();
                    var parentProdName = this.$(e.target).attr('data-parentprodname');
                    var groupName = this.$(e.target).attr('data-groupname');
                    if((window.confirm('Remove the group "'+groupName+'" from the solution?'))){
                        this.removeProductGroupByName(parentProdName,groupName);
                        this.saved = false;
                        this.update();
                    }
                },
                removeAllProdsButtonClick: function(e){
                    masterObj.hideValidationMessages();
                    var parentProdName = this.$(e.target).attr('data-parentprodname');
                    var groupName = this.$(e.target).attr('data-groupname');
                    var prodName = this.$(e.target).attr('data-prodname');
                    if((window.confirm('Remove "'+prodName+'" from the solution group "'+groupName+'"?'))){
                        var group = this.getProductGroupFromName(parentProdName, groupName);
                        for(var i = 0; i < group.Configured.length; ++i){
                            if(group.Configured[i].name == prodName){
                                group.Configured.splice(i,1);
                                this.saved = false;
                                break;
                            }
                        }
                        this.update();
                    }
                },
                componentNameClick: function(e){
                    $(this).children().last().children().first().click();
                },
                autoSizeInputs: function(e){
                    var inputsToSize = $('.autosize');
                    var maxWidth = 0;
                    for(var i = 0; i < inputsToSize.length; ++i){
                        var cEle = inputsToSize[i];
                        var sizer = $('<span id="sizer">'+$(cEle).val().replace(/ /g,'&nbsp;')+'</span>').css({'display':'none', 'font-family':$(cEle).css('font-family'), 'font-size':$(cEle).css('font-size')}).appendTo('body');
                        maxWidth = Math.max(maxWidth,sizer.width());                        
                        sizer.remove();
                    }
                    maxWidth += 50; //could probably do some extra calculations to get this value, but meh.
                    inputsToSize.css({'min-width':maxWidth+'px','width':'100%'});
                },
                autoSizeAddons: function(e){
                    var addonsToSize = $('.addonautosize');
                    var maxWidth = 0;
                    for(var i = 0; i < addonsToSize.length; ++i){
                        var cEle = addonsToSize[i];
                        var sizer = $('<span id="sizer">'+$(cEle).html()+'</span>').css({'display':'none', 'font-family':$(cEle).css('font-family'), 'font-size':$(cEle).css('font-size')}).appendTo('body');
                        maxWidth = Math.max(maxWidth,sizer.width());
                        sizer.remove();
                    }
                    addonsToSize.width(maxWidth);
                }
            };

        </script>
    </body>
</apex:page>