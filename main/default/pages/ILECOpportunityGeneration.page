<apex:page controller="ILECOpportunityGeneration">
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" />
	<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.13/jquery-ui.min.js" />
    <apex:stylesheet value="{!URLFOR($Resource.jquery_ui_1_10_3_custom, 'css/redmond/jquery-ui-1.10.3.custom.min.css')}"/>
    
	<apex:outputPanel id="out">
		<script>
			var opportunityClosedSuccessfully = {!opportunityClosedSuccessfully};
		</script>
		<apex:pageMessages escape="false"/>
	</apex:outputPanel>
	<apex:form id="frm_Main" >
		<apex:pageBlock title="Opportunity Generation" >
			<apex:pageBlockButtons >
				<apex:commandButton onclick="generateServiceLoc_Click(); return false;" value="Add Product" />
				<apex:commandButton onclick="integrate_Click(); return false;" value="Integrate" disabled="{!ISNULL(opp.Id)}" />
			</apex:pageBlockButtons>
			<apex:pageBlockSection title="Product Selection" columns="1">
				<apex:inputField value="{!oppProd.Sales_Product__c}" />
				<apex:inputField value="{!oppProd.MRC__c}"/>
				<apex:inputField value="{!oppProd.NRC__c}"/>
			</apex:pageBlockSection>
			<apex:pageBlockSection title="Responsible Party Selection" columns="1"  rendered="{!NOT(hasResponsibleParty)}">
				<apex:selectList id="sl_oppContact" value="{!ResponsiblePartyId}" multiselect="false" size="1" label="Responsible Party">
					<apex:selectOptions value="{!contactList}"/>
				</apex:selectList>
			</apex:pageBlockSection>
			
			<!-- TreeView -->
			<apex:pageBlockSection id="pbs_hierarchy" Title="Hierarchy" columns="1">
				<div id="opportunityHierarchy"/> 
				<c:TreeView />
				<script type="text/javascript">
					jQuery(document).ready(function(){
						var t = {!AllJSONTrees};
						var a = {!ActionMappings};
						var i = {!IconMappings};
						registerMaps(a, i);
						loadTree('opportunityHierarchy', false, t['opportunityHierarchy']);
					});
				</script>
			</apex:pageBlockSection>
		</apex:pageBlock>
		<apex:actionFunction name="generateServiceLoc" action="{!AddProduct}" rerender="out, frm_Main, pbs_hierarchy" oncomplete="doRefresh();">
			<apex:param name="formattedAddress" value=""/>
		 	<apex:param name="streetNumber" value="" />
		 	<apex:param name="street" value="" />
		 	<apex:param name="suite" value="" />
		 	<apex:param name="city" value="" />
		 	<apex:param name="state" value="" />
		 	<apex:param name="postalCode" value="" />
			<apex:param name="latitude" value=""/>
			<apex:param name="longitude" value=""/>
		</apex:actionFunction>
		<apex:actionFunction name="addProduct" action="{!AddProduct}" rerender="out, frm_Main, pbs_hierarchy" oncomplete="doRefresh();"/>
		<apex:actionFunction name="finalize" action="{!Finalize}" rerender="out, frm_Main, pbs_hierarchy" oncomplete="redirectToOppIntegrationPage();" />
		<apex:actionFunction name="validateAddressesAndRedirectToOppIntegrationPage" action="{!ValidateAddressesAndRedirectToOppIntegrationPage}" rerender="out, frm_Main, pbs_hierarchy"/>
		<c:ModalWaitDialog />
	</apex:form>
	<script type="text/javascript">
		function generateServiceLoc_Click() {
			debugger;
			if(true == {!NOT(slocCreated)}){
				var address = '{!JSENCODE(addressToGeocode)}';
				if(address != ''){
					geocodeAddress(address, GenerateServiceLoc);
				}
				return false;
			}
			else{
				addProduct();
				return false;
			}
		}		
		
		function GenerateServiceLoc(result){
			debugger;
			if(!hasMinimumLocationRequirements(result)){
  				result.success = false;
  				result.error = 'Parsed address is not complete.';
			}
			
			openModalWaitDialog('Applying changes.');
			if(result.success){
				generateServiceLoc(result.formattedAddress
											,result.streetNum
											,result.route
											,result.subPremise
											,result.city
											,result.adminArea1
											,result.postalCode
											,result.latitude
											,result.longitude);	
			}
			else{
				closeModalWaitDialog();
				alert("Failed to create service location to represent current account address '{!JSENCODE(addressToGeocode)}'");
			}
		}
		
		function integrate_Click(){
			openModalWaitDialog('Finalizing configuration...');
			finalize();
		}
		
		function redirectToOppIntegrationPage(){
			if(opportunityClosedSuccessfully){
				validateAddressesAndRedirectToOppIntegrationPage();
			}
			else
				closeModalWaitDialog();
		}
	</script>
	
	<c:AddressParser addressGeocodedFunction="GenerateServiceLoc"/>
</apex:page>