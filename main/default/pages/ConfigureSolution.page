<apex:page controller="ConfigureSolutionController" tabStyle="OLI__c">
	<apex:stylesheet value="{!URLFOR($Resource.jquery_ui_1_8_16_custom, 'css/smoothness/jquery-ui-1.8.16.custom.css')}" />
	<apex:includeScript value="{!URLFOR($Resource.jquery_ui_1_8_16_custom, 'js/jquery-1.6.2.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jquery_ui_1_8_16_custom, 'js/jquery-ui-1.8.16.custom.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jQuery_Watermark)}" />
	
	<apex:includeScript value="{!URLFOR($Resource.jQueryUI_Multiselect, 'Multiselect.js')}" />
	
	<apex:stylesheet value="{!URLFOR($Resource.jQueryUI_Multiselect, 'Multiselect.css')}" />
	<div id="modalHolder" style="display: none">
		<p id="modalHtml" style="text-align: center">Loading...</p>
		<p id="modalImage" style="text-align: center"><apex:image id="spinnerImage" value="{!$Resource.Spinner}" width="36" height="36" /></p>
	</div>
	
	<apex:form >
	<apex:pageBlock >
		<apex:outputPanel id="out">
			<apex:pageMessages escape="false" />
		</apex:outputPanel>
		<apex:outputPanel rendered="{!renderPage}">
			<apex:pageBlockSection columns="1" collapsible="true" title="Information" id="pbsInfo">
				<apex:pageBlockSection columns="3">
					<apex:outputText label="Account">
						<c:HoverLink sObjectId="{!account.Id}" text="{!account.Name}" rendered="{!NOT(ISNULL(account))}"/>
					</apex:outputText>
					<apex:outputText label="Opportunity">
						<c:HoverLink sObjectId="{!opportunity.Id}" text="{!opportunity.Name}" rendered="{!NOT(ISNULL(opportunity))}"/>
					</apex:outputText>
					<apex:outputText ></apex:outputText>
					<apex:outputText label="Term" value="{!configOLC.Term__c}" />
					<apex:outputText label="Order No." value="{!order.Name}"/>
					<apex:outputText rendered="{!ISNULL(order) && NOT(ISNULL(opportunityLocationConfiguration))}"></apex:outputText>
					
				</apex:pageBlockSection>
			</apex:pageBlockSection>
			<apex:pageBlockSection columns="1" collapsible="true" title="Access Technology" id="pbsAccessTech">
				<apex:pageBlockTable value="{!locationBAA}" var="bar" id="baaTable" >
					<apex:column value="{!bar.Access_Technology_Name__c}" />
					<apex:column value="{!bar.Maximum_Bandwidth__c}" />
					<apex:column value="{!bar.Minimum_Required_Revenue__c}" />
					<apex:column value="{!bar.Status__c}" />
				</apex:pageBlockTable>
			</apex:pageBlockSection>
		</apex:outputPanel>
	</apex:pageBlock>
	<apex:pageBlock rendered="{!renderPage}">
		<apex:outputPanel id="validationMessages">
			<apex:repeat value="{!validationErrors}" var="err">
				<apex:pageMessage summary="{!err}" severity="error" strength="1" escape="false"/>
			</apex:repeat>
		</apex:outputPanel>
		<apex:outputPanel id="main" >
			<apex:variable var="isSummaryView" value="{!selectedProduct == 'SOLUTION'}"/>
			<div style="overflow:hidden;">
				<apex:outputPanel layout="block">
					<div style="width:100%;">
						
						<apex:pageBlockSection columns="1" id="filters"> 
							<apex:outputPanel >
								<apex:outputPanel style="float:left">
									<div style="font-weight:bold; font-size:.9em;padding-left:1em;">
										<span>View</span>
									</div>
									<apex:dynamicComponent componentValue="{!viewList}" />
								</apex:outputPanel>
								<apex:outputPanel style="float:right;" rendered="{!NOT(isSummaryView || ISBLANK(TRIM(selectedProduct)))}">
								<div style="float:left;">
									<div style="padding-left:1em; font-weight:bold; font-size:.9em;">
										<span>Access Technologies</span>
									</div>
									<apex:selectList id="selAccessTechs" value="{!selectedAccessTech}" styleClass="canFilter">
										<apex:selectOptions value="{!accessTechs}"/>
									</apex:selectList>
								</div>
								<div style="float:left; margin-left:1em;">
									<div style="padding-left:1em; font-weight:bold; font-size:.9em;">
										<span>Bandwidths(Mbps)</span>
									</div>
									<apex:selectList id="selBandwidths" multiselect="true" size="5" value="{!selectedBandwidths}" styleClass="canFilter">
										<apex:selectOptions value="{!availableBandwidths}"/>
									</apex:selectList>
								</div>
								<div style="float:left; margin-left:1em;{!IF(multiSolutionMode, '', ' display: none;') }">
									<div style="padding-left:1em; font-weight:bold; font-size:.9em;">
										<span>Term</span>
									</div>
									<apex:selectList label="Max Term" multiselect="false" size="1" value="{!configOLC.Term__c}" styleClass="canFilter" rendered="{!multiSolutionMode}">
										<apex:selectOptions value="{!availableTerms}"/>
									</apex:selectList>
								</div>
								<div style="float:left; margin-left:1em;">
									<div style="font-size:.9em;">&nbsp;</div>
									<apex:commandButton value="Filter" id="filterTop" onclick="refreshPricing(); return false;" disabled="{!isSummaryView}"/>
								</div>
								<div style="clear:both;"></div>
								<apex:outputPanel rendered="{!isFiltered}" style="color:red; font-weight:bold;">Note: Results are filtered.  Change the filter to see more line items.</apex:outputPanel>
								</apex:outputPanel>
								<div style="clear:both;"></div>
							</apex:outputPanel>
							<script type="text/javascript">
								/* Rerender/run with 'filters' */
								
								jQuery("select[id$='selectView']").multiselect({
									selectedList: 1,
									multiple: false,
									header: false,
									open: function(){
										jQuery(jQuery('label[for*="selectView"]').parent().parent()).css('height', 300)
									}
								});//.next().css('width', 500);
								//jQuery(jQuery('label[for*="selectView"]').parent().parent().parent()).css('width', 492);
								jQuery("select[id$='selBandwidths']").multiselect(
								{
									noneSelectedText: "All Selected",
									selectedList:10
								}).multiselect({!IF(isSummaryView || ISBLANK(TRIM(selectedProduct)), '"disable"', '"enable"')});
								
								jQuery("select[id$='selAccessTechs']").multiselect(
								{
									multiple:false,
									selectedList:1,
									noneSelectedText: "All Selected",
									header: false
								}).multiselect({!IF(isSummaryView, '"disable"', '"enable"')});
								
								//big hack, on rerender these elements get added again and need to be deleted so that the handlers find the correct element.
								var Atele = jQuery('input[id$="selAccessTechs-option-1"]');
								if(Atele.length > 1) jQuery(Atele[0]).closest('ul').parent().remove();
								
								var Slele = jQuery('input[id$="selectView-option-1"]');
								if(Slele.length > 1) jQuery(Slele[0]).closest('ul').parent().remove();
								
								var Slele = jQuery('input[id$="selBandwidths-option-1"]');
								if(Slele.length > 1) jQuery(Slele[0]).closest('ul').parent().remove();
								//end big hack!
								
							</script>
						</apex:pageBlockSection>
						
						<div style="text-align:left;">
							<div id="cssmenuPriceMain" class="cssmenuPrice" style="width:100%;float:left;margin-top:5px; ">
								<apex:outputPanel layout="block" style="width:300px; margin-left:auto; margin-right:auto;padding-top:5px;" >
									<apex:outputText rendered="{!selectedProduct == ''}">No products selected</apex:outputText>
								</apex:outputPanel>		
								
								<apex:outputPanel style="float:left; margin-bottom:.5em;">
									<apex:outputPanel rendered="{!NOT(isSummaryView || ISBLANK(TRIM(selectedProduct)))}"><input id="activeSearch" type="textbox" placeholder="Search Selected Product..."></input></apex:outputPanel>
								</apex:outputPanel>
								<div style="float:right">
									<div style="float:left">
	                					<span class="SubTotal">Total MRC:</span>&nbsp;<span id="subtotal" class="SubTotalAmt">$0.00</span> 
	            					</div>
							
									<div style="float:left;padding-left:5px;padding-right:5px">
	                					<span class="SubTotal">Total NRC:</span>&nbsp;<span id="subtotalNRC" class="SubTotalAmt">$0.00</span> 
	            					</div>
									<br />	
							<!-- 		<apex:outputPanel rendered="{!isSummaryView}" id="discountContainer">
										<div id="discountPanel">
											<div style="float:left">
			                					<span class="SubTotal">Discount Remaining</span>&nbsp;<span id="txtDiscountAmt" class="SubTotalAmt">{!discountAmountRemaining}</span> 
			            					</div>
											<div style="float:left;padding-left:5px;padding-right:5px">
	                							<span class="SubTotal"><apex:image style="height:14px; width:14px;" url="{!IF(opportunity.Deal_Approved__c,URLFOR($Resource.GreenCheck),'')}" rendered="{!opportunity.Deal_Approved__c}"/></span>
												&nbsp;<span id="txtApprovalStatus" class="SubTotal">{!IF(opportunity.Deal_Approved__c, 'Approved',opportunity.Deal_Approval_Status__c)}</span> 
	            							</div>
	                				
											&nbsp;
										</div>
										<div id="contentRecalculating" style="display:none;">
								    		<div style="text-align: center;">
								      			<img src="/img/loading.gif" alt="Loading graphic" />
								    		</div>
										</div>
	            					</apex:outputPanel> -->
								</div>
								<div style="width:450px; margin-left:auto; margin-right:auto;padding-bottom:15px;" >
									<apex:commandButton value="Validate" id="validateTop" onclick="validate(); return false;" rendered="{!doValidation}" style="margin-right:10px;"/>
									<apex:commandButton value="Grant Approval" id="btnApproval" onclick="evalApprovalClick();grantApproval(); return false;" style="margin-right:10px;"/>
									<apex:commandButton value="Current Solution" id="currentTop" onclick="goCurrent(); return false;" style="margin-right:10px;" />
									<apex:commandButton value="Save" id="saveTop" onclick="save(); return false;" style="margin-right:10px;"/>
									<apex:commandButton value="Save and Exit" id="saveExitTop" onclick="saveAndExit(); return false;" style="margin-right:10px;" />
									<apex:commandButton value="Cancel" onclick="history.back();" />
									
								</div>
								<div style="clear:both;"></div>
								<apex:repeat value="{!pricingSortOrderKeys}" var="pg">
								<div id="groupHeader_{!pg}" class="groupHeader">
									<div style="float:left;" class="closedList">&nbsp;</div><div style="float:left; margin-left:10px;">{!pg}</div>
									<div style="float:left; margin-left:5px; line-height:0px; margin-top:15px;">
										<span class="asterix" title="Required Items Have Not Been Selected">Required Component</span>
									</div>
									<div style="float:left; margin-left:5px; line-height:0px; margin-top:15px;">
										<span class="complete" title="All Requirements Have Been Met For This Group">Requirements Met</span>
									</div>
									<div style="float:left; margin-left:5px; line-height:0px; margin-top:15px;">
										<span class="optional" title="There Are Recommended Up Sell Items">Optional Component</span>
									</div>
									<div style="clear:both;"></div>
								</div>
								<div id="group_{!pg}" class="group">
									<apex:repeat value="{!pricingSortOrder[pg]}" var="priceSortKey">
									<apex:outputText escape="false" rendered="{!NOT(ISBLANK(TRIM(priceSortKey)) || priceSortKey == 'ALL')}">
									<div layout="block" class="salesSelectionRuleContainer">
										<div style="float:left;">
										<span class="salesSelectionRuleTitle">{!priceSortKey}</span>
										</div>
										<div style="float:left; margin-left:5px; line-height:0px; margin-top:10px;">
											<span class="asterix" title="Required Items Have Not Been Selected">Required Component</span>
										</div>
										<div style="float:left; margin-left:5px; line-height:0px; margin-top:10px;">
											<span class="complete" title="All Requirements Have Been Met For This Group">Requirements Met</span>
										</div>
										<div style="float:left; margin-left:5px; line-height:0px; margin-top:10px;">
											<span class="optional" title="There Are Recommended Up Sell Items">Optional Component</span>
										</div>
										<div style="clear:both;"></div>
									</div>
									</apex:outputText>
									
									<apex:DataTable rowClasses="pricingRow" headerClass="pricingHeader" value="{!pricingSortOrder[pg][priceSortKey]}" var="gPrice" width="100%" rules="rows" styleclass="priceList">
										<apex:column style="vertical-align:middle; width:30px; padding-left:5px;">
											<apex:facet name="header">Qty</apex:facet>
											<apex:inputField id="txtQty" styleClass="inputQty" value="{!gPrice.oli.QTY__c}" html-data-min="{!gPrice.oli.SPC_MinQty__c}" html-data-max="{!gPrice.oli.SPC_MaxQty__c}"/>
										</apex:column>
										<apex:column style="padding-left:10px; vertical-align:middle; whitespace:nowrap; overflow:hidden;" title="{!gPrice.oli.PP_Product_Pricing_Name__c}">
											<apex:facet name="header"><!--Pricing Name--></apex:facet>
											<div class="priceName">
												<apex:image rendered="{!gPrice.isExpired}" value="/img/msg_icons/error16.png" title="This price row is no longer valid"></apex:image>
												{!IF(gPrice.isAutoInclude || gPrice.isFeature, '>    ', '')}{!gPrice.oli.PP_Product_Pricing_Name__c}
												&nbsp;
												<apex:outputPanel rendered="{!NOT(isSummaryView) && gPrice.canDuplicate && NOT(NOT(ISNULL(gPrice.parent)) || gPrice.isPickOne)}">
													<apex:image onclick="addRemovePriceRow(jQuery(this).closest('tr'), true); return false;" url="/img/feeds/follow12.png" style="cursor:pointer" title="Duplicate line item"/>
													<apex:image onclick="addRemovePriceRow(jQuery(this).closest('tr'), false); return false;" rendered="{!gPrice.canRemove}" url="/img/func_icons/remove12_on.gif" style="cursor:pointer" title="Remove line item"/>
												</apex:outputPanel>
											</div>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px;" rendered="{!displaySecondaryLocation}">
											<apex:facet name="header">Secondary Location</apex:facet>
											<apex:outputPanel >
												<span id="txtSecLoc">
													<apex:outputLink id="secondaryLocName" onclick="secLocClicked('{!zLocModes[gPrice.oli.SPC_Sales_Product__c]}', this); return false;" rendered="{!gPrice.requireZLocation}" style="text-decoration:underline">{!IF(TRIM(gPrice.secondaryLocID) == '', 'None', secLocNames[gPrice.secondaryLocID])}</apex:outputLink>
													<apex:outputText rendered="{!NOT(gPrice.requireZLocation)}">-</apex:outputText>
													<apex:inputText id="secondaryLocID" value="{!gPrice.secondaryLocID}" style="display:none;"/>
												</span>
											</apex:outputPanel>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px;">
											<apex:facet name="header">MRC</apex:facet>
											<apex:inputField id="txtMRC" styleClass="inputAmt {!IF(gPrice.oli.SPC_MRC_Is_Quote__c, 'quoteWatermark', '')}" value="{!gPrice.oli.MRC__c}"/>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px; padding-right:5px; text-align:right;">
											<apex:facet name="header">MRC-List</apex:facet>
											<span id="mrcList">{!gPrice.oli.MRCList__c}</span>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px; padding-right:5px; text-align:right;">
											<apex:facet name="header">Total</apex:facet>
											<span id="txtMRCTotal">0.00</span>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px;">
											<apex:facet name="header">NRC</apex:facet>
											<apex:inputField id="txtNRC" styleClass="inputAmt {!IF(gPrice.oli.SPC_MRC_Is_Quote__c, 'quoteWatermark', '')}" value="{!gPrice.oli.NRC__c}"/>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px; padding-right:5px; text-align:right;">
											<apex:facet name="header">NRC-List</apex:facet>
											<span>{!gPrice.oli.NRCList__c}</span>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px; padding-right:5px; text-align:right;">
											<apex:facet name="header">Total</apex:facet>
											<span id="txtNRCTotal">0.00</span>
										</apex:column>
										<apex:column style="vertical-align:middle; width:70px; padding-right:5px; text-align:center;">
											<apex:facet name="header">Approved</apex:facet>
											<apex:inputField value="{!gPrice.oli.Approved__c}" id="cbApproved"/>
										</apex:column>
										<apex:column style="display:none;">
											<apex:inputCheckbox id="updatedFlag" value="{!gPrice.updated}"/>
											<apex:inputText id="approvalStatus" value="{!gPrice.oli.Approval_Status__c}"/>
											<span id="isChild">{!gPrice.isAutoInclude || gPrice.isFeature}</span>
											<span id="pickOneValue">{!IF(gPrice.isPickOne, gPrice.salesSelectionRule, '')}</span>
											<span id="priceID">{!gPrice.oli.Price_Id__c}</span>
											<span id="isNonDiscountable">{!gPrice.isNonDiscountable}</span>
											<span id="mrcFloor">{!gPrice.oli.MRC_Floor__c}</span>
											<span id="mrcIsQuote">{!gPrice.oli.SPC_MRC_Is_Quote__c}</span>
											<span class="compId" id="comp_{!gPrice.oli.SPC_Sales_Product_Component_Id__c}"></span>
											<span id="ppPackageFeature">{!gPrice.oli.PP_Package_Feature__c}</span>
										</apex:column>
									</apex:DataTable>
									</apex:repeat>
								</div>
								</apex:repeat>
							</div>
						</div>
					</div>
				</apex:outputPanel>
			</div>
			<script type="text/javascript">
				/* Rerender/run with 'main' */
				
				var $j = jQuery.noConflict(); 
				$j('#activeSearch').keyup(function(){
					var valThis = $j(this).val().toLowerCase();
					
					//Show all groups and pricing rows by default
					$j('.priceList').children().children().show();
					$j('.priceList').parent().show();
					$j('.priceList').parent().parent().show();
					$j('.group').show();
					$j('.groupHeader').show();
					
					//Filter out by active search
					if(valThis != ''){
						$j('.group').each(function(){
							var hide = true;
							
							$j(this).find('.priceName').each(function(){
								var text = $j(this).text().toLowerCase();
								if(!(text.indexOf(valThis) >= 0)){
									$j(this).parent().parent().hide(); //Hide TR
								}
								else
									hide = false;
							});
				
							if(hide){
								$j(this).hide(); //Hide group
								$j(this).prev().hide(); //Hide group header
							}
						});
					}
				}).keydown(function(event){
					if(event.which == 13){
						event.preventDefault();
					}
				});
				
				$j(document).ready(function($){
					jQuery("input[id$=btnApproval]").hide();
				
					if(!linksAppended){
						var buildingName = '{!JSENCODE(opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Name)}';
						var buildingID = '{!opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__c}';
						var buildingNetClass = '{!IF(ISNULL(opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Net_Classification__c), "", opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Net_Classification__c)}';
						var buildingStatus = '{!IF(ISNULL(opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Status__c), "", opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Location__r.Building__r.Status__c)}';
						
						$j('div[id$="pbsAccessTech"]').children().first().append('<h3>&nbsp;&nbsp;&nbsp; - &nbsp;&nbsp;&nbsp;<a style="color:white" href="/' + buildingID + '" target="_blank" >' + buildingName + '</a>'
																					+ (buildingStatus != '' ? ('&nbsp;&nbsp;&nbsp;Status: ' + buildingStatus) : '')
																					+ (buildingNetClass != '' ? ('&nbsp;&nbsp;&nbsp;Net-Class: ' + buildingNetClass) : '') + '</h3>');
						$j('div[id$="pbsInfo"]').children().first().append('<h3>&nbsp;&nbsp;&nbsp; Service Location: {!JSENCODE(opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Name)} &nbsp;&nbsp;&nbsp; Solution Name:  {!JSENCODE(configOLC.Name)} &nbsp;&nbsp;&nbsp; ICC Subscriber ID: {!JSENCODE(ICCSubscriberID)} &nbsp;&nbsp;&nbsp; Billable: {!IF(opportunityLocationConfiguration.Opportunity_Location__r.Service_Location__r.Billable__c, 'Yes', 'No')}</h3>');
						linksAppended = true;
					}
						
					$j(".currencyLabel").each(function() {
						$j(this).text(getDecimal($j(this).text()));
					});
					
					//Disable quantity input for children
					$j("input[id$=txtQty]").each(function() {
						var row = $j(this).closest("tr.pricingRow");
						var isChild = row.find('span[id$=isChild]').text() == 'true';
						var isPackageFeature = row.find('span[id$=ppPackageFeature]').text() == 'true';
						if(isChild){
							$j(this).attr('disabled', 'true');
							if(isPackageFeature)
								row.hide();
						}
					});
					
					$j("input[id$=cbApproved]").each(function() {
						$j(this).attr('disabled', 'true');
					});
						
					//Keep MRC/NRC format
					$j("input[id$=txtMRC]").change(function() {
						$j(this).val(getDecimal($j(this).val()));
						var newMRC = $j(this).val();
						var row = $j(this).closest("tr.pricingRow");
						var isNonDiscountable = row.find('span[id$=isNonDiscountable]').text() == 'true';
						var mrcFloor = row.find('span[id$=mrcFloor]').text().replace(/,/g,'');
						
						if(isNonDiscountable && (parseFloat(newMRC.replace(/,/g,'')) < parseFloat(mrcFloor))){
							alert('You can\'t discount this item further');
							//$j(this).text(mrcFloor);
							$j(this).val(mrcFloor);
						}
						//Evaluate discount
						//Removing DLN
						//updateDiscountAmt();
					});
					
					$j("input[id$=txtQty]").change(function() {
						var min = parseFloat($j(this).attr('data-min'));
						var max = parseFloat($j(this).attr('data-max'));
						var val = parseFloat($j(this).val());
						if(min != undefined && min != null && min != '' && val < min){
							alert('Minimum quantity for this is: ' + min + '.\nValue set to minimum');
							$j(this).val(min);
						}
						if(max != undefined && max != null && max != '' && val > max){
							alert('Maximum quantity for this is: ' + max + '.\nValue set to maximum');
							$j(this).val(max);
						}
							
						handleQtyChange($j(this).closest("tr.pricingRow"), {!multiSolutionMode});
					});
					
					//Update the total
					$j("input[id$=txtQty], input[id$=txtMRC], input[id$=txtNRC]").change(function() {
						updateRowTotal($j(this).closest("tr.pricingRow"));
						updateTotals();
					}).keydown(function(event){
						if(event.which == 13){
							event.preventDefault();
							var idType = $j(this).attr('id').indexOf('txtQty') > -1? 'txtQty' : $j(this).attr('id').indexOf('txtMRC') > -1? 'txtMRC' : 'txtNRC';
							var sourceRow = $j(this).closest('tr.pricingRow');
							var nextInput = sourceRow.next().find('input[id$="'+idType+'"]');
							while(nextInput.length == 1 && nextInput.is(':disabled'))
								var nextInput = nextInput.closest('tr.pricingRow').next().find('input[id$="'+idType+'"]');
							if(nextInput.length <= 0)
								nextInput = sourceRow.parent().children().first('tr.pricingRow').find('input[id$="'+idType+'"]');
							nextInput.focus();
						}
					});
					
					
					//Set the updated flag for each visible input control and disable save buttons that are displaying to force validation
					$j("input[id$=txtQty], input[id$=txtMRC], input[id$=txtNRC], input[id$=secondaryLocID]").change(function() {
						var updatedFlag = $j(this).closest("tr.pricingRow").find('input[id$=updatedFlag]');
						updatedFlag.attr('checked', true);
					});
					
					//Set the total on load
					$j("[id$=txtQty], [id$=txtMRC]").each(function() {
						updateRowTotal($j(this).closest("tr.pricingRow"));
					});
					updateTotals();

					$j('[id$=selectView]').change(function(){
						getPricing(jQuery(this).find('option:selected').val());
					});
					
					$j("[id$=txtMRC]").each(function() {
						var row = jQuery(this).closest('tr');
						
						mldaBindToRow(jQuery(this), 'txtQty', 'approvalStatus', row.find('span[id$=mrcFloor]').text(), jQuery(this).val(),row.find('span[id$=mrcIsQuote]').text(),'cbApproved', row.find('span[id$=mrcList]').text());
					});
							
					evalApprovalVisibility();
				});
							
				(function(obj){
					JSONCurrentRelationsBySalesProdExtId = obj;
				})({!JSONCurrentRelationsBySalesProdExtId});
			</script>
		</apex:outputPanel>
		<div id="SecondaryLocationDialogParent">
			<div id="SecondaryLocationDialog">
				<table width="100%">
					<tr>
						<td width="15%"><input type="radio" id="rdExisting" name="locType" checked="checked">Existing</input></td>
						<td width="85%">
							<div class="secLocSource">
								<apex:selectList id="secLocSelect" value="{!dummyOLI.Secondary_Location__c}" multiselect="false" size="1" style="width:100%">
									<apex:selectOptions value="{!secondaryLocationOptions}"/>
								</apex:selectList>
							</div>
						</td>
					</tr>
					<tr>
						<td width="15%"><input type="radio" id="rdNew" name="locType">New</input></td>
						<td width="85%">
							<div class="secLocSource">
								<table style="width:100%">
									<tr>
										<td><input type="textbox" id="txtNewLocation" style="width:100%"/></td>
										<td><apex:commandButton onclick="createAddressToGeoCode(secLocGeocoded); return false;" value="Search" id="btnCreateAddress"/></td>
									</tr>
									<tr>
										<td><input type="textbox" id="txtNewLocationRoomSuite" style="width:100%" placeholder="Room/Suite"/></td>
									</tr>
								</table>
								<br/>
								<apex:outputText id="geocodeOutput"></apex:outputText>
							</div>
						</td>
					</tr>
				</table>
				<script type="text/javascript">
					jQuery(document).ready(function($){
						asynch_bindGoogleAddressSearchBoxFromFocus(jQuery('input[id$=txtNewLocation]'), jQuery('input[id$=rdNew]'));
						ap_maxZIndex = true;
						setSecLocRadioButtons();
						
						jQuery(jQuery('input[id$=rdExisting]')).change(function(){ setSecLocRadioButtons(); });
						jQuery(jQuery('input[id$=rdNew]')).change(function(){ setSecLocRadioButtons(); });
					});
				</script>
			</div>
		</div>
		<div id="SecondaryServiceLocationDialogParent">
			<div id="SecondaryServiceLocationDialog">
				Existing
				<span>
					<apex:selectList id="secSLocSelect" value="{!dummyOLI.Secondary_Service_Location__c}" multiselect="false" size="1" style="width:100%">
						<apex:selectOptions value="{!secondaryServiceLocationOptions}"/>
					</apex:selectList>
				</span>
			</div>
		</div>
	</apex:pageBlock>
	
	<apex:actionFunction name="doAddRemovePriceRow" action="{!AddRemovePriceRow}" rerender="out" oncomplete="doRefreshPricing();">
	 	<apex:param name="priceID" value="" />
	 	<apex:param name="addMode" value="" />
	 	<apex:param name="offset" value="" />
	</apex:actionFunction>
	
	<apex:actionFunction name="doGetPricing" action="{!GetPricing}" rerender="main, out, validationMessages" oncomplete="closeDialog(); getPricingCallbackDisplayUpdate();">
	 	<apex:param name="SelectedProduct" assignTo="{!selectedProduct}" value="" />
	</apex:actionFunction>
	
	<apex:actionFunction name="runValidation" action="{!doValidate}" reRender="validationMessages" oncomplete="closeDialog();" />
	
	<!-- Removing DLN <apex:actionFunction name="doRecalcDiscount" action="{!recalcDiscount}" rerender="discountContainer" oncomplete="" status="recalculating"></apex:actionFunction>
	<apex:actionStatus id="recalculating" onstart="recalculating(true)" onstop="recalculating(false)"></apex:actionStatus> -->
	
	<apex:actionFunction name="doRefreshPricing" action="{!GetPricing}" rerender="main, out, validationMessages" oncomplete="closeDialog();getPricingCallbackDisplayUpdate();"/>
	
	<apex:actionFunction name="doSave" action="{!Save}" rerender="main, out, validationMessages" oncomplete="closeDialog();getPricingCallbackDisplayUpdate();"/>
	<apex:actionFunction name="doApproval" action="{!GrantApproval}" rerender="main, out, validationMessages" oncomplete="closeDialog();getPricingCallbackDisplayUpdate();"/>
	<apex:actionFunction name="doSaveAndExit" action="{!SaveLineItemsAndExit}" rerender="main, out, validationMessages" oncomplete="closeDialog();getPricingCallbackDisplayUpdate();"/>
	
	<apex:actionFunction name="doSaveParsedSecLoc" action="{!SaveParsedSecondaryLocation}" rerender="out, secLocSelect" oncomplete="disableRadioBlock_Existing(true); setSecondaryLoc('{!secLocParseLocation.Name}', '{!secLocParseLocation.Id}');"/>
	<apex:actionFunction name="doSecLocParsed" action="{!SecondaryLocationParsed}" rerender="out" oncomplete="closeDialog(); checksetSecondaryLocEnabled('{!secLocParseResult}', {!NOT(ISNULL(secLocParseBuilding)) && NOT(ISNULL(secLocParseLocation))});">
		<apex:param name="success" value=""/>
		<apex:param name="error" value=""/>
		
	 	<apex:param name="streetNumber" value="" />
	 	<apex:param name="street" value="" />
	 	<apex:param name="suite" value="" />
	 	<apex:param name="city" value="" />
	 	<apex:param name="state" value="" />
	 	<apex:param name="postalCode" value="" />
		<apex:param name="latitude" value=""/>
		<apex:param name="longitude" value=""/>
	</apex:actionFunction>
	<c:AddressParser addressGeocodedFunction="secLocGeocoded"/>
	<c:MLDA />
	
	</apex:form>
	<script type="text/javascript">
		var JSONCurrentRelationsBySalesProdExtId = {};
		var rerenderScrollTo = null;
		var linksAppended = false;
		var doValidation = '{!doValidation}' == 'true';
		var discAuthortityPercent = '{!discountAuthorityLevel.Allowed_Level_Percentage__c}';
		var discAuthortityApprovalLevel = '{!discountAuthorityLevel.IsApprovalLevel__c}';
		
		jQuery(document).ready(function($){
			jQuery("img[id$='pbsInfo']").click();	
			jQuery("img[id$='pbsAccessTech']").click();
			
			jQuery("#modalHolder").dialog(
				{ modal: true, 
				autoOpen: false,
				width: 200,
				title: 'Gathering Data...', 
				resizable: false,
				draggable: false,
				closeOnEscape: false,
				open: function(event, ui) { jQuery(".ui-dialog-titlebar-close").hide() } }
			);
			
			jQuery('#SecondaryLocationDialog').dialog({
				modal: true,
				title: 'Set Secondary Location',
				autoOpen: false,
				show: 'fade',
				width: 500,
				resizable: false,
				buttons: [
					{ text: 'Set', id: 'setSecondaryLoc', click: function(){ secLocSetClicked('SecondaryLocationDialog'); } },
					{ text: 'Close', click: function(){ jQuery(this).dialog('close'); } }
				],
				open: function(){bindDialogBackToParent(jQuery(this), '#SecondaryLocationDialogParent');}
			});
			
			jQuery('#SecondaryServiceLocationDialog').dialog({
				modal: true,
				title: 'Set Secondary Location',
				autoOpen: false,
				show: 'fade',
				width: 500,
				resizable: false,
				buttons: [
					{ text: 'Set', id: 'setSecondaryServiceLoc', click: function(){ secLocSetClicked('SecondaryServiceLocationDialog'); } },
					{ text: 'Close', click: function(){ jQuery(this).dialog('close'); } }
				],
				open: function(){bindDialogBackToParent(jQuery(this), '#SecondaryServiceLocationDialogParent');}
			});
			
			getPricingCallbackDisplayUpdate();
		});
		
		/*
		*	Setup/Refresh
		*/
		
		function getPricingCallbackDisplayUpdate(){
			$j('.quoteWatermark').each(function(idx, ele){
				var val = $j(ele).val();
				var row = jQuery(ele).closest('tr');
				var qty = row.find('input[id$=txtQty]').val();
		
				if(val == 0 && qty == 0) val = '';
				else if(val == '' && qty > 0) val = '0.00';
				$j(ele).watermark('Quote').val(val);
			});
			$j('.quoteWatermark').parent().parent().addClass('quotePricing');
			$j('.quotePricing').attr('title', 'Quote Pricing');
						
			jQuery('.groupHeader').click(function(){
				var container = jQuery(this).next();
				if(jQuery(container).is(':hidden')){
					jQuery(container).slideDown('normal');
					jQuery(jQuery(this).children()[0]).addClass("openedList");
					jQuery(jQuery(this).children()[0]).removeClass("closedList");
				}
				else{
					jQuery(container).slideUp('normal');
					jQuery(jQuery(this).children()[0]).removeClass("openedList");
					jQuery(jQuery(this).children()[0]).addClass("closedList");
				}
			});
		
			asterixizeRequiredStuff();
						
			jQuery('.inputQty').change(function(){
				var compId = jQuery(this).parent().parent().find('.compId').attr('id');
				compId = compId.substring(compId.lastIndexOf('_') + 1);
				if(parseInt(jQuery(this).val()) > 0)
					SelectedSalesProductIDs.addItem(compId);
				else
					SelectedSalesProductIDs.removeItem(compId);
				
				asterixizeRequiredStuff(SelectedSalesProductIDs.Items);
			});
		
		
			jQuery('[id$=txtQty]').each(function(idx, ele){
				var row = jQuery(ele).closest('row');
				//children will be handled by their parent.
				var isChild = row.find('span[id$=isChild]').text() == 'true';
				var val = jQuery(ele).val();
				val = parseInt(val != null && val != ''? val : 0);
				if(val > 0 && !isChild) jQuery(ele).change();
			});
		
			
			if(rerenderScrollTo != null){
				var scrollToElement = jQuery(document.getElementById(rerenderScrollTo));
				if(scrollToElement.length > 0){
					jQuery('html, body').animate({
				        scrollTop: scrollToElement.offset().top
				    }, 2000);
					//expandHeader = scrollToElement.closest('.group').prev('.groupHeader');
					scrollToElement.closest('.group').prev('.groupHeader').click();
				}
				rerenderScrollTo = null;
			}
			else{
				var sp = $j('[id$=selectView]').find('option:selected').val();
				if(sp != 'SOLUTION'){
					var expandHeader = jQuery('.groupHeader').first();
					expandHeader.click();
				}
			}
		}
			
		function asterixizeRequiredStuff(compIds){
			if(!doValidation) return;
			jQuery('.asterix').hide();
			jQuery('.complete').hide();
			jQuery('.optional').hide();
			for(var SPCCompId in JSONCurrentRelationsBySalesProdExtId){
				var rels = JSONCurrentRelationsBySalesProdExtId[SPCCompId];
				for(var relx in rels){
					var rel = rels[relx];
					if(rel.SPC_Component_1__c == undefined || rel.SPC_Component_1__c == null){
						//if(rel.Is_Required__c){
							var $compTable = jQuery('span[id$="'+SPCCompId+'"]').closest('table');
							var selected = false;
							jQuery('.inputQty', $compTable).each(function(idx,ele){
								if(parseInt(jQuery(ele).val()) > 0)
									selected = true;
							});
							var tableAsterix = $compTable.prev().find('.asterix');
							var tableComplete = $compTable.prev().find('.complete');
							var tableOptional = $compTable.prev().find('.optional');
							var headerAsterix = $compTable.parent().prev().find('.asterix');
							var headerComplete = $compTable.parent().prev().find('.complete');
							var headerOptional = $compTable.parent().prev().find('.optional');
							if(!selected){
								if(rel.Is_Required__c){
									jQuery(tableAsterix).show();
									jQuery(headerAsterix).show();
									jQuery(tableComplete).hide();
									jQuery(headerComplete).hide();
								}
								else{
									jQuery(tableOptional).show();
									jQuery(headerOptional).show();
								}
							}
							else{
								if(rel.Is_Required__c){
									jQuery(tableAsterix).hide();
									jQuery(headerAsterix).hide();
									jQuery(tableComplete).show();
									jQuery(headerComplete).show();
								}
								else{
									jQuery(tableOptional).hide();
									jQuery(headerOptional).hide();
								}
							}
							
						//}
					}
				}
			}
			if(compIds != undefined && compIds != null && compIds.length > 0){
				for(var compx = 0; compx < compIds.length; ++compx){
					var compId = compIds[compx];
					var rels = JSONCurrentRelationsBySalesProdExtId[compId];
					if(rels == null || rels == undefined) rels = new Array();
					for(var relx = 0; relx < rels.length; ++relx){
						var rel = rels[relx];
						if(rel.SPC_Component_1__c != null && rel.SPC_Component_1__c != undefined && rel.SPC_Component_2__c != undefined && rel.SPC_Component_2__c != null){
							//if(rel.Is_Required__c){
								var SPCCompId = rel.SPC_Component_2__r.Sales_Product_Component_ID__c;
								var $compTable = jQuery('span[id$="'+SPCCompId+'"]').closest('table');
								var $qtyField = jQuery('span[id$="'+SPCCompId+'"]').closest('tr').find('.inputQty');
								
								var selected = false;
								jQuery('.inputQty', $compTable).each(function(idx,ele){
									if(parseInt(jQuery(ele).val()) > 0)
										selected = true;
								});
					
								//set the default quantity
								for(var qtyx = 0; qtyx < $qtyField.length; ++qtyx){
									if(jQuery($qtyField[0]).val() == 0 && rel.Default_Quantity__c != undefined && rel.Default_Quantity__c != null && ((rel.Is_Pick_One__c && !selected) || !rel.Is_Pick_One__c)){
										jQuery($qtyField[0]).val(rel.Default_Quantity__c).change();
										selected = true;
									}
								}
								
								/*
								var selected = false;
								jQuery('.inputQty', $compTable).each(function(idx,ele){
									if(parseInt(jQuery(ele).val()) > 0)
										selected = true;
								});
								*/
								var tableAsterix = $compTable.prev().find('.asterix');
								var tableComplete = $compTable.prev().find('.complete');
								var tableOptional = $compTable.prev().find('.optional');
								var headerAsterix = $compTable.parent().prev().find('.asterix');
								var headerComplete = $compTable.parent().prev().find('.complete');
								var headerOptional = $compTable.parent().prev().find('.optional');
								if(!selected){
									if(rel.Is_Required__c){
										jQuery(tableAsterix).show();
										jQuery(headerAsterix).show();
										jQuery(tableComplete).hide();
										jQuery(headerComplete).hide();
									}
									else{
										jQuery(tableOptional).show();
										jQuery(headerOptional).show();
									}
								}
								else{
									if(rel.Is_Required__c){
										jQuery(tableAsterix).hide();
										jQuery(headerAsterix).hide();
										jQuery(tableComplete).show();
										jQuery(headerComplete).show();
									}
									else{
										jQuery(tableOptional).hide();
										jQuery(headerOptional).hide();
									}
								}
							//}
						}
					}
				}
			}
		}
		
		/*
		*	Action Functions
		*/
		
		function addRemovePriceRow(row, addMode){
			var priceID = row.find('span[id$=priceID]').text();
			var offset = 0;
			
			var prevSibling = row.prev();
			while(prevSibling != null){
				var sibPriceID = prevSibling.find('span[id$=priceID]').text();
				if(sibPriceID == priceID){
					prevSibling = prevSibling.prev();
					offset++;
				}
				else{
					prevSibling = null;
				}
			}
			
			rerenderScrollTo = row.children().first().attr('id');
			
			showDialog(addMode ? 'Adding...' : 'Removing...');
			doAddRemovePriceRow(priceID, addMode, offset);
		}
		
		function getPricing(selectedProduct){
			showDialog('Loading pricing, please wait...');
			doGetPricing(selectedProduct);
		}
		
		function refreshPricing(){
			showDialog('Refreshing pricing, please wait...');
			doRefreshPricing();
		}
		
		function save(){
			showDialog('Saving...');
			doSave();
		}
		
		function grantApproval(){
			$j("input[id$=cbApproved]").each(function() {
				$j(this).prop('checked', true);
			});
			showDialog('Approving...');
			doApproval();							
		}
									
		function saveAndExit(){
			showDialog('Saving...');
			doSaveAndExit();
		}
		
		function validate(){
			showDialog('Validating...');
			runValidation();
			return false;
		}
					
		function goCurrent(){
			showDialog('Loading current solution, please wait...');
			doGetPricing('SOLUTION');
		}
		
		/*
		*	Discount
		*/
		
		function ManagedSet(){
			this.Items = new Array();
			this.hasItem = function(itm){
				for(var i = 0; i < this.length(); ++i){
					if(this.getItem(i) == itm)
						return true;
				}
				return false;
			};
			this.getIndex = function(itm){
				for(var i = 0; i < this.length(); ++i){
					if(this.getItem(i) == itm)
						return i;
				}
				return -1;	
			};
			this.getItem = function(idx){
				return this.Items[idx];	
			};
			this.addItem = function(itm){
				if(!this.hasItem(itm))
					this.Items.push(itm);
			};
			this.removeItem = function(itm){
				var idx = this.getIndex(itm);
				if(idx > -1){
					this.Items.splice(idx, 1);
				}
			};
			this.length = function(){
				return this.Items.length;		
			}
		    return this;
		}
		
		var SelectedSalesProductIDs = new ManagedSet();
		
		/* 
		Removing DLN
		function recalculating(val) {
		    if (val) {
		      	jQuery('div[id$="contentRecalculating"]').show();
				jQuery('div[id$="discountPanel"]').hide();
		    }
		    else {
		      	jQuery('div[id$="contentRecalculating"]').hide();
				jQuery('div[id$="discountPanel"]').show();
				jQuery("#txtDiscountAmt").html("$" + getDecimal(jQuery("#txtDiscountAmt").text()));
		    }
		}
		
		function updateDiscountAmt(){
			if({!opportunityLocationConfiguration.active__c} == true){
				doRecalcDiscount();
			}
		}*/
		
		function evalApprovalVisibility(){
			var icbCnt = 0;
			var mgrCnt = 0;
					
			jQuery("input[id$=approvalStatus]").each(function() {
				if(jQuery(this).val() == 'Sales Management Approval Required')
					mgrCnt++;
				else if(jQuery(this).val() == 'Offer Management Approval Required')
					icbCnt++;	
			});
			var discLevelName = '{!discountAuthorityLevel.Name}';
					
			if({!selectedProduct == 'SOLUTION'} && {!opportunityLocationConfiguration.Active__c} && (discLevelName == 'Offer Management' || (discLevelName == 'Sales Director' && icbCnt == 0 && mgrCnt >= 0))){
				jQuery("input[id$=btnApproval]").show();
			}
			
		
		}					
					
		function evalApprovalClick(){
	       	evalApprovalVisibility();
					
			return false;
	     }			
					
		
		/*
		*	Event handlers
		*/
		
		function handleQtyChange(row, multiSolutionMode){
			var pickOneVal = row.find('span[id$=pickOneValue]').text();
			var qty = row.find('input[id$=txtQty]').val();
			var isChild = row.find('span[id$=isChild]').text() == 'true';
			if(isChild) return;
					
			//Mark other pick ones as 0
			if(pickOneVal != null && pickOneVal != '' && qty != '0'){
				//todo: use multiSolutionMode to check against term before zeroing out
				
				var allRows = row.closest('table.priceList').find('tr.pricingRow');
				for(var idx = 0; idx != allRows.length; ++idx){
					var r = jQuery(allRows[idx]);
					if(r[0] != row[0] && r.find('span[id$=pickOneValue]').text() == pickOneVal){
						var rQty = r.find('[id$=txtQty]');
						if(rQty.val() != '0'){
							rQty.val('0').change();
							r.find('input[id$=updatedFlag]').attr('checked', true);
							handleChildRowQtyChanged(r);
							updateRowTotal(r);
						}
					}
				}
			}
			
			handleChildRowQtyChanged(row);
			//evaluate discount
			//Removing DLN
			//doRecalcDiscount();
		}
		
		function handleChildRowQtyChanged(row){
			var isChild = row.find('span[id$=isChild]').text() == 'true';
			var qty = row.find('input[id$=txtQty]').val();
			
			//Find children that need to have their quantities match the parent
			if(!isChild){
				var next = row.next();
				while(next.length != 0){
					if(next.find('span[id$=isChild]').text() != 'true')
						break;
					
					var nextQty = next.find('[id$=txtQty]').val();
					if(nextQty != qty){
						next.find('[id$=txtQty]').val(qty).change();
						next.find('input[id$=updatedFlag]').attr('checked', true);
						if(row.is(':visible'))
						updateRowTotal(next);
					}
					
					next = next.next();
				}
			}
		}
		
		/*
		*	Recalculation
		*/
		
		function updateRowTotal(row){
			jQuery('[id=txtMRCTotal]', row).text(multiplyToDecimal(jQuery('[id$=txtQty]', row).val(), jQuery('[id$=txtMRC]', row).val()));
			jQuery('[id=txtNRCTotal]', row).text(multiplyToDecimal(jQuery('[id$=txtQty]', row).val(), jQuery('[id$=txtNRC]', row).val()));
		}

		function updateTotals(){
			//update subtotal
			var subtotal = 0.0;
			var subTotalNRC = 0.0;
		
			jQuery("span[id$=txtMRCTotal]").each(function() {
				subtotal +=  1.0 * jQuery(this).text().replace(',', '');
			});
			jQuery("#subtotal").html("$" + getDecimal(subtotal));
		
			jQuery("span[id$=txtNRCTotal]").each(function() {
				subTotalNRC +=  1.0 * jQuery(this).text().replace(',', '');
			});
			jQuery("#subtotalNRC").html("$" + getDecimal(subTotalNRC));
					
		}
		
		/*
		*	Secondary location
		*/
		var secLocValidated = false;
		var secLocRow = null;
		
		function checksetSecondaryLocEnabled(text, val){
			secLocValidated = val;
			doChecksetSecondaryLocEnabled(secLocValidated);
			jQuery('span[id$=geocodeOutput]').text(text);
		}
		
		function disableRadioBlock_Existing(disabled){
			var secLocSelect = jQuery('#SecondaryLocationDialog').find('select[id$=secLocSelect]');
			if(disabled)
				secLocSelect.attr('disabled', 'disabled');
			else{
				secLocSelect.removeAttr('disabled');
				doChecksetSecondaryLocEnabled(true);
			}
		}
		
		function disableRadioBlock_New(disabled){
			var txtNewLocation = jQuery('#SecondaryLocationDialog').find('input[id$=txtNewLocation]');
			var txtNewLocationRoomSuite = jQuery('#SecondaryLocationDialog').find('input[id$=txtNewLocationRoomSuite]');
			var btnCreateAddress = jQuery('#SecondaryLocationDialog').find('input[id$=btnCreateAddress]');
			
			if(disabled){
				txtNewLocation.attr('disabled', 'disabled');
				txtNewLocationRoomSuite.attr('disabled', 'disabled');
				btnCreateAddress.attr('disabled', 'disabled');
				btnCreateAddress.addClass('btnDisabled');
			}
			else{
				txtNewLocation.removeAttr('disabled');
				txtNewLocationRoomSuite.removeAttr('disabled');
				btnCreateAddress.removeAttr('disabled');
				btnCreateAddress.removeClass('btnDisabled');
				doChecksetSecondaryLocEnabled(secLocValidated);
			}
		}
		
		function doChecksetSecondaryLocEnabled(enabled){
			var btn = jQuery('#SecondaryLocationDialogParent').find('#setSecondaryLoc');
			if(enabled){
				btn.removeAttr('disabled');
			}
			else{
				btn.attr('disabled', 'disabled');
			}
		}
		
		function secLocClicked(mode, source) {
			secLocRow = jQuery(source).parent();
			
			var d = jQuery(mode == 'Location' ? '#SecondaryLocationDialog' : '#SecondaryServiceLocationDialog');
			d.dialog('open');
		}
		
		function secLocGeocoded(result){
  			geoCodeComplete(result, jQuery('#SecondaryLocationDialog').find('input[id$=txtNewLocationRoomSuite]').val(), doSecLocParsed);
		}
		
		function secLocSetClicked(dialogID){
			if(dialogID == 'SecondaryLocationDialog'){
				if(jQuery('#rdNew').attr('checked') == 'checked'){
					doSaveParsedSecLoc();
				}
				else{
					var secLocSelect = jQuery('#SecondaryLocationDialog').find('select[id$=secLocSelect]');
					setSecondaryLoc(secLocSelect.find('option:selected').text(), secLocSelect.val());
				}
			}
			else if(dialogID == 'SecondaryServiceLocationDialog'){
				var secSLocSelect = jQuery('#SecondaryServiceLocationDialog').find('select[id$=secSLocSelect]');
				setSecondaryLoc(secSLocSelect.find('option:selected').text(), secSLocSelect.val());
			}
		}
		
		function setSecLocRadioButtons(){
			var rdExisting = jQuery('#rdExisting');
			var rdNew = jQuery('#rdNew');
		
			disableRadioBlock_Existing(rdExisting.attr('checked') != 'checked');
			disableRadioBlock_New(rdNew.attr('checked') != 'checked');
		}
		
		function setSecondaryLoc(txt, val){
			secLocRow.find('a[id$=secondaryLocName]').text(txt != '' ? txt : 'None');
			secLocRow.find('input[id$=secondaryLocID]').val(val);
			
			jQuery('#SecondaryLocationDialog').dialog('close');
			jQuery('#SecondaryServiceLocationDialog').dialog('close');
		}
		
		/*
		*	Helper/Util functions
		*/
		
		/* Address functions */
		function createAddressToGeoCode(af){
			var geocoder = new google.maps.Geocoder();
			var input = jQuery('input[id$=txtNewLocation]');
			
			if(input){
				showDialog('Searching...');
				geocodeAddress(input.val(), af);
			}
		}
		
		function geoCodeComplete(result, roomSuite, af){
  			if(!hasMinimumLocationRequirements(result)){
  				result.success = false;
  				result.error = 'Missing one or more minimum requirements to create a valid location.';
			}
			
			af(result.success
				,result.error
				,result.streetNum
				,result.route
				,roomSuite
				,result.city
				,result.adminArea1
				,result.postalCode
				,result.latitude
				,result.longitude);
		}
		
		/* DOM manipulation functions */
		function bindDialogBackToParent(x, p){
			jQuery(p).append(x.parent());		//Bind back to where it got pulled from so inputFields still work
		}
		
		/* Dialog functions */
		function closeDialog(){
			jQuery("#modalHolder").dialog('close');
		}
		
		function showDialog(message){
			var holderDiv = jQuery("#modalHolder");
			holderDiv.find("#modalHtml").html(message);
	    	holderDiv.dialog('open');
		}
		
		/* Math functions */
		function getDecimal(val){
			val = '' + parseFloat(val.toString().replace(',', ''), 10).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",").toString();
			
			if(val == 'NaN')
				val = '0.00';
			
			return val;
		}
		
		function multiplyToDecimal(x, y){
			return getDecimal(getDecimal(x).replace(',', '') * getDecimal(y).replace(',', ''));
		}
	</script>
	<style type="text/css">
		.LinkActive {
			color: #1797C0 !important;
		}
		
		.SubTotal{
			float:left;
			font-size:12px;
		}
		
		.SubTotalAmt{
			float:right;
			font-weight:bold;
			font-size:12px;
		}
		
		div.cssmenuPrice,
		div.cssmenuPrice a {
			margin: 0;
			padding: 0;
			border: 0;
			list-style: none;
			font-weight: normal;
			text-decoration: none;
			line-height: 1;
			font-family: 'Open Sans', sans-serif;
			font-size: 12px;
			position: relative;
			list-style-type: none;
		}
		
		div.cssmenuPrice a {
			line-height: 1.3;
		}
		
		div.cssmenuPrice {
			border-bottom: 4px solid #55AECA;
			-webkit-border-radius: 3px;
			-moz-border-radius: 3px;
			border-radius: 3px;
		}
		
		
		.inputQty{
			width: 25px;
			float:left;
		}
		
		.inputAmt{
			width:55px;	
			float:left;
			text-align:right;
		}
		
		.closedList{
			background: transparent url('{!URLFOR($Resource.ListItemClosedImage)}') no-repeat;
			height:11px;
			width:11px;
			margin-top:.7em;
		}
		
		.openedList{
			background: transparent url('{!URLFOR($Resource.ListItemOpenImage)}') no-repeat;
			height:11px;
			width:11px;
			margin-top:1em;
		}
		
		.priceName{
			font-family: Arial,Helvetica,sans-serif;
			width: 500px;
			float: left;
			padding-left: 10px;
			padding-right: 10px;
		}
		
		div.columnField, div.columnName, div.columnTotal{
			margin:0px !important;
			padding:0px !important;
		}
		
		div.columnField, div.columnTotal{
			width:10%;
		}
		
		div.columnName{
			width:40%;
		}
		
		div.columnField, div.columnName{
			float:left;
		}
		
		div.columnTotal{
			float:right;
			text-align:right;
		}
		
		div.salesSelectionRuleContainer{
			background-color:#6374ab;
			display:block;
			padding-left:10px;
			line-height:20px;
		}
		
		span.salesSelectionRuleTitle {
		    color:white;
			font-style:italic;
		}
		
		div.secLocSource {
			border-style:dotted;
			border-width:1px;
			margin:4px;
			padding:10px;
		}
		
		div.groupHeader{
			background-color:#55AECA;
			line-height:30px;
			font-weight:bold;
			color:#FFF;
			padding-left:15px;
			cursor:pointer;
		}
		div.groupHeader:hover{
			background: #1876CD;
		}
		
		div.group{
			display:none;
			border:solid 1px #ccc;
		}
		.pricingHeader{
			text-align:center;
			font-weight:bold;
			font-size:1em;
			background-color:#ccc;
		}
		.pricingRow{
			line-height:40px;
		}
		.asterix{
			color:red;
			font-weight:bold;
			display:none;
			font-size:.9em;
			padding-top:5px;
		}
		.complete{
			color:green;
			font-weight:bold;
			display:none;
			font-size:.9em;
			padding-top:5px;
		}
		.optional{
			color:orange;
			display:none;
			font-size:.9em;
			padding-top:5px;
		}
		.quotePricing{
			background-color:#FFFCDC !important;
		}
		span.bigFont{
			font-size:1.5em;
		}
	</style>
</apex:page>