<apex:component >
	<script type="text/javascript">
		var mldaLvl1 = {name: "user", description: "Approved",approved:true};
		var mldaLvl2 = {name: "Sales Management", description: "Sales Management Approval Required",approved:false};
		var mldaLvl2Approved = {name: "Sales Management", description: "Sales Management Approval Required",approved:true};
		var mldaLvl3 = {name: "Offer Management", description: "Offer Management Approval Required", approved:false};
		var mldaLvl3Approved = {name: "Offer Management", description: "Offer Management Approval Required", approved:true};
		//var mldaLvlDefault = {name: "default", description: "default"};
		
		function mldaOnMRRChange(mrrInput, event){
			var row = jQuery(mrrInput).closest('tr');
			
			var txtQty = row.find('input[id$=' + event.data.qtyID + ']');
			var txtStatus = row.find('input[id$=' + event.data.statusID + ']');
			var approvedCB = row.find('input[id$=' + event.data.cbApprovedID + ']');
			
			if(txtQty.length > 0 && txtStatus.length > 0){
				var newLvl = getMLDAApprovalLevel(jQuery(mrrInput).val(), txtQty.text(), event.data.mrrFloor, event.data.mrrPersisted, txtStatus.text(),event.data.mrcIsQuote,event.data.mrcList,approvedCB);
				txtStatus.text(newLvl.description);
				txtStatus.val(newLvl.description);
				approvedCB.prop('checked', newLvl.approved);
			}
		}
		
		function getMLDAApprovalLevel(mrr, qty, mrrFloor, mrrPersisted, currentStatus,mrcIsQuote,mrcList,approvedCB){
			var mrrPersistedFloat = parseFloat(mrrPersisted.replace(/,/g,''));
			var mrrFloat = parseFloat(mrr.replace(/,/g,''));
			var mrrFloorFloat =  parseFloat(mrrFloor.replace(/,/g,''));
			var mrrListFloat = parseFloat(mrcList.replace(/,/g,''));
		
			if(mrcIsQuote == 'true' && (mrrFloat < mrrPersistedFloat || !approvedCB.is(':checked'))){
				//if quote item is downpriced at all set back to offer management	
				return mldaLvl3;
			}
			else if(mrcIsQuote == 'false')
			{
				
				var totalDiscountAmt = mrrListFloat - mrrFloorFloat;
				var discAmountAvailable = parseFloat(discAuthortityPercent/100)*totalDiscountAmt;
				var discountAmountRemaining = discAmountAvailable - (mrrListFloat - mrrFloat);
				var offerDiscAmt = totalDiscountAmt - (mrrListFloat - mrrFloat);
			
				if(discountAmountRemaining < 0 && offerDiscAmt <0 && (mrrFloat < mrrPersistedFloat || !approvedCB.is(':checked') || currentStatus == 'Approved')){
					return mldaLvl3;
				}
				else if(discountAmountRemaining < 0 && offerDiscAmt >= 0 &&  (mrrFloat < mrrPersistedFloat || !approvedCB.is(':checked') ||  currentStatus == 'Approved')){
					return mldaLvl2;
				}
			}
				
			if(currentStatus == mldaLvl3.description && approvedCB.is(':checked'))
				return mldaLvl3Approved;
			else if(currentStatus == mldaLvl2.description && approvedCB.is(':checked'))
				return mldaLvl2Approved;
			else
				return mldaLvl1;
		}
		
		function mldaBindToRow(mrrInput, qtyID, statusID, mrrFloor, mrrPersisted,mrcIsQuote,cbApprovedID,mrcList){
			var row = jQuery(mrrInput).closest('tr');
			var txtQty = row.find('input[id$=' + qtyID + ']');
			var txtStatus = row.find('input[id$=' + statusID + ']');
			var approvedCB = row.find('input[id$=' + cbApprovedID + ']');
			
			if(txtQty.length > 0 && txtStatus.length > 0 && mrrFloor != '' && mrrFloor != null && mrrPersisted != '' && mrrPersisted != null){
				if((txtStatus.val() == '')  && mrcIsQuote == 'true'){
					txtStatus.val(mldaLvl3.description);
					approvedCB.prop('checked', mldaLvl3.approved);
					txtStatus.text(mldaLvl3.description);
				}
				else if(txtStatus.val() == ''){
					txtStatus.val(mldaLvl1.description);		//Default here, we will apply logic later
					txtStatus.text(mldaLvl1.description);
					approvedCB.prop('checked', mldaLvl1.approved)
				}
				
				jQuery(mrrInput).change({ qtyID:qtyID
										,statusID:statusID
										,mrrFloor:mrrFloor
										,mrrPersisted:mrrPersisted
										,mrcIsQuote:mrcIsQuote
										,mrcList:mrcList
										,cbApprovedID:cbApprovedID
									}
										,function(event){ mldaOnMRRChange(jQuery(this), event); });
			}
			else{
				console.log('Invalid parameters passed to MLDA binding function. Row is being skipped.');
			}
		}
	</script>
</apex:component>