<apex:component controller="RecordSelectorController">
	<!-- jQuery must be included by any consuming page -->
    <apex:includeScript value="{!URLFOR($Resource.DynamicTableZip,'DynamicTable.js')}"/>
	
	<apex:attribute name="sObjectType" description="sObject type to select" assignTo="{!sObjType}" type="String" required="true"/>
	<apex:attribute name="fields" description="What fields should we display in order" assignTo="{!objFields}" type="String" required="false" default="DEFAULT"/>
	<apex:attribute name="useRecentRecords" description="Use recent records when no where clause exists" assignTo="{!useRecent}" type="Boolean" required="false" default="false"/>
	<apex:attribute name="whereClause" description="Custom where clause" assignTo="{!customWhere}" type="String" required="false"/>
	<apex:attribute name="multiSelectMode" description="Select one or many records" assignTo="{!multiSelect}" type="Boolean" required="false"/>
	<apex:attribute name="idSet" description="Objects IDs that are (in)valid selections depending on value of 'idsAreValid' attribute" assignTo="{!objIDs}" type="Id[]" required="false" />
	<apex:attribute name="idsAreValid" description="Determins if 'idSet' contains valid or invalid Ids" assignTo="{!objIDsAreValid}" type="Boolean" required="false" default="false" />
	<apex:attribute name="openLinksInTabs" description="If set the links generated will open in new tabs, if not they will prompt the user when leaving the page" type="Boolean" required="false" default="false" />
	<apex:attribute name="useSoslSearch" description="Will use filter criteria to sosl search instead of filtering" assignTo="{!useSosl}" type="Boolean" required="false" default="false" />
	
	<apex:form id="recordSelector_frm">
		<apex:dynamicComponent componentValue="{!sharedDynamicComponents}"/>
		<apex:outputPanel id="dtPanel">
			<apex:dynamicComponent componentValue="{!dt.GetDynamicTable}"/>
			<br/>
			<apex:outputPanel rendered="{!NOT(ISBLANK(sObjType))}">
				<apex:inputText value="{!filter}" style="float:left">
					<apex:commandLink value="Filter" onclick="recordSelector_reset(); return false;"/>
				</apex:inputText>
				<apex:commandLink value="{!IF(viewAllMode, 'View Selected Only', 'View All')}" action="{!ToggleViewMode}" reRender="dtPanel" style="float:right" rendered="{!multiSelectMode == true}"/>
				<div style="clear:both;"></div>
			</apex:outputPanel>
			<script type="text/javascript">
				jQuery(document).ready(function(){
					jQuery('[id$="dtPanel"]').find('table > tbody > tr > td > a').click(function(){
						if({!openLinksInTabs}){
							window.open(jQuery(this).attr('href'));
						}
						else{
							return confirm('You will be redirected to "' + jQuery(this).text() + '."');
						}
						
						return false;
					});
				});
			</script>
		</apex:outputPanel>
		<apex:outputPanel id="dtSpinner" style="display:none;">
			<apex:image value="{!$Resource.Spinner}" width="36" height="36" />
		</apex:outputPanel>
		<apex:actionFunction name="recordSelector_gatherSelection" action="{!GatherSelection}" oncomplete="recordSelector_triggerSelection({!selection});"/>
		<apex:actionFunction name="recordSelector_refresh" reRender="dtPanel, dtSpinner"/>
		<apex:actionFunction name="doRecordSelector_reset" action="{!reset}" reRender="dtPanel, dtSpinner"/>
		
		<script type="text/javascript">
			jQuery(document).ready(function(){
				recordSelector_wait();
				recordSelector_refresh();
			});
			
			function recordSelector_select(source){
				var row = jQuery(source).closest('tr');
				
				recordSelector_triggerSelection(recordSelector_getRecordFromRow(row));
			}
			
			function recordSelector_triggerSelection(records){
				var e = jQuery.Event("recordSelected", records);
				var thisComponent = jQuery('form[id$="recordSelector_frm"]').closest('span');
				thisComponent.trigger(e);
			}
			
			function recordSelector_getRecordFromRow(row){
				var recordID = jQuery(row).find('span[id$="recordID"]').text();
				var label = jQuery(row).find('span[id$="label"]').text();
				return { id:recordID, label:label};
			}
			
			function recordSelector_wait(){
				jQuery('form[id$="recordSelector_frm"]').find('[id$="dtPanel"]').hide();
				jQuery('form[id$="recordSelector_frm"]').find('[id$="dtSpinner"]').show();
				//jQuery('form[id$="recordSelector_frm"]').find('[id$="dtPanel"]').find('input[id$="chkSelected"]').prop("disabled", true);
			}
			
			function recordSelector_reset(){
				recordSelector_wait();
				doRecordSelector_reset();
			}
		</script>
	</apex:form>
</apex:component>